webpackHotUpdate("static/development/pages/me.js",{

/***/ "./utils/index.js":
/*!************************!*\
  !*** ./utils/index.js ***!
  \************************/
/*! exports provided: connectServer, groupPages, savePage */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"connectServer\", function() { return connectServer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"groupPages\", function() { return groupPages; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"savePage\", function() { return savePage; });\n/* harmony import */ var _babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/toConsumableArray */ \"./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\");\n/* harmony import */ var _index_new__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index_new */ \"./utils/index_new.js\");\n\n\n\nvar connectServerOld = function connectServerOld(callback) {\n  var bridge = document.getElementById('bridge');\n  bridge.addEventListener('sync_data', function (e) {\n    var eventData = e.target.innerText;\n    var data = {};\n\n    try {\n      data = JSON.parse(eventData);\n    } catch (e) {}\n\n    var pages = [];\n    var pageObject = {};\n    Object.keys(data).forEach(function (key) {\n      var currentPage = data[key];\n\n      try {\n        var tempData = typeof data[key] === 'object' && currentPage.plainData ? currentPage.plainData : decryptedData(typeof data[key] === 'object' ? data[key].data : data[key]);\n        tempData.keys = data[key].keys;\n        pages.push(tempData);\n        pageObject[key] = tempData;\n      } catch (e) {\n        console.error(e);\n      }\n    });\n    callback({\n      connected: true,\n      pages: pages,\n      data: pageObject,\n      originData: data\n    });\n  });\n  fetchData();\n  document.addEventListener('visibilitychange', function () {\n    fetchData();\n  });\n\n  function decryptedData(data) {\n    var result = {};\n\n    try {\n      result = JSON.parse(decodeURI(atob(data)));\n    } catch (e) {}\n\n    return result;\n  }\n};\n\nvar groupPagesOld = function groupPagesOld(groupType, pages) {\n  var categories = new Map();\n\n  var groupBy = function groupBy(fn) {\n    var groupPagesObject = {};\n    var selectedGroupsKey = new Set();\n    pages.forEach(function (page) {\n      categories.set(page.category || 'default', {\n        label: page.category || 'default',\n        desc: ''\n      });\n      var groupKey = fn(page);\n      var tempPages = groupPagesObject[groupKey] ? groupPagesObject[groupKey].pages : [];\n      groupPagesObject[groupKey] = {\n        name: groupKey,\n        pages: tempPages,\n        matched: tempPages.length\n      };\n      groupPagesObject[groupKey].pages.push(page);\n      groupPagesObject[groupKey].matched = groupPagesObject[groupKey].pages.length;\n      selectedGroupsKey.add(groupKey);\n    });\n\n    var arr = Object(_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(categories.values());\n\n    return {\n      groupPagesObject: groupPagesObject,\n      categories: arr,\n      groupKeys: Array.from(selectedGroupsKey)\n    };\n  };\n\n  var result = {};\n\n  switch (groupType) {\n    case 0:\n      result = groupBy(function (page) {\n        return page.keys[0] || 'default';\n      });\n      break;\n\n    case 1:\n      result = groupBy(function (page) {\n        var groupKey = 'unknow';\n\n        try {\n          groupKey = new Date(page.lastModified).toLocaleDateString();\n        } catch (e) {}\n\n        return groupKey;\n      });\n      break;\n\n    case 2:\n      result = groupBy(function (page) {\n        return page.category || 'default';\n      });\n      break;\n\n    default:\n      result = groupBy(function (page) {\n        return page.keys[0] || 'default';\n      });\n  }\n\n  return result;\n};\n\nvar savePageOld = function savePageOld(page) {\n  var customEvent = document.createEvent('Event');\n  customEvent.initEvent('save_page', true, true);\n  var bridge = document.getElementById('bridge');\n  var saveData = {\n    key: page.url || page.key,\n    keys: page.keys,\n    plainData: page.plainData\n  };\n  bridge.innerText = JSON.stringify(saveData);\n  bridge.dispatchEvent(customEvent);\n  setTimeout(function () {\n    fetchData();\n  }, 1000);\n};\n\nfunction fetchData() {\n  var bridge = document.getElementById('bridge');\n  var customEvent = document.createEvent('Event');\n  customEvent.initEvent('get_data', true, true);\n  bridge.dispatchEvent(customEvent);\n}\n\nfunction isNew() {\n  var currentVersion = document.documentElement.dataset['version'] ? document.documentElement.dataset['version'] : '0.0.0';\n  var result = compareVersion('0.10.4', currentVersion);\n  return result > 0;\n}\n\nfunction compareVersion() {\n  var first = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '0.0.0';\n  var second = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (first === second) {\n    return 0;\n  }\n\n  var firstVersion = first.split('.');\n  var secondVersion = second.split('.');\n  var large = -1;\n\n  for (var i = 0; i < secondVersion.length; i++) {\n    if (secondVersion[i] > firstVersion[i]) {\n      large = 1;\n      break;\n    }\n  }\n\n  return large;\n} // 兼容历史接口和新接口\n\n\nvar connectServer = function connectServer() {\n  _index_new__WEBPACK_IMPORTED_MODULE_1__[\"connectServerNew\"].apply(void 0, arguments);\n  connectServerOld.apply(void 0, arguments);\n};\nvar groupPages = function groupPages() {\n  return isNew() ? _index_new__WEBPACK_IMPORTED_MODULE_1__[\"groupPagesNew\"].apply(void 0, arguments) : groupPagesOld.apply(void 0, arguments);\n};\nvar savePage = function savePage() {\n  savePageOld.apply(void 0, arguments);\n  _index_new__WEBPACK_IMPORTED_MODULE_1__[\"savePageNew\"].apply(void 0, arguments);\n};\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports_1 = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports_1, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports_1)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports_1;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports_1)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi91dGlscy9pbmRleC5qcz80MjJkIl0sIm5hbWVzIjpbImNvbm5lY3RTZXJ2ZXJPbGQiLCJjYWxsYmFjayIsImJyaWRnZSIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJhZGRFdmVudExpc3RlbmVyIiwiZSIsImV2ZW50RGF0YSIsInRhcmdldCIsImlubmVyVGV4dCIsImRhdGEiLCJKU09OIiwicGFyc2UiLCJwYWdlcyIsInBhZ2VPYmplY3QiLCJPYmplY3QiLCJrZXlzIiwiZm9yRWFjaCIsImtleSIsImN1cnJlbnRQYWdlIiwidGVtcERhdGEiLCJwbGFpbkRhdGEiLCJkZWNyeXB0ZWREYXRhIiwicHVzaCIsImNvbnNvbGUiLCJlcnJvciIsImNvbm5lY3RlZCIsIm9yaWdpbkRhdGEiLCJmZXRjaERhdGEiLCJyZXN1bHQiLCJkZWNvZGVVUkkiLCJhdG9iIiwiZ3JvdXBQYWdlc09sZCIsImdyb3VwVHlwZSIsImNhdGVnb3JpZXMiLCJNYXAiLCJncm91cEJ5IiwiZm4iLCJncm91cFBhZ2VzT2JqZWN0Iiwic2VsZWN0ZWRHcm91cHNLZXkiLCJTZXQiLCJwYWdlIiwic2V0IiwiY2F0ZWdvcnkiLCJsYWJlbCIsImRlc2MiLCJncm91cEtleSIsInRlbXBQYWdlcyIsIm5hbWUiLCJtYXRjaGVkIiwibGVuZ3RoIiwiYWRkIiwiYXJyIiwidmFsdWVzIiwiZ3JvdXBLZXlzIiwiQXJyYXkiLCJmcm9tIiwiRGF0ZSIsImxhc3RNb2RpZmllZCIsInRvTG9jYWxlRGF0ZVN0cmluZyIsInNhdmVQYWdlT2xkIiwiY3VzdG9tRXZlbnQiLCJjcmVhdGVFdmVudCIsImluaXRFdmVudCIsInNhdmVEYXRhIiwidXJsIiwic3RyaW5naWZ5IiwiZGlzcGF0Y2hFdmVudCIsInNldFRpbWVvdXQiLCJpc05ldyIsImN1cnJlbnRWZXJzaW9uIiwiZG9jdW1lbnRFbGVtZW50IiwiZGF0YXNldCIsImNvbXBhcmVWZXJzaW9uIiwiZmlyc3QiLCJzZWNvbmQiLCJmaXJzdFZlcnNpb24iLCJzcGxpdCIsInNlY29uZFZlcnNpb24iLCJsYXJnZSIsImkiLCJjb25uZWN0U2VydmVyIiwiY29ubmVjdFNlcnZlck5ldyIsImdyb3VwUGFnZXMiLCJncm91cFBhZ2VzTmV3Iiwic2F2ZVBhZ2UiLCJzYXZlUGFnZU5ldyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUVBLElBQU1BLGdCQUFnQixHQUFHLFNBQW5CQSxnQkFBbUIsQ0FBU0MsUUFBVCxFQUFrQjtBQUN6QyxNQUFNQyxNQUFNLEdBQUdDLFFBQVEsQ0FBQ0MsY0FBVCxDQUF3QixRQUF4QixDQUFmO0FBQ0FGLFFBQU0sQ0FBQ0csZ0JBQVAsQ0FBd0IsV0FBeEIsRUFBcUMsVUFBQ0MsQ0FBRCxFQUFNO0FBQ3pDLFFBQU1DLFNBQVMsR0FBR0QsQ0FBQyxDQUFDRSxNQUFGLENBQVNDLFNBQTNCO0FBQ0EsUUFBSUMsSUFBSSxHQUFHLEVBQVg7O0FBQ0EsUUFBRztBQUNEQSxVQUFJLEdBQUdDLElBQUksQ0FBQ0MsS0FBTCxDQUFXTCxTQUFYLENBQVA7QUFDRCxLQUZELENBRUMsT0FBT0QsQ0FBUCxFQUFVLENBRVY7O0FBQ0QsUUFBTU8sS0FBSyxHQUFHLEVBQWQ7QUFDQSxRQUFNQyxVQUFVLEdBQUcsRUFBbkI7QUFDQUMsVUFBTSxDQUFDQyxJQUFQLENBQVlOLElBQVosRUFBa0JPLE9BQWxCLENBQTBCLFVBQUNDLEdBQUQsRUFBTztBQUMvQixVQUFNQyxXQUFXLEdBQUdULElBQUksQ0FBQ1EsR0FBRCxDQUF4Qjs7QUFDQSxVQUFHO0FBQ0QsWUFBTUUsUUFBUSxHQUFJLE9BQU9WLElBQUksQ0FBQ1EsR0FBRCxDQUFYLEtBQW1CLFFBQW5CLElBQStCQyxXQUFXLENBQUNFLFNBQTVDLEdBQXlERixXQUFXLENBQUNFLFNBQXJFLEdBQ2ZDLGFBQWEsQ0FBQyxPQUFPWixJQUFJLENBQUNRLEdBQUQsQ0FBWCxLQUFtQixRQUFuQixHQUE4QlIsSUFBSSxDQUFDUSxHQUFELENBQUosQ0FBVVIsSUFBeEMsR0FBK0NBLElBQUksQ0FBQ1Es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QjtBQUNoQixXQUFPLENBQVA7QUFDRDs7QUFDRCxNQUFNQyxZQUFZLEdBQUdGLEtBQUssQ0FBQ0csS0FBTixDQUFZLEdBQVosQ0FBckI7QUFDQSxNQUFNQyxhQUFhLEdBQUdILE1BQU0sQ0FBQ0UsS0FBUCxDQUFhLEdBQWIsQ0FBdEI7QUFDQSxNQUFJRSxLQUFLLEdBQUcsQ0FBQyxDQUFiOztBQUNBLE9BQUksSUFBSUMsQ0FBQyxHQUFDLENBQVYsRUFBYUEsQ0FBQyxHQUFDRixhQUFhLENBQUM1QixNQUE3QixFQUFxQzhCLENBQUMsRUFBdEMsRUFBMEM7QUFDeEMsUUFBR0YsYUFBYSxDQUFDRSxDQUFELENBQWIsR0FBaUJKLFlBQVksQ0FBQ0ksQ0FBRCxDQUFoQyxFQUFvQztBQUNsQ0QsV0FBSyxHQUFHLENBQVI7QUFDQTtBQUNEO0FBQ0Y7O0FBQ0QsU0FBT0EsS0FBUDtBQUNELEMsQ0FFRDs7O0FBQ08sSUFBTUUsYUFBYSxHQUFHLFNBQWhCQSxhQUFnQixHQUFrQjtBQUM3Q0MsNkRBQWdCLE1BQWhCO0FBQ0FsRixrQkFBZ0IsTUFBaEI7QUFDRCxDQUhNO0FBS0EsSUFBTW1GLFVBQVUsR0FBRyxTQUFiQSxVQUFhLEdBQWtCO0FBQzFDLFNBQU9kLEtBQUssS0FBR2Usd0RBQWEsTUFBYixtQkFBSCxHQUF5QnBELGFBQWEsTUFBYixtQkFBckM7QUFDRCxDQUZNO0FBSUEsSUFBTXFELFFBQVEsR0FBRyxTQUFYQSxRQUFXLEdBQWtCO0FBQ3hDekIsYUFBVyxNQUFYO0FBQ0EwQix3REFBVyxNQUFYO0FBQ0QsQ0FITSIsImZpbGUiOiIuL3V0aWxzL2luZGV4LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtjb25uZWN0U2VydmVyTmV3LGdyb3VwUGFnZXNOZXcsc2F2ZVBhZ2VOZXd9IGZyb20gJy4vaW5kZXhfbmV3JztcblxuY29uc3QgY29ubmVjdFNlcnZlck9sZCA9IGZ1bmN0aW9uKGNhbGxiYWNrKXtcbiAgY29uc3QgYnJpZGdlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2JyaWRnZScpO1xuICBicmlkZ2UuYWRkRXZlbnRMaXN0ZW5lcignc3luY19kYXRhJywgKGUpPT4ge1xuICAgIGNvbnN0IGV2ZW50RGF0YSA9IGUudGFyZ2V0LmlubmVyVGV4dDtcbiAgICBsZXQgZGF0YSA9IHt9O1xuICAgIHRyeXtcbiAgICAgIGRhdGEgPSBKU09OLnBhcnNlKGV2ZW50RGF0YSlcbiAgICB9Y2F0Y2ggKGUpIHtcblxuICAgIH1cbiAgICBjb25zdCBwYWdlcyA9IFtdO1xuICAgIGNvbnN0IHBhZ2VPYmplY3QgPSB7fTtcbiAgICBPYmplY3Qua2V5cyhkYXRhKS5mb3JFYWNoKChrZXkpPT57XG4gICAgICBjb25zdCBjdXJyZW50UGFnZSA9IGRhdGFba2V5XTtcbiAgICAgIHRyeXtcbiAgICAgICAgY29uc3QgdGVtcERhdGEgPSAodHlwZW9mIGRhdGFba2V5XT09PSdvYmplY3QnICYmIGN1cnJlbnRQYWdlLnBsYWluRGF0YSkgPyBjdXJyZW50UGFnZS5wbGFpbkRhdGEgOlxuICAgICAgICAgIGRlY3J5cHRlZERhdGEodHlwZW9mIGRhdGFba2V5XT09PSdvYmplY3QnID8gZGF0YVtrZXldLmRhdGEgOiBkYXRhW2tleV0pO1xuICAgICAgICB0ZW1wRGF0YS5rZXlzID0gZGF0YVtrZXldLmtleXM7XG4gICAgICAgIHBhZ2VzLnB1c2godGVtcERhdGEpO1xuICAgICAgICBwYWdlT2JqZWN0W2tleV0gPSB0ZW1wRGF0YTtcbiAgICAgIH1jYXRjaCAoZSkge1xuICAgICAgICBjb25zb2xlLmVycm9yKGUpXG4gICAgICB9XG4gICAgfSk7XG4gICAgY2FsbGJhY2soe1xuICAgICAgY29ubmVjdGVkOiB0cnVlLFxuICAgICAgcGFnZXM6IHBhZ2VzLFxuICAgICAgZGF0YTogcGFnZU9iamVjdCxcbiAgICAgIG9yaWdpbkRhdGE6IGRhdGEsXG4gICAgfSk7XG4gIH0pO1xuXG4gIGZldGNoRGF0YSgpO1xuXG4gIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ3Zpc2liaWxpdHljaGFuZ2UnLCAoKT0+IHtcbiAgICBmZXRjaERhdGEoKTtcbiAgfSk7XG5cblxuXG4gIGZ1bmN0aW9uIGRlY3J5cHRlZERhdGEoZGF0YSkge1xuICAgIGxldCByZXN1bHQgPSB7fTtcbiAgICB0cnl7XG4gICAgICByZXN1bHQgPSBKU09OLnBhcnNlKGRlY29kZVVSSShhdG9iKGRhdGEpKSk7XG4gICAgfWNhdGNoIChlKSB7XG5cbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfVxufTtcblxuY29uc3QgZ3JvdXBQYWdlc09sZCA9IGZ1bmN0aW9uIChncm91cFR5cGUscGFnZXMpIHtcbiAgY29uc3QgY2F0ZWdvcmllcyA9IG5ldyBNYXAoKTtcbiAgY29uc3QgZ3JvdXBCeSA9IChmbik9PntcbiAgICBjb25zdCBncm91cFBhZ2VzT2JqZWN0ID0ge307XG4gICAgbGV0IHNlbGVjdGVkR3JvdXBzS2V5ID0gbmV3IFNldCgpO1xuICAgIHBhZ2VzLmZvckVhY2goKHBhZ2UpPT57XG4gICAgICBjYXRlZ29yaWVzLnNldChwYWdlLmNhdGVnb3J5fHwnZGVmYXVsdCcse1xuICAgICAgICBsYWJlbDpwYWdlLmNhdGVnb3J5fHwnZGVmYXVsdCcsXG4gICAgICAgIGRlc2M6JycsXG4gICAgICB9KTtcbiAgICAgIGNvbnN0IGdyb3VwS2V5ID0gZm4ocGFnZSk7XG4gICAgICBjb25zdCB0ZW1wUGFnZXMgPSBncm91cFBhZ2VzT2JqZWN0W2dyb3VwS2V5XT9ncm91cFBhZ2VzT2JqZWN0W2dyb3VwS2V5XS5wYWdlcyA6IFtdO1xuXG4gICAgICBncm91cFBhZ2VzT2JqZWN0W2dyb3VwS2V5XSA9IHtcbiAgICAgICAgbmFtZTogZ3JvdXBLZXksXG4gICAgICAgIHBhZ2VzOiB0ZW1wUGFnZXMsXG4gICAgICAgIG1hdGNoZWQ6IHRlbXBQYWdlcy5sZW5ndGgsXG4gICAgICB9O1xuICAgICAgZ3JvdXBQYWdlc09iamVjdFtncm91cEtleV0ucGFnZXMucHVzaChwYWdlKTtcbiAgICAgIGdyb3VwUGFnZXNPYmplY3RbZ3JvdXBLZXldLm1hdGNoZWQgPSBncm91cFBhZ2VzT2JqZWN0W2dyb3VwS2V5XS5wYWdlcy5sZW5ndGg7XG4gICAgICBzZWxlY3RlZEdyb3Vwc0tleS5hZGQoZ3JvdXBLZXkpO1xuICAgIH0pO1xuICAgIGNvbnN0IGFyciA9IFsuLi5jYXRlZ29yaWVzLnZhbHVlcygpXTtcbiAgICByZXR1cm4ge1xuICAgICAgZ3JvdXBQYWdlc09iamVjdDpncm91cFBhZ2VzT2JqZWN0LFxuICAgICAgY2F0ZWdvcmllczogYXJyLFxuICAgICAgZ3JvdXBLZXlzOiBBcnJheS5mcm9tKHNlbGVjdGVkR3JvdXBzS2V5KSxcbiAgICB9XG4gIH07XG5cbiAgbGV0IHJlc3VsdCA9IHt9O1xuXG4gIHN3aXRjaCAoZ3JvdXBUeXBlKSB7XG4gICAgY2FzZSAwOlxuICAgICAgcmVzdWx0ID0gZ3JvdXBCeShmdW5jdGlvbiAocGFnZSkge1xuICAgICAgICByZXR1cm4gcGFnZS5rZXlzWzBdfHwnZGVmYXVsdCc7XG4gICAgICB9KTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgMTpcbiAgICAgIHJlc3VsdCA9IGdyb3VwQnkoZnVuY3Rpb24gKHBhZ2UpIHtcbiAgICAgICAgbGV0IGdyb3VwS2V5ID0gJ3Vua25vdyc7XG4gICAgICAgIHRyeXtcbiAgICAgICAgICBncm91cEtleSA9IG5ldyBEYXRlKHBhZ2UubGFzdE1vZGlmaWVkKS50b0xvY2FsZURhdGVTdHJpbmcoKTtcbiAgICAgICAgfWNhdGNoIChlKSB7XG5cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZ3JvdXBLZXk7XG4gICAgICB9KTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgMjpcbiAgICAgIHJlc3VsdCA9IGdyb3VwQnkoZnVuY3Rpb24gKHBhZ2UpIHtcbiAgICAgICAgcmV0dXJuIHBhZ2UuY2F0ZWdvcnkgfHwgJ2RlZmF1bHQnO1xuICAgICAgfSk7XG4gICAgICBicmVhaztcbiAgICBkZWZhdWx0OlxuICAgICAgcmVzdWx0ID0gZ3JvdXBCeShmdW5jdGlvbiAocGFnZSkge1xuICAgICAgICByZXR1cm4gcGFnZS5rZXlzWzBdfHwnZGVmYXVsdCc7XG4gICAgICB9KTtcbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufTtcblxuY29uc3Qgc2F2ZVBhZ2VPbGQgPSBmdW5jdGlvbiAocGFnZSkge1xuICBjb25zdCBjdXN0b21FdmVudCA9IGRvY3VtZW50LmNyZWF0ZUV2ZW50KCdFdmVudCcpO1xuICBjdXN0b21FdmVudC5pbml0RXZlbnQoJ3NhdmVfcGFnZScsIHRydWUsIHRydWUpO1xuICBjb25zdCBicmlkZ2UgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYnJpZGdlJyk7XG5cbiAgY29uc3Qgc2F2ZURhdGEgPSB7XG4gICAga2V5OiBwYWdlLnVybHx8cGFnZS5rZXksXG4gICAga2V5czogcGFnZS5rZXlzLFxuICAgIHBsYWluRGF0YTogcGFnZS5wbGFpbkRhdGEsXG4gIH07XG5cbiAgYnJpZGdlLmlubmVyVGV4dCA9IEpTT04uc3RyaW5naWZ5KHNhdmVEYXRhKTtcbiAgYnJpZGdlLmRpc3BhdGNoRXZlbnQoY3VzdG9tRXZlbnQpO1xuICBzZXRUaW1lb3V0KCgpPT57XG4gICAgZmV0Y2hEYXRhKCk7XG4gIH0sMTAwMClcbn07XG5cblxuZnVuY3Rpb24gZmV0Y2hEYXRhKCkge1xuICBjb25zdCBicmlkZ2UgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYnJpZGdlJyk7XG4gIGNvbnN0IGN1c3RvbUV2ZW50ID0gZG9jdW1lbnQuY3JlYXRlRXZlbnQoJ0V2ZW50Jyk7XG4gIGN1c3RvbUV2ZW50LmluaXRFdmVudCgnZ2V0X2RhdGEnLCB0cnVlLCB0cnVlKTtcbiAgYnJpZGdlLmRpc3BhdGNoRXZlbnQoY3VzdG9tRXZlbnQpO1xufVxuXG5mdW5jdGlvbiBpc05ldygpIHtcbiAgY29uc3QgY3VycmVudFZlcnNpb24gPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuZGF0YXNldFsndmVyc2lvbiddP2RvY3VtZW50LmRvY3VtZW50RWxlbWVudC5kYXRhc2V0Wyd2ZXJzaW9uJ106JzAuMC4wJztcbiAgY29uc3QgcmVzdWx0ID0gY29tcGFyZVZlcnNpb24oJzAuMTAuNCcsY3VycmVudFZlcnNpb24pO1xuICByZXR1cm4gcmVzdWx0PjA7XG59XG5cbmZ1bmN0aW9uIGNvbXBhcmVWZXJzaW9uKGZpcnN0PScwLjAuMCcsc2Vjb25kKSB7XG4gIGlmKGZpcnN0PT09c2Vjb25kKXtcbiAgICByZXR1cm4gMDtcbiAgfVxuICBjb25zdCBmaXJzdFZlcnNpb24gPSBmaXJzdC5zcGxpdCgnLicpO1xuICBjb25zdCBzZWNvbmRWZXJzaW9uID0gc2Vjb25kLnNwbGl0KCcuJyk7XG4gIGxldCBsYXJnZSA9IC0xO1xuICBmb3IobGV0IGk9MDsgaTxzZWNvbmRWZXJzaW9uLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYoc2Vjb25kVmVyc2lvbltpXT5maXJzdFZlcnNpb25baV0pe1xuICAgICAgbGFyZ2UgPSAxO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG4gIHJldHVybiBsYXJnZTtcbn1cblxuLy8g5YW85a655Y6G5Y+y5o6l5Y+j5ZKM5paw5o6l5Y+jXG5leHBvcnQgY29uc3QgY29ubmVjdFNlcnZlciA9IGZ1bmN0aW9uICguLi5hcmcpIHtcbiAgY29ubmVjdFNlcnZlck5ldyguLi5hcmcpO1xuICBjb25uZWN0U2VydmVyT2xkKC4uLmFyZyk7XG59O1xuXG5leHBvcnQgY29uc3QgZ3JvdXBQYWdlcyA9IGZ1bmN0aW9uICguLi5hcmcpIHtcbiAgcmV0dXJuIGlzTmV3KCk/Z3JvdXBQYWdlc05ldyguLi5hcmcpOmdyb3VwUGFnZXNPbGQoLi4uYXJnKTtcbn07XG5cbmV4cG9ydCBjb25zdCBzYXZlUGFnZSA9IGZ1bmN0aW9uICguLi5hcmcpIHtcbiAgc2F2ZVBhZ2VPbGQoLi4uYXJnKTtcbiAgc2F2ZVBhZ2VOZXcoLi4uYXJnKTtcbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./utils/index.js\n");

/***/ })

})