webpackHotUpdate("static/development/pages/index.js",{

/***/ "./pages/index.js":
/*!************************!*\
  !*** ./pages/index.js ***!
  \************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Index; });\n/* harmony import */ var _babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/createClass */ \"./node_modules/@babel/runtime/helpers/esm/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/assertThisInitialized */ \"./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inherits */ \"./node_modules/@babel/runtime/helpers/esm/inherits.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/esm/possibleConstructorReturn */ \"./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/esm/getPrototypeOf */ \"./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! styled-jsx/style */ \"./node_modules/styled-jsx/style.js\");\n/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(styled_jsx_style__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! next/head */ \"./node_modules/next/dist/next-server/lib/head.js\");\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(next_head__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var github_api__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! github-api */ \"./node_modules/github-api/dist/components/GitHub.js\");\n/* harmony import */ var github_api__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(github_api__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! axios */ \"./node_modules/axios/index.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var _styles_index_scss__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../styles/index.scss */ \"./styles/index.scss\");\n/* harmony import */ var _styles_index_scss__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(_styles_index_scss__WEBPACK_IMPORTED_MODULE_12__);\n/* harmony import */ var _components_Loading__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../components/Loading */ \"./components/Loading.js\");\n\n\n\n\n\n\n\nvar _jsxFileName = \"/Users/ranronghua/Desktop/nextjs-pagenote/pages/index.js\";\n\nvar __jsx = react__WEBPACK_IMPORTED_MODULE_9___default.a.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return Object(_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\n\n\n\nvar gh = new github_api__WEBPACK_IMPORTED_MODULE_10___default.a();\nvar host = 'https://pagenote.logike.cn';\nvar proxy = 'https://cors-anywhere.herokuapp.com/';\n\nvar Index = /*#__PURE__*/function (_Component) {\n  Object(_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(Index, _Component);\n\n  var _super = _createSuper(Index);\n\n  function Index(props) {\n    var _s3 = $RefreshSig$();\n\n    var _this;\n\n    Object(_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, Index);\n\n    _this = _super.call(this, props);\n\n    Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_this), \"fetchPages\", _s3(function () {\n      var _s = $RefreshSig$(),\n          _s2 = $RefreshSig$();\n\n      _s3();\n\n      _this.setState({\n        loading: true\n      });\n\n      var result = _this.useCacheData();\n\n      if (result === true) {\n        _this.setState({\n          loading: false\n        });\n\n        return;\n      }\n\n      axios__WEBPACK_IMPORTED_MODULE_11___default()({\n        method: 'get',\n        headers: {\n          Accept: 'application/json'\n        },\n        url: \"\".concat(proxy, \"https://api.github.com/repos/rowthan/rowthan.github.io/issues?sort=created&direction=desc&state=open&labels=pagenote\")\n      }).then(function (response) {\n        if (response.data) {\n          _this.resolvePages(response.data);\n        }\n      })[\"catch\"](function () {\n        _this.setState({\n          error: '请求数据异常',\n          loading: false\n        });\n      });\n      return;\n      var issue = gh.getIssues('rowthan', 'rowthan.github.io');\n      issue.listIssues({\n        sort: 'created',\n        direction: 'desc',\n        state: 'open',\n        labels: 'pagenote'\n      }, _s(function (error, result) {\n        _s();\n\n        _this.setState({\n          loading: false\n        });\n\n        if (error) {\n          console.error('list page 失败', error);\n\n          _this.useCacheData(true);\n\n          return;\n        }\n\n        _this.resolvePages(result);\n      }, \"DrweCic5E1loN2w0evPldAEsuiw=\", false, function () {\n        return [_this.useCacheData];\n      }))[\"catch\"](_s2(function (e) {\n        _s2();\n\n        console.log('加载请求失败');\n\n        _this.useCacheData(true);\n\n        _this.setState({\n          loading: false\n        });\n      }, \"DrweCic5E1loN2w0evPldAEsuiw=\", false, function () {\n        return [_this.useCacheData];\n      }));\n\n      _this.setState({\n        loading: true\n      });\n    }, \"SlHV2xUOt6ynPoMfmEUDqtFNYQU=\", false, function () {\n      return [_this.useCacheData];\n    }));\n\n    Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_this), \"resolvePages\", function (result) {\n      var cache = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n      _this.setState({\n        loading: false\n      });\n\n      if (result) {\n        var now = new Date();\n        var labels = [];\n        var tempObject = {};\n        result.forEach(function (page) {\n          page.labels.forEach(function (label) {\n            if (!tempObject[label.id]) {\n              labels.push(label);\n              tempObject[label.id] = true;\n            }\n          });\n        });\n\n        _this.setState({\n          pages: result || [],\n          fetchTime: now,\n          labels: labels\n        });\n\n        if (cache) {\n          sessionStorage.setItem('cache_time', now.getTime().toString());\n          sessionStorage.setItem('cache_pages', JSON.stringify(result));\n        }\n      }\n    });\n\n    Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_this), \"fetchLabels\", function () {\n      return;\n      var issue = gh.getIssues('rowthan', 'rowthan.github.io');\n      issue.listLabels({}, function (err, result) {\n        console.log('labels', result);\n\n        if (!err) {\n          _this.setState({\n            labels: result\n          });\n        }\n      });\n    });\n\n    Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_this), \"useCacheData\", function () {\n      var forceUse = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var cachePage = sessionStorage.getItem('cache_pages');\n      var cacheTime = parseInt(sessionStorage.getItem('cache_time') || '');\n      var canUse = cacheTime + 1000 * 60 * 2 > new Date().getTime();\n\n      if (cachePage && cacheTime && (canUse || forceUse)) {\n        var cacheData = JSON.parse(cachePage);\n\n        _this.resolvePages(cacheData, false);\n\n        return true;\n      } else {\n        _this.setState({\n          error: '获取数据失败，请重试'\n        });\n      }\n\n      return false;\n    });\n\n    Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_this), \"checkLogin\", function () {\n      var token = localStorage.getItem('token');\n\n      if (!token) {\n        return;\n      }\n\n      axios__WEBPACK_IMPORTED_MODULE_11___default()({\n        method: 'get',\n        headers: {\n          Accept: 'application/json',\n          Authorization: \"token \".concat(token)\n        },\n        url: \"\".concat(proxy, \"https://api.github.com/user\")\n      }).then(function (response) {\n        if (response.data) {\n          _this.setState({\n            userInfo: response.data\n          });\n        }\n      })[\"catch\"](function (e) {\n        console.error(e);\n      });\n      return;\n      gh = new github_api__WEBPACK_IMPORTED_MODULE_10___default.a({\n        token: token\n      });\n      var user = gh.getUser();\n      user.getProfile(function (error, result) {\n        if (error) {\n          return;\n        }\n\n        _this.setState({\n          userInfo: result\n        });\n      })[\"catch\"](function (e) {\n        console.log('');\n      });\n    });\n\n    Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_this), \"codeToToken\", function () {\n      var code = window.location.search.match(/code=(.*)$/);\n\n      if (!code) {\n        return;\n      }\n\n      axios__WEBPACK_IMPORTED_MODULE_11___default()({\n        method: 'post',\n        headers: {\n          Accept: 'application/json'\n        },\n        url: \"\".concat(proxy, \"https://github.com/login/oauth/access_token\"),\n        data: {\n          client_id: 'c4aae381097464aa1024',\n          client_secret: 'ed40211bca3ccabd900586079b89fd0ec1ea48be',\n          code: code[1]\n        }\n      }).then(function (response) {\n        var token = response.data.access_token;\n        localStorage.setItem('token', token);\n        window.location = '/';\n      });\n    });\n\n    Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_this), \"filterLabel\", function () {});\n\n    Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(Object(_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_this), \"loadComments\", function (number, pageIndex) {\n      var originPages = _this.state.pages;\n\n      if (originPages[pageIndex].comment && originPages[pageIndex].comment.show) {\n        originPages[pageIndex].comment.show = false;\n\n        _this.setState({\n          pages: originPages\n        });\n\n        return;\n      }\n\n      var issue = gh.getIssues('rowthan', 'rowthan.github.io');\n      issue.listIssueComments(number, function (error, result) {\n        originPages[pageIndex].comment = {\n          show: true,\n          comments: result\n        };\n\n        _this.setState({\n          pages: originPages\n        });\n      });\n    });\n\n    _this.state = {\n      pages: [],\n      userInfo: {},\n      fetchTime: new Date(),\n      loading: false,\n      labels: [],\n      filterLabels: ['pagenote'],\n      error: ''\n    };\n    return _this;\n  }\n\n  Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(Index, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.checkLogin();\n      this.codeToToken();\n      this.fetchPages(); // this.fetchLabels();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          pages = _this$state.pages,\n          userInfo = _this$state.userInfo,\n          loading = _this$state.loading,\n          labels = _this$state.labels,\n          error = _this$state.error;\n      var loginUrl = \"https://github.com/login/oauth/authorize?scope=user%20public_repo&client_id=c4aae381097464aa1024&redirect_uri=\".concat(host);\n      return __jsx(\"div\", {\n        className: \"pagenote\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }\n      }, __jsx(next_head__WEBPACK_IMPORTED_MODULE_8___default.a, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 17\n        }\n      }, __jsx(\"title\", {\n        className: \"jsx-2348595149\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 21\n        }\n      }, \"\\u5206\\u4EAB\\u7F51\\u9875\"), __jsx(styled_jsx_style__WEBPACK_IMPORTED_MODULE_7___default.a, {\n        id: \"2348595149\",\n        __self: this\n      }, \"body.jsx-2348595149{font-family:'SF Pro Text','SF Pro Icons','Helvetica Neue','Helvetica', 'Arial',sans-serif;font-size:14px;padding:0;max-width:800px;margin:0 auto;background:#f9f9f9;font-family:-apple-system,BlinkMacSystemFont,Segoe UI,Helvetica,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji;}svg.jsx-2348595149{vertical-align:middle;}a.jsx-2348595149{color:#0366d6;-webkit-text-decoration:none;text-decoration:none;}a.jsx-2348595149:hover{-webkit-text-decoration:underline;text-decoration:underline;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/Users/ranronghua/Desktop/nextjs-pagenote/pages/index.js */\")), __jsx(\"section\", {\n        className: \"header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 17\n        }\n      }, userInfo.name ? __jsx(\"a\", {\n        href: userInfo.html_url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 29\n        }\n      }, __jsx(\"img\", {\n        width: 40,\n        height: 40,\n        src: \"\".concat(userInfo.avatar_url, \"&s=30\"),\n        alt: \"\".concat(userInfo.name),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 33\n        }\n      })) : __jsx(\"a\", {\n        id: \"user\",\n        href: loginUrl,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 29\n        }\n      }, \"GitHub\\u767B\\u5F55\"), __jsx(\"span\", {\n        id: \"for-pagenote-extension\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 21\n        }\n      }, \"\\u4F60\\u8FD8\\u672A\\u5B89\\u88C5pagenote\\u63D2\\u4EF6\\uFF0C\\u5B89\\u88C5\\u540E\\u5F00\\u542F\\u5168\\u90E8\\u529F\\u80FD\")), __jsx(\"div\", {\n        id: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 17\n        }\n      }, __jsx(\"section\", {\n        className: \"filter-labels\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 21\n        }\n      }, labels.map(function (label) {\n        return __jsx(Label, {\n          onClick: _this2.filterLabel,\n          key: label.name,\n          text: label.name,\n          color: label.color,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 33\n          }\n        });\n      })), pages.map(function (page, index) {\n        return __jsx(\"section\", {\n          className: \"new\",\n          key: page.number,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 29\n          }\n        }, __jsx(\"div\", {\n          className: \"title\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 33\n          }\n        }, __jsx(\"a\", {\n          className: \"title-link\",\n          href: \"\".concat(host, \"/snapshot.html?pagenote=\").concat(page.number),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 37\n          }\n        }, page.title), __jsx(\"a\", {\n          className: \"author\",\n          href: userInfo.html_url,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 37\n          }\n        }, __jsx(\"img\", {\n          width: 30,\n          height: 30,\n          src: \"\".concat(page.user.avatar_url, \"&s=30\"),\n          alt: \"\".concat(page.user.login),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 41\n          }\n        }))), __jsx(\"div\", {\n          className: \"content\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 33\n          }\n        }, __jsx(PageItem, {\n          bodyString: page.body,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 37\n          }\n        }), __jsx(\"div\", {\n          className: \"comments\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 37\n          }\n        }, page.comment && page.comment.show && __jsx(\"div\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 45\n          }\n        }, __jsx(\"ul\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 49\n          }\n        }, page.comment.comments.map(function (item) {\n          return __jsx(\"li\", {\n            key: item.id,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 61\n            }\n          }, __jsx(\"img\", {\n            width: 20,\n            height: 20,\n            src: item.user.avatar_url,\n            alt: \"\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 65\n            }\n          }), item.body);\n        })), __jsx(\"div\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 49\n          }\n        }, __jsx(\"a\", {\n          target: \"_blank\",\n          href: page.html_url,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 53\n          }\n        }, \"\\u6211\\u4E5F\\u8981\\u8BC4\\u8BBA\")))), __jsx(\"div\", {\n          className: \"labels\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 37\n          }\n        }, page.labels.map(function (label) {\n          return __jsx(Label, {\n            key: label.name,\n            text: label.name,\n            color: label.color,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 49\n            }\n          });\n        }), __jsx(\"span\", {\n          className: \"comments-icon\",\n          onClick: function onClick() {\n            return _this2.loadComments(page.number, index);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 41\n          }\n        }, __jsx(\"svg\", {\n          className: \"octicon octicon-comment v-align-middle\",\n          viewBox: \"0 0 16 16\",\n          version: \"1.1\",\n          width: \"16\",\n          height: \"16\",\n          \"aria-hidden\": \"true\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 43\n          }\n        }, __jsx(\"path\", {\n          fillRule: \"evenodd\",\n          d: \"M14 1H2c-.55 0-1 .45-1 1v8c0 .55.45 1 1 1h2v3.5L7.5 11H14c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1zm0 9H7l-2 2v-2H2V2h12v8z\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 43\n          }\n        })), __jsx(\"span\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 42\n          }\n        }, page.comments)))));\n      })), loading && __jsx(_components_Loading__WEBPACK_IMPORTED_MODULE_13__[\"default\"], {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 32\n        }\n      }));\n    }\n  }]);\n\n  return Index;\n}(react__WEBPACK_IMPORTED_MODULE_9__[\"Component\"]);\n\n\n\nfunction Label(_ref) {\n  var text = _ref.text,\n      color = _ref.color;\n  var Y = 0.2126 * parseInt(color.substr(0, 2), 16) + 0.7152 * parseInt(color.substr(2, 2), 16) + 0.0722 * parseInt(color.substr(4, 2), 16);\n  var textColor = Y < 128 ? '#fff' : '#000';\n  return __jsx(\"span\", {\n    className: \"label\",\n    style: {\n      background: \"#\".concat(color),\n      color: \"\".concat(textColor)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 7\n    }\n  }, text);\n}\n\n_c = Label;\n\nfunction PageItem(_ref2) {\n  var _this3 = this;\n\n  var bodyString = _ref2.bodyString;\n  var metaData = {\n    steps: []\n  };\n\n  try {\n    metaData = JSON.parse(bodyString);\n  } catch (e) {// console.log('解析错误',e)\n  }\n\n  return __jsx(\"div\", {\n    className: \"lights\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 7\n    }\n  }, metaData.steps.map(function (step, index) {\n    return __jsx(\"div\", {\n      className: \"light\",\n      key: metaData.url + index,\n      style: {\n        borderColor: step[5]\n      },\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 15\n      }\n    }, step[3]);\n  }));\n}\n\n_c2 = PageItem;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Label\");\n$RefreshReg$(_c2, \"PageItem\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports_1 = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports_1, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports_1)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports_1;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports_1)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./pages/index.js\n");

/***/ })

})