webpackHotUpdate("static/development/pages/release.js",{

/***/ "./node_modules/@babel/runtime/helpers/get.js":
/*!****************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/get.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var superPropBase = __webpack_require__(/*! ./superPropBase */ \"./node_modules/@babel/runtime/helpers/superPropBase.js\");\n\nfunction _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    module.exports = _get = Reflect.get;\n  } else {\n    module.exports = _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}\n\nmodule.exports = _get;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9nZXQuanM/ODk2MiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0IsbUJBQU8sQ0FBQywrRUFBaUI7O0FBRTdDO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUEiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9nZXQuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgc3VwZXJQcm9wQmFzZSA9IHJlcXVpcmUoXCIuL3N1cGVyUHJvcEJhc2VcIik7XG5cbmZ1bmN0aW9uIF9nZXQodGFyZ2V0LCBwcm9wZXJ0eSwgcmVjZWl2ZXIpIHtcbiAgaWYgKHR5cGVvZiBSZWZsZWN0ICE9PSBcInVuZGVmaW5lZFwiICYmIFJlZmxlY3QuZ2V0KSB7XG4gICAgbW9kdWxlLmV4cG9ydHMgPSBfZ2V0ID0gUmVmbGVjdC5nZXQ7XG4gIH0gZWxzZSB7XG4gICAgbW9kdWxlLmV4cG9ydHMgPSBfZ2V0ID0gZnVuY3Rpb24gX2dldCh0YXJnZXQsIHByb3BlcnR5LCByZWNlaXZlcikge1xuICAgICAgdmFyIGJhc2UgPSBzdXBlclByb3BCYXNlKHRhcmdldCwgcHJvcGVydHkpO1xuICAgICAgaWYgKCFiYXNlKSByZXR1cm47XG4gICAgICB2YXIgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoYmFzZSwgcHJvcGVydHkpO1xuXG4gICAgICBpZiAoZGVzYy5nZXQpIHtcbiAgICAgICAgcmV0dXJuIGRlc2MuZ2V0LmNhbGwocmVjZWl2ZXIpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gZGVzYy52YWx1ZTtcbiAgICB9O1xuICB9XG5cbiAgcmV0dXJuIF9nZXQodGFyZ2V0LCBwcm9wZXJ0eSwgcmVjZWl2ZXIgfHwgdGFyZ2V0KTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBfZ2V0OyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/get.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/isNativeFunction.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/isNativeFunction.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}\n\nmodule.exports = _isNativeFunction;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pc05hdGl2ZUZ1bmN0aW9uLmpzP2M1ZjciXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBOztBQUVBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvaXNOYXRpdmVGdW5jdGlvbi5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIF9pc05hdGl2ZUZ1bmN0aW9uKGZuKSB7XG4gIHJldHVybiBGdW5jdGlvbi50b1N0cmluZy5jYWxsKGZuKS5pbmRleE9mKFwiW25hdGl2ZSBjb2RlXVwiKSAhPT0gLTE7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX2lzTmF0aXZlRnVuY3Rpb247Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/isNativeFunction.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/superPropBase.js":
/*!**************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/superPropBase.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var getPrototypeOf = __webpack_require__(/*! ./getPrototypeOf */ \"./node_modules/@babel/runtime/helpers/getPrototypeOf.js\");\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nmodule.exports = _superPropBase;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9zdXBlclByb3BCYXNlLmpzPzlmNzAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEscUJBQXFCLG1CQUFPLENBQUMsaUZBQWtCOztBQUUvQztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUEiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9zdXBlclByb3BCYXNlLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGdldFByb3RvdHlwZU9mID0gcmVxdWlyZShcIi4vZ2V0UHJvdG90eXBlT2ZcIik7XG5cbmZ1bmN0aW9uIF9zdXBlclByb3BCYXNlKG9iamVjdCwgcHJvcGVydHkpIHtcbiAgd2hpbGUgKCFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSkpIHtcbiAgICBvYmplY3QgPSBnZXRQcm90b3R5cGVPZihvYmplY3QpO1xuICAgIGlmIChvYmplY3QgPT09IG51bGwpIGJyZWFrO1xuICB9XG5cbiAgcmV0dXJuIG9iamVjdDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBfc3VwZXJQcm9wQmFzZTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/superPropBase.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/wrapNativeSuper.js":
/*!****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/wrapNativeSuper.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var getPrototypeOf = __webpack_require__(/*! ./getPrototypeOf */ \"./node_modules/@babel/runtime/helpers/getPrototypeOf.js\");\n\nvar setPrototypeOf = __webpack_require__(/*! ./setPrototypeOf */ \"./node_modules/@babel/runtime/helpers/setPrototypeOf.js\");\n\nvar isNativeFunction = __webpack_require__(/*! ./isNativeFunction */ \"./node_modules/@babel/runtime/helpers/isNativeFunction.js\");\n\nvar construct = __webpack_require__(/*! ./construct */ \"./node_modules/@babel/runtime/helpers/construct.js\");\n\nfunction _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  module.exports = _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}\n\nmodule.exports = _wrapNativeSuper;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy93cmFwTmF0aXZlU3VwZXIuanM/YTEyOCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxxQkFBcUIsbUJBQU8sQ0FBQyxpRkFBa0I7O0FBRS9DLHFCQUFxQixtQkFBTyxDQUFDLGlGQUFrQjs7QUFFL0MsdUJBQXVCLG1CQUFPLENBQUMscUZBQW9COztBQUVuRCxnQkFBZ0IsbUJBQU8sQ0FBQyx1RUFBYTs7QUFFckM7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL3dyYXBOYXRpdmVTdXBlci5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBnZXRQcm90b3R5cGVPZiA9IHJlcXVpcmUoXCIuL2dldFByb3RvdHlwZU9mXCIpO1xuXG52YXIgc2V0UHJvdG90eXBlT2YgPSByZXF1aXJlKFwiLi9zZXRQcm90b3R5cGVPZlwiKTtcblxudmFyIGlzTmF0aXZlRnVuY3Rpb24gPSByZXF1aXJlKFwiLi9pc05hdGl2ZUZ1bmN0aW9uXCIpO1xuXG52YXIgY29uc3RydWN0ID0gcmVxdWlyZShcIi4vY29uc3RydWN0XCIpO1xuXG5mdW5jdGlvbiBfd3JhcE5hdGl2ZVN1cGVyKENsYXNzKSB7XG4gIHZhciBfY2FjaGUgPSB0eXBlb2YgTWFwID09PSBcImZ1bmN0aW9uXCIgPyBuZXcgTWFwKCkgOiB1bmRlZmluZWQ7XG5cbiAgbW9kdWxlLmV4cG9ydHMgPSBfd3JhcE5hdGl2ZVN1cGVyID0gZnVuY3Rpb24gX3dyYXBOYXRpdmVTdXBlcihDbGFzcykge1xuICAgIGlmIChDbGFzcyA9PT0gbnVsbCB8fCAhaXNOYXRpdmVGdW5jdGlvbihDbGFzcykpIHJldHVybiBDbGFzcztcblxuICAgIGlmICh0eXBlb2YgQ2xhc3MgIT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uXCIpO1xuICAgIH1cblxuICAgIGlmICh0eXBlb2YgX2NhY2hlICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICBpZiAoX2NhY2hlLmhhcyhDbGFzcykpIHJldHVybiBfY2FjaGUuZ2V0KENsYXNzKTtcblxuICAgICAgX2NhY2hlLnNldChDbGFzcywgV3JhcHBlcik7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gV3JhcHBlcigpIHtcbiAgICAgIHJldHVybiBjb25zdHJ1Y3QoQ2xhc3MsIGFyZ3VtZW50cywgZ2V0UHJvdG90eXBlT2YodGhpcykuY29uc3RydWN0b3IpO1xuICAgIH1cblxuICAgIFdyYXBwZXIucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShDbGFzcy5wcm90b3R5cGUsIHtcbiAgICAgIGNvbnN0cnVjdG9yOiB7XG4gICAgICAgIHZhbHVlOiBXcmFwcGVyLFxuICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgICAgfVxuICAgIH0pO1xuICAgIHJldHVybiBzZXRQcm90b3R5cGVPZihXcmFwcGVyLCBDbGFzcyk7XG4gIH07XG5cbiAgcmV0dXJuIF93cmFwTmF0aXZlU3VwZXIoQ2xhc3MpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IF93cmFwTmF0aXZlU3VwZXI7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/wrapNativeSuper.js\n");

/***/ }),

/***/ "./pages/release.js":
/*!**************************!*\
  !*** ./pages/release.js ***!
  \**************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return SnapshotRender; });\n/* harmony import */ var _babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/createClass */ \"./node_modules/@babel/runtime/helpers/esm/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inherits */ \"./node_modules/@babel/runtime/helpers/esm/inherits.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/esm/possibleConstructorReturn */ \"./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/esm/getPrototypeOf */ \"./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/head */ \"./node_modules/next/dist/next-server/lib/head.js\");\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_head__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _components_Loading__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../components/Loading */ \"./components/Loading.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! axios */ \"./node_modules/axios/index.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var _styles_release_scss__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../styles/release.scss */ \"./styles/release.scss\");\n/* harmony import */ var _styles_release_scss__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(_styles_release_scss__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var _public_pagenote__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../public/pagenote */ \"./public/pagenote.js\");\n/* harmony import */ var _public_pagenote__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(_public_pagenote__WEBPACK_IMPORTED_MODULE_10__);\n\n\n\n\n\nvar _jsxFileName = \"/Users/ranronghua/Desktop/nextjs-pagenote/pages/release.js\";\nvar __jsx = react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = Object(_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return Object(_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n\n // import GitHub from \"github-api\";\n\n\n\n\n\n\nvar SnapshotRender = /*#__PURE__*/function (_Component) {\n  Object(_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(SnapshotRender, _Component);\n\n  var _super = _createSuper(SnapshotRender);\n\n  function SnapshotRender(props) {\n    var _this;\n\n    Object(_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, SnapshotRender);\n\n    _this = _super.call(this, props);\n    _this.state = {};\n    return _this;\n  }\n\n  Object(_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(SnapshotRender, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var noteData = 'JTdCJTIyc3RlcHMlMjI6JTVCJTVCNjgyLDQ2LCUyMnNlY3Rpb24lMjIsJTIyJUU1JThCJUJFJUU5JTgwJTg5JUU0JUI4JTgwJUU2JUFFJUI1JUU2JTk2JTg3JUU2JTlDJUFDJTIyLCUyMiVFNSVCMCU5RCVFOCVBRiU5NSVFNCVCOCU4MCVFNCVCOCU4QiVFNSU5MCVBNyVFRiVCQyU4MSUyMiwlMjJyZ2JhKDExNCwyMDgsMjU1LDAuODgpJTIyLDE1OTA3NDI3Mjg2NjgsZmFsc2UsMzYyLDM0LDgwMCU1RCwlNUI2ODQsMzEyLCUyMnNlY3Rpb24uYnJpZWYlM0VwOm50aC1jaGlsZCg0KSUyMiwlMjIlRUYlQkMlOUElRTclQUUlODAlRTUlOEQlOTUlRUYlQkMlOEMlRTUlQjAlOEYlRTglODAlOEMlRTclQkUlOEUlRTMlODAlODIlMjIsJTIyJTIyLCUyMnJnYmEoMTE0LDIwOCwyNTUsMC44OCklMjIsMTU5MDc0MTkxNzgyNixmYWxzZSwxMjMsMzcsNTQzJTVELCU1QjY5NSw0NTAsJTIyZGl2LmZ1bmN0aW9uLXRpdGxlJTIyLCUyMiVFNCVCRSVBNyVFOCVCRSVCOSVFNiVBMCU4RiVFNiU5NCVCNiVFOCVCNSVCNyVFNSU4QSU5RiVFOCU4MyVCRCUyMiwlMjIlMjIsJTIycmdiYSgyNTEsJTIwMTgxLCUyMDIxNCwlMjAwLjg0KSUyMiwxNTkwNzQyMzgxNjY1LGZhbHNlLDExMCw5LDUzNSU1RCwlNUI3MzEsNTI4LCUyMnVsLmZ1bmN0aW9ucyUzRWxpOm50aC1jaGlsZCgyKSUzRWRpdi5mdW5jdGlvbi10aXRsZSUyMiwlMjIlRTklQkIlOTglRTglQUUlQTQlRTQlQjglOEQlRTUlODYlOTklRTUlODUlQTUlRTYlQTAlODclRTYlQjMlQTglRTUlODYlODUlRTUlQUUlQjklMjIsJTIyJTIyLCUyMnJnYmEoMjUxLCUyMDE4MSwlMjAyMTQsJTIwMC44NCklMjIsMTU5MDc0MjM4OTMzMix0cnVlLDE0NiwtNSw1MzUlNUQsJTVCNjM5LDYxNCwlMjJ1bC5mdW5jdGlvbnMlM0VsaTpudGgtY2hpbGQoMyklM0VkaXYuZnVuY3Rpb24tdGl0bGUlMjIsJTIyJUU2JUI1JTg1JUU5JUFCJTk4JUU0JUJBJUFFJTIyLCUyMiUyMiwlMjJyZ2JhKDI1MSwlMjAxODEsJTIwMjE0LCUyMDAuODQpJTIyLDE1OTA3NDIzOTM5ODMsZmFsc2UsNTQsOSw1MzUlNUQsJTVCNjk1LDY4NiwlMjJ1bC5mdW5jdGlvbnMlM0VsaTpudGgtY2hpbGQoNCklM0VkaXYuZnVuY3Rpb24tdGl0bGUlMjIsJTIyJUU4JTg3JUFBJUU1JThBJUE4JUU1JThDJUJBJUU1JTg4JTg2JUU2JTk2JTg3JUU2JTlDJUFDJUU4JTg5JUIyJTIyLCUyMiUyMiwlMjJyZ2JhKDExNCwyMDgsMjU1LDAuODgpJTIyLDE1OTA3NDIzOTc0ODQsZmFsc2UsMTEwLDksNTM1JTVEJTVELCUyMnNldHRpbmclMjI6JTdCJTIyYmFySW5mbyUyMjolN0IlMjJyaWdodCUyMjo5MTMsJTIydG9wJTIyOjI2MSwlMjJzdGF0dXMlMjI6JTIyaGlkZSUyMiU3RCU3RCwlMjJ1cmwlMjI6JTIyaHR0cDovLzAuMC4wLjA6ODA4MC8wLjguMC5odG1sI21vcmUlMjIsJTIybGFzdE1vZGlmaWVkJTIyOjE1OTA3NDM3NDAyODgsJTIyaWNvbiUyMjolMjJodHRwOi8vMC4wLjAuMDo4MDgwL2Zhdmljb24uaWNvJTIyLCUyMnRpdGxlJTIyOiUyMnBhZ2Vub3RlJUU1JThGJTkxJUU1JUI4JTgzJUU2JTk3JUE1JUU1JUJGJTk3JTIyLCUyMmltYWdlcyUyMjolNUIlNUQsJTIyc25hcHNob3QlMjI6JTIyJTIyLCUyMnZlcnNpb24lMjI6MSU3RA==';\n      var pagenote = new _public_pagenote__WEBPACK_IMPORTED_MODULE_10___default.a('0.8.0');\n      pagenote.init(noteData);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }\n      }, __jsx(\"section\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }\n      }, __jsx(\"span\", {\n        className: \"install-btns\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }\n      }, __jsx(\"a\", {\n        href: \"https://addons.mozilla.org/zh-CN/firefox/addon/page-note/\",\n        className: \"browser-install-btn firefox\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }\n      }, \"FireFox\"), __jsx(\"a\", {\n        href: \"https://chrome.google.com/webstore/detail/dohbgjmflacneejmpdieincbbokoflgm\",\n        className: \"browser-install-btn chrome\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }\n      }, \"Chrome\")), __jsx(\"strong\", {\n        className: \"slogan\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }\n      }, \"\\u4E00\\u5207\\u529F\\u80FD\\u90FD\\u4ECE\\u300C\\u52FE\\u9009\\u4E00\\u6BB5\\u6587\\u672C\\u300D\\u5F00\\u59CB\")), __jsx(\"section\", {\n        className: \"row version\",\n        id: \"version8\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }\n      }, __jsx(\"div\", {\n        className: \"left col-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }\n      }, __jsx(\"div\", {\n        className: \"version-number\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }\n      }, \"pagenote 0.8.0 \\u5F00\\u542F\\u5206\\u4EAB\")), __jsx(\"div\", {\n        className: \"right col-9\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }\n      }, __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }\n      }, __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 29\n        }\n      }, \"\\u901A\\u8FC7pagenote\\u4F60\\u53EF\\u4EE5\\u5C06\\u4EFB\\u610F\\u7F51\\u9875\\u5206\\u4EAB\\u7ED9\\u4F60\\u7684\\u597D\\u53CB\\uFF0C\\u5E76\\u643A\\u5E26\\u4F60\\u7684\\u6807\\u8BB0\\u548C\\u9AD8\\u4EAE\\u5185\\u5BB9\\u3002\"), __jsx(\"ul\", {\n        className: \"functions\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 29\n        }\n      }, __jsx(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 33\n        }\n      }, __jsx(\"div\", {\n        className: \"function-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 37\n        }\n      }, \"\\u4FA7\\u8FB9\\u680F\\u6536\\u8D77\\u529F\\u80FD\"), __jsx(\"div\", {\n        className: \"function-desc\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 37\n        }\n      }, \"\\u5C06\\u6574\\u4E2A\\u4FA7\\u8FB9\\u680F\\u6536\\u7F29\\u6210\\u4E00\\u6761\\u7A84\\u7EBF\\uFF0C\\u8FD9\\u53EF\\u4EE5\\u6700\\u5C0F\\u7A0B\\u5EA6\\u51CF\\u5C11pagenote\\u5BF9\\u9875\\u9762\\u7684\\u5E72\\u6270\\uFF0C\\u4F60\\u53EF\\u4EE5\\u66F4\\u591A\\u7684\\u5173\\u6CE8\\u9875\\u9762\\u672C\\u8EAB\\u3002 \\u8FD9\\u66F4\\u50CF\\u4E00\\u672C\\u4E66\\uFF0C\\u7FFB\\u9605\\u7684\\u65F6\\u5019\\u6253\\u5F00\\u5B83\\uFF0C\\u4E0D\\u9700\\u8981\\u7684\\u65F6\\u5019\\u5173\\u95ED\\u5B83\\u3002\")))))), __jsx(\"section\", {\n        className: \"row version\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }\n      }, __jsx(\"div\", {\n        className: \"left col-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }\n      }, __jsx(\"div\", {\n        className: \"version-number\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }\n      }, \"pagenote 0.7.+ \\u5316\\u7E41\\u4E3A\\u7B80\")), __jsx(\"div\", {\n        className: \"right col-9\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }\n      }, __jsx(\"section\", {\n        className: \"brief\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }\n      }, __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 29\n        }\n      }, \"\\u57280.6\\u30010.7\\u7248\\u672C\\u4E2D\\uFF0C\\u52A0\\u5165\\u4E86\\u66F4\\u52A0\\u4E30\\u5BCC\\u7684\\u529F\\u80FD\\u3002\\u5BF9\\u7528\\u6237\\u611F\\u77E5\\u6BD4\\u8F83\\u660E\\u663E\\u6709\\uFF1A\", __jsx(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 33\n        }\n      }, __jsx(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 37\n        }\n      }, \"\\u52A0\\u5165\\u4E86\", __jsx(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 44\n        }\n      }, \"\\u5927\\u7EB2\\u4FA7\\u8FB9\\u680F\"), \"\\uFF0C\\u63D0\\u4F9B\\u4E86\\u5927\\u7EB2\\u6536\\u7F29\\u3001\\u6298\\u53E0\\u6A21\\u5F0F\\u3002\"), __jsx(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 37\n        }\n      }, \"\\u53EF\\u4EE5\", __jsx(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 43\n        }\n      }, \"\\u62D6\\u62FD\"), \"\\u4FA7\\u8FB9\\u680F\\u5230\\u4EFB\\u610F\\u4F4D\\u7F6E\"), __jsx(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 37\n        }\n      }, __jsx(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 41\n        }\n      }, \"\\u81EA\\u52A8\\u70B9\\u4EAE\\u6A21\\u5F0F\")), __jsx(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 37\n        }\n      }, \"\\u6839\\u636E\\u4E0D\\u540C\\u6A21\\u5F0F\\u6709\\u4E0D\\u540C\\u7684\\u8BB0\\u5F55\", __jsx(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 53\n        }\n      }, \"\\u52A8\\u753B\\u6548\\u679C\")), __jsx(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 37\n        }\n      }, \"\\u652F\\u6301\", __jsx(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 43\n        }\n      }, \"\\u5907\\u4EFD\\u3001\\u8FD8\\u539F\"), \"(\\u539F\\u59CB\\u6587\\u4EF6)\\u6807\\u8BB0\\u9875\\u9762\"), __jsx(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 37\n        }\n      }, \"\\u652F\\u6301\\u5BFC\\u51FA\", __jsx(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 45\n        }\n      }, \"Markdown\"), \"\\u683C\\u5F0F\\u6587\\u4EF6\"))), __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 29\n        }\n      }, \"\\u6211\\u4EEC\\u6536\\u96C6\\u5230\\u4E00\\u4E9B\\u7528\\u6237\\u7684\\u53CD\\u9988\\u3002\\u65E9\\u671F\\u7684\\u7528\\u6237\\u53CD\\u9988\\u5F88\\u559C\\u6B22\\u4E4B\\u524D\\u7684\\u7248\\u672C\\uFF0C\\u56E0\\u4E3A\\u5B83\\u7B80\\u5355\\u3001\\u7EAF\\u7CB9\\u3001\\u4E0D\\u6253\\u6270\\uFF0C\\u6240\\u4EE5\\u5728\\u4F17\\u591A\\u7684\\u4EA7\\u54C1\\u4E2D\\u9009\\u62E9\\u4E86pagenote\\u3002 \\u8FD9\\u4E5F\\u662Fpagenote\\u4E00\\u76F4\\u8FFD\\u5BFB\\u7684\\u521D\\u5FC3\\uFF1A\\u7B80\\u5355\\uFF0C\\u5C0F\\u800C\\u7F8E\\u3002\", __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 33\n        }\n      }), \"\\u6240\\u4EE5\\uFF0C\\u6211\\u4EEC\\u5728\\u8FFD\\u6C42\\u529F\\u80FD\\u5B8C\\u5907\\u7684\\u57FA\\u7840\\u4E0A\\uFF0C\\u4ECD\\u7136\\u8FFD\\u6C42\\u64CD\\u4F5C\\u7B80\\u5355\\u30020.8.0 \\u7248\\u672C\\u4E5F\\u7531\\u6B64\\u8BDE\\u751F\\u3002\")), __jsx(\"section\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }\n      }, __jsx(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 29\n        }\n      }, \"0.7.2 \\u5316\\u7E41\\u4E3A\\u7B80\"), __jsx(\"ul\", {\n        className: \"functions\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 29\n        }\n      }, __jsx(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 33\n        }\n      }, __jsx(\"div\", {\n        className: \"function-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 37\n        }\n      }, \"\\u4FA7\\u8FB9\\u680F\\u6536\\u8D77\\u529F\\u80FD\"), __jsx(\"div\", {\n        className: \"function-desc\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 37\n        }\n      }, \"\\u5C06\\u6574\\u4E2A\\u4FA7\\u8FB9\\u680F\\u6536\\u7F29\\u6210\\u4E00\\u6761\\u7A84\\u7EBF\\uFF0C\\u8FD9\\u53EF\\u4EE5\\u6700\\u5C0F\\u7A0B\\u5EA6\\u51CF\\u5C11pagenote\\u5BF9\\u9875\\u9762\\u7684\\u5E72\\u6270\\uFF0C\\u4F60\\u53EF\\u4EE5\\u66F4\\u591A\\u7684\\u5173\\u6CE8\\u9875\\u9762\\u672C\\u8EAB\\u3002 \\u8FD9\\u66F4\\u50CF\\u4E00\\u672C\\u4E66\\uFF0C\\u7FFB\\u9605\\u7684\\u65F6\\u5019\\u6253\\u5F00\\u5B83\\uFF0C\\u4E0D\\u9700\\u8981\\u7684\\u65F6\\u5019\\u5173\\u95ED\\u5B83\\u3002\")), __jsx(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 33\n        }\n      }, __jsx(\"div\", {\n        className: \"function-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 37\n        }\n      }, \"\\u9ED8\\u8BA4\\u4E0D\\u5199\\u5165\\u6807\\u6CE8\\u5185\\u5BB9\"), __jsx(\"div\", {\n        className: \"function-desc\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 37\n        }\n      }, \"\\u907F\\u514D\\u5927\\u91CF\\u7684\\u65E0\\u7528\\u4FE1\\u606F\\u5C55\\u793A\\uFF0C\\u5982\\u679C\\u4F60\\u9700\\u8981\\u7559\\u4E0B\\u4E00\\u6BB5\\u7B14\\u8BB0\\u5185\\u5BB9\\uFF0C\\u5728\\u300C\\u70B9\\u4EAE\\u300D\\u72B6\\u6001\\u4E0B\\uFF0C\\u5C06\\u9F20\\u6807\\u653E\\u5230\\u5BF9\\u5E94\\u7684\\u5706\\u70B9\\u4E0A\\uFF0C\\u70B9\\u51FB\\u53F3\\u4FA7\\u7684\\u300C\\u7B14\\u8BB0\\u300Dicon\\uFF0C\\u5373\\u53EF\\u5F00\\u59CB\\u4E66\\u5199\\u4F60\\u7684\\u7B14\\u8BB0\\u5185\\u5BB9\\u3002 \\u5E76\\u53D6\\u6D88\\u4E86\\u53EF\\u4EE5\\u7C98\\u8D34\\u56FE\\u7247\\u7684\\u529F\\u80FD\\u3002\")), __jsx(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 33\n        }\n      }, __jsx(\"div\", {\n        className: \"function-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 37\n        }\n      }, \"\\u6D45\\u9AD8\\u4EAE\"), __jsx(\"div\", {\n        className: \"function-desc\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 37\n        }\n      }, \"\\u5F53\\u6807\\u8BB0\\u672A\\u300C\\u70B9\\u4EAE\\u300D\\uFF08\\u6FC0\\u6D3B\\uFF09\\u65F6\\uFF0C\\u5C06\\u5BF9\\u5173\\u952E\\u8BCD\\u8FDB\\u884C\\u4E0B\\u5212\\u7EBF\\u9AD8\\u4EAE\\u3002\\u5F53\\u70B9\\u51FB\\u5173\\u952E\\u5B57\\u6216\\u6FC0\\u6D3B\\u9AD8\\u4EAE\\u5185\\u5BB9\\u65F6\\uFF0C\\u5C06\\u5BF9\\u5173\\u952E\\u5B57\\u5168\\u80CC\\u666F\\u8272\\u7684\\u8986\\u76D6\\u9AD8\\u4EAE\\u3002\")), __jsx(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 33\n        }\n      }, __jsx(\"div\", {\n        className: \"function-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 37\n        }\n      }, \"\\u81EA\\u52A8\\u533A\\u5206\\u6587\\u672C\\u8272\"), __jsx(\"div\", {\n        className: \"function-desc\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 37\n        }\n      }, \"\\u6839\\u636E\\u4E0D\\u540C\\u7684\\u80CC\\u666F\\u9AD8\\u4EAE\\u8272\\uFF0C\\u81EA\\u52A8\\u8BBE\\u7F6E\\u524D\\u666F\\u8272\\u4E3A\\u767D\\u8272\\u6216\\u9ED1\\u8272\\uFF0C\\u4FDD\\u8BC1\\u9605\\u8BFB\\u65E0\\u969C\\u788D\\u3002\")), __jsx(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 33\n        }\n      }, __jsx(\"div\", {\n        className: \"function-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 37\n        }\n      }, \"\\u79FB\\u52A8\\u7AEF\\u8BBE\\u5907\\u517C\\u5BB9\"), __jsx(\"div\", {\n        className: \"function-desc\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 37\n        }\n      }, \"\\u79FB\\u52A8\\u7AEF\\u4FA7\\u8FB9\\u680F\\u4E0D\\u53EF\\u62D6\\u62FD\\uFF0C\\u9ED8\\u8BA4\\u9760\\u53F3\\u8FB9\\u3002\\u8BBE\\u7F6E\\u9875\\u9762\\u66F4\\u52A0\\u6E05\\u6670\\u3001\\u64CD\\u4F5C\\u65B9\\u4FBF\\u3002\")))))), __jsx(\"section\", {\n        className: \"row version\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 17\n        }\n      }, __jsx(\"div\", {\n        className: \"left col-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }\n      }, __jsx(\"div\", {\n        className: \"version-number\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 25\n        }\n      }, \"\\u4E86\\u89E3\\u66F4\\u591A\")), __jsx(\"div\", {\n        className: \"right col-9\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }\n      }, \"\\u4E86\\u89E3\\u66F4\\u591A\\u5185\\u5BB9\\uFF0C\\u53EF\\u4EE5\\u5173\\u6CE8\\u6211\\u4EEC\\u5728\", __jsx(\"a\", {\n        href: \"https://chrome.google.com/webstore/detail/dohbgjmflacneejmpdieincbbokoflgm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 39\n        }\n      }, \"Firefox\"), \" \\u3001Chrome\\u5546\\u57CE\\u6700\\u8FD1\\u52A8\\u6001\\uFF0C\\u6216\\u5728\\u5546\\u57CE\\u4E2D\\u7559\\u8A00\\u3002\", __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 25\n        }\n      }), \"\\u4E5F\\u53EF\\u4EE5\\u52A0\\u5165\\u6211\\u4EEC\\u7528\\u6237\\u7FA4 QQ\\uFF1A769094377\\u3002\")), __jsx(\"footer\", {\n        className: \"copyright\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 17\n        }\n      }, \"copyright2020 rowthan\"));\n    }\n  }]);\n\n  return SnapshotRender;\n}(react__WEBPACK_IMPORTED_MODULE_5__[\"Component\"]);\n\n\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports_1 = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports_1, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports_1)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports_1;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports_1)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./pages/release.js\n");

/***/ }),

/***/ "./public/pagenote.js":
/*!****************************!*\
  !*** ./public/pagenote.js ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(module) {var _get = __webpack_require__(/*! @babel/runtime/helpers/get */ \"./node_modules/@babel/runtime/helpers/get.js\");\n\nvar _toConsumableArray = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ \"./node_modules/@babel/runtime/helpers/toConsumableArray.js\");\n\nvar _regeneratorRuntime = __webpack_require__(/*! @babel/runtime/regenerator */ \"./node_modules/@babel/runtime/regenerator/index.js\");\n\nvar _asyncToGenerator = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ \"./node_modules/@babel/runtime/helpers/asyncToGenerator.js\");\n\nvar _classCallCheck = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/classCallCheck.js\");\n\nvar _createClass = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/createClass.js\");\n\nvar _inherits = __webpack_require__(/*! @babel/runtime/helpers/inherits */ \"./node_modules/@babel/runtime/helpers/inherits.js\");\n\nvar _possibleConstructorReturn = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ \"./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js\");\n\nvar _getPrototypeOf = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ \"./node_modules/@babel/runtime/helpers/getPrototypeOf.js\");\n\nvar _wrapNativeSuper = __webpack_require__(/*! @babel/runtime/helpers/wrapNativeSuper */ \"./node_modules/@babel/runtime/helpers/wrapNativeSuper.js\");\n\nfunction _createForOfIteratorHelper(o) { if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) { var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e4) { throw _e4; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var it, normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e5) { didErr = true; err = _e5; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n/*! For license information please see pagenote.js.LICENSE.txt */\n!function (t, e) {\n  if (true) module.exports = e();else { var r, n; }\n}(window, function () {\n  return function (t) {\n    var e = {};\n\n    function n(r) {\n      if (e[r]) return e[r].exports;\n      var o = e[r] = {\n        i: r,\n        l: !1,\n        exports: {}\n      };\n      return t[r].call(o.exports, o, o.exports, n), o.l = !0, o.exports;\n    }\n\n    return n.m = t, n.c = e, n.d = function (t, e, r) {\n      n.o(t, e) || Object.defineProperty(t, e, {\n        enumerable: !0,\n        get: r\n      });\n    }, n.r = function (t) {\n      \"undefined\" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, {\n        value: \"Module\"\n      }), Object.defineProperty(t, \"__esModule\", {\n        value: !0\n      });\n    }, n.t = function (t, e) {\n      if (1 & e && (t = n(t)), 8 & e) return t;\n      if (4 & e && \"object\" == typeof t && t && t.__esModule) return t;\n      var r = Object.create(null);\n      if (n.r(r), Object.defineProperty(r, \"default\", {\n        enumerable: !0,\n        value: t\n      }), 2 & e && \"string\" != typeof t) for (var o in t) {\n        n.d(r, o, function (e) {\n          return t[e];\n        }.bind(null, o));\n      }\n      return r;\n    }, n.n = function (t) {\n      var e = t && t.__esModule ? function () {\n        return t[\"default\"];\n      } : function () {\n        return t;\n      };\n      return n.d(e, \"a\", e), e;\n    }, n.o = function (t, e) {\n      return Object.prototype.hasOwnProperty.call(t, e);\n    }, n.p = \"\", n(n.s = 21);\n  }([function (t, e, n) {\n    var r = n(17);\n    \"string\" == typeof r && (r = [[t.i, r, \"\"]]);\n    var o = {\n      attrs: {\n        pagenote: \"css\"\n      },\n      hmr: !0,\n      transform: void 0,\n      insertInto: void 0\n    };\n    n(19)(r, o);\n    r.locals && (t.exports = r.locals);\n  }, function (t, e) {\n    t.exports = function (t) {\n      if (void 0 === t) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n      return t;\n    };\n  }, function (t, e) {\n    function n(e) {\n      return t.exports = n = Object.setPrototypeOf ? Object.getPrototypeOf : function (t) {\n        return t.__proto__ || Object.getPrototypeOf(t);\n      }, n(e);\n    }\n\n    t.exports = n;\n  }, function (t, e) {\n    function n(t, e) {\n      for (var n = 0; n < e.length; n++) {\n        var r = e[n];\n        r.enumerable = r.enumerable || !1, r.configurable = !0, \"value\" in r && (r.writable = !0), Object.defineProperty(t, r.key, r);\n      }\n    }\n\n    t.exports = function (t, e, r) {\n      return e && n(t.prototype, e), r && n(t, r), t;\n    };\n  }, function (t, e) {\n    t.exports = function (t, e) {\n      return e || (e = t.slice(0)), Object.freeze(Object.defineProperties(t, {\n        raw: {\n          value: Object.freeze(e)\n        }\n      }));\n    };\n  }, function (t, e) {\n    t.exports = function (t, e) {\n      if (!(t instanceof e)) throw new TypeError(\"Cannot call a class as a function\");\n    };\n  }, function (t, e, n) {\n    var r = n(16);\n\n    t.exports = function (t, e) {\n      if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\");\n      t.prototype = Object.create(e && e.prototype, {\n        constructor: {\n          value: t,\n          writable: !0,\n          configurable: !0\n        }\n      }), e && r(t, e);\n    };\n  }, function (t, e, n) {\n    var r = n(9),\n        o = n(1);\n\n    t.exports = function (t, e) {\n      return !e || \"object\" !== r(e) && \"function\" != typeof e ? o(t) : e;\n    };\n  }, function (t, e, n) {\n    var r = n(22);\n    t.exports = r[\"default\"];\n  }, function (t, e) {\n    function n(e) {\n      return \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? t.exports = n = function n(t) {\n        return typeof t;\n      } : t.exports = n = function n(t) {\n        return t && \"function\" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? \"symbol\" : typeof t;\n      }, n(e);\n    }\n\n    t.exports = n;\n  }, function (t, e) {\n    t.exports = function (t, e) {\n      (null == e || e > t.length) && (e = t.length);\n\n      for (var n = 0, r = new Array(e); n < e; n++) {\n        r[n] = t[n];\n      }\n\n      return r;\n    };\n  }, function (t, e, n) {\n    var r = n(12),\n        o = n(13),\n        i = n(14),\n        a = n(15);\n\n    t.exports = function (t) {\n      return r(t) || o(t) || i(t) || a();\n    };\n  }, function (t, e, n) {\n    var r = n(10);\n\n    t.exports = function (t) {\n      if (Array.isArray(t)) return r(t);\n    };\n  }, function (t, e) {\n    t.exports = function (t) {\n      if (\"undefined\" != typeof Symbol && Symbol.iterator in Object(t)) return Array.from(t);\n    };\n  }, function (t, e, n) {\n    var r = n(10);\n\n    t.exports = function (t, e) {\n      if (t) {\n        if (\"string\" == typeof t) return r(t, e);\n        var n = Object.prototype.toString.call(t).slice(8, -1);\n        return \"Object\" === n && t.constructor && (n = t.constructor.name), \"Map\" === n || \"Set\" === n ? Array.from(t) : \"Arguments\" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? r(t, e) : void 0;\n      }\n    };\n  }, function (t, e) {\n    t.exports = function () {\n      throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n    };\n  }, function (t, e) {\n    function n(e, r) {\n      return t.exports = n = Object.setPrototypeOf || function (t, e) {\n        return t.__proto__ = e, t;\n      }, n(e, r);\n    }\n\n    t.exports = n;\n  }, function (t, e, n) {\n    (e = t.exports = n(18)(!1)).push([t.i, \"@media screen and (max-width: 720px){.l5z .c3X:not(:first-child){transform:translate(0, 0) scale(0.59) !important;opacity:1}._1FS{width:40px}}._1FS{display:none;position:fixed;right:-100px;z-index:99999;top:0;width:168px;border:1px solid #afafaf;user-select:none;background:#fff;transition:width 0.5s ease-out}._1FS._1-8{display:block}._1FS.kz8{background:transparent;border:none;width:18px;right:10px;overflow:hidden;transition:width 0.5s ease-out}._1FS.kz8 .V5y{border:none;background:transparent}._1FS.kz8 ._1e4{transform:rotate(180deg)}._1FS.kz8 ._3Nx{white-space:nowrap;height:8px;border-left-width:0;width:8px;background:var(--color);border-radius:8px;box-sizing:border-box;padding:0 0 0 8px;margin-bottom:10px}._1FS.kz8 ._3Nx.vRo{transform:translateX(0) scale(2)}._1FS ._1e4{transition:all 1.3s ease-out;transform:rotate(0deg)}._1FS ._1TE{background:#757575;color:#fff;cursor:pointer}._1FS .V5y{display:flex;justify-content:space-between;background:#efefef;border-bottom:1px solid #e6e6e6}._1FS .V5y ._3fJ{position:relative;padding:2px 0;cursor:pointer}._1FS .V5y ._3PR{display:none;transition:height 0.1s ease-out}._1FS .V5y ._3PR._1Ve{display:flex}._1FS .V5y ._50P{cursor:move}._2Zd{padding:8px 0 8px 6px}._2Zd._2ou{padding:0}._2Zd._2ou ._3Nx{border-top:1px solid #e6e6e6;border-right:1px solid #e6e6e6;border-bottom:1px solid #e6e6e6}._3Nx{display:block;font-size:12px;left:0;top:0;width:100%;height:20px;line-height:20px;overflow:hidden;text-align:left;cursor:pointer;border-left:4px solid var(--color);padding:0 6px;box-sizing:border-box;background-color:#fff;margin-bottom:5px;white-space:nowrap;text-overflow:ellipsis;color:#333;transition:all 0.3s}._3Nx:last-child{margin-bottom:0}._3Nx._3kC,._3Nx:hover{max-height:5em;z-index:1}._3Nx:hover{background-color:#fbfcff;user-select:auto;z-index:2 !important}._3Nx.vRo{z-index:1;width:calc(100% + 14px);height:auto;max-height:5em;transform:translateX(-14px);border-radius:5px 0 0 5px;border-left:8px solid var(--color);background-color:#fbfcff}._1fF{z-index:9999}._1fF:hover{z-index:99999}._1fF._2N_ ._1Zj{cursor:move;transform:scale(2);animation:none;box-shadow:0px 0px 0px 1px #fff}._1fF._2N_ ._1Zj:before,._1fF._2N_ ._1Zj:after{display:none}._1fF._2N_ ._13E:hover ._2Je{opacity:1;transform:scale(2) translate(16px, 0px)}._1fF._2N_ ._13E:hover ._1gB{opacity:1;transform:scale(2) translate(-16px, 0px)}._1fF ._13E:hover ._1Zj{transform:scale(2)}._1fF ._2Je,._1fF ._1gB{position:absolute;opacity:0;top:6px;left:-7px;width:13px;height:13px;cursor:pointer;border-radius:2px;transition:all 0.5s}._1fF ._2Je svg,._1fF ._1gB svg{vertical-align:super;box-shadow:1px 1px 3px 0px #d0cfc6;border-radius:2px;background:#fff}._1fF ._1Zj{position:absolute;z-index:1;width:13px;height:13px;border:1px solid var(--bg-color);top:6px;left:-7px;border-radius:50%;color:#fff;cursor:pointer;animation:tRz 1.5s linear infinite;animation-direction:alternate;transition:0.3s;background-color:var(--bg-color);background-size:cover;background-repeat:no-repeat;background-position:center}._1fF ._1Zj:before{content:'';position:absolute;left:-1px;top:6px;width:9px;height:1px;border-left:solid 3px currentColor;border-right:solid 3px currentColor}._1fF ._1Zj:after{content:'';position:absolute;left:6px;top:-1px;width:1px;height:9px;border-top:solid 3px currentColor;border-bottom:solid 3px currentColor}._1fF ._1Zj:hover{transform:scale(2);animation:none}._1fF ._1Zj:hover+._1z1{display:block}._1fF ._1z1{display:none;box-sizing:border-box;overflow:hidden;width:0;height:0;min-height:20px;font-size:14px;border-radius:5px;background:radial-gradient(26px 26px at left 13px, transparent 50%, var(--bg-color) 50%);box-shadow:0px 0px 1px 2px #fff;transition:all 0.2s}._1fF ._1z1._1s7{display:block;width:auto;height:auto}._1fF ._1z1._1s7:hover,._1fF ._1z1._1s7:focus{z-index:99999999;border-radius:0 0 5px 5px}._1fF ._1z1._1s7:hover .eQ7,._1fF ._1z1._1s7:focus .eQ7{opacity:1;border-bottom:1px solid #fff;transform:translateY(-20px)}._1fF ._1z1 ._1zy{display:none;box-sizing:border-box;width:100%;min-width:200px;max-width:280px;padding:2px 14px 2px 20px;border-radius:6px;user-select:none}._1fF ._1z1 ._1zy._16J{display:block}._1fF ._1z1 ._1zy:focus,._1fF ._1z1 ._1zy._2G5{outline:1px solid #eee;user-select:all}._1fF ._1z1 ._1zy:focus+.eQ7{z-index:1;opacity:1;transform:translateY(-20px)}._1fF ._1z1 ._1zy img{max-width:100%;max-height:100%}._2bP{display:none;width:12px;height:12px;position:absolute;top:-14px;left:0;background-color:#189cfd;border-radius:14px}.eQ7{position:absolute;top:0;opacity:0;left:0;height:20px;width:100%;font-size:12px;box-sizing:border-box;padding:0 8px;white-space:nowrap;transition:all 0.3s;background:var(--bg-color);border-radius:5px 5px 0 0;will-change:transform}._1Qg{display:block;width:20px;height:20px;position:absolute;right:0;top:0;cursor:pointer}._2iJ{position:fixed;left:50%;top:50%;transform:translate(-50%, -50%);min-width:200px;font-size:14px;padding:10px;background:#f7f7f7;box-shadow:0px 0px 9px 1px #676767}._2iJ label{display:inline-block;width:80px}.f4X{position:absolute;right:-7px;top:-7px;color:black;margin-top:2px;margin-left:3px;width:12px;height:12px;border:solid 1px currentColor;background-color:currentColor;border-radius:100%}.f4X:before{content:'';position:absolute;width:8px;height:3px;color:white;background-color:currentColor;left:2px;top:4px}.oLC{display:none;position:fixed;z-index:99999;font-size:12px;line-height:20px;padding:0px 4px;width:20px;box-sizing:border-box;overflow:hidden;white-space:nowrap;text-overflow:ellipsis;background:#f36b5d;border-radius:10px;transition:width 0.5s}.oLC._2FU{display:block}.oLC.uyU{width:160px;background:#fff;border-radius:4px}.l5z{position:relative}.c3X{display:block;width:30px !important;height:30px !important;position:absolute;opacity:0;border:none !important;box-shadow:0px 2px 7px 0px rgba(39,43,49,0.2) !important;background-color:var(--color);border-radius:40px !important;background-size:cover !important;background-position:center !important;background-repeat:no-repeat !important;cursor:pointer;transition:all 0.3s ease-out;padding:2px;box-sizing:border-box}.c3X:first-child{left:0 !important;top:0 !important;opacity:1 !important;width:30px !important;height:30px !important;z-index:1}.l5z:hover .c3X:not(:first-child){transform:translate(0, 0) scale(0.59) !important;opacity:1}.OTU{z-index:999999;padding:4px;border:none;box-shadow:0 2px 4px rgba(0,0,0,0.5);font-weight:600;color:#fff;background-color:#189cfd;border-radius:6px;outline:none;cursor:pointer;transition:all 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms}.OTU:hover{background-color:#1976d2}b[data-highlight='y']{cursor:pointer}._3Ds #_-1e{fill:#fff}._3Ds #cGb{display:none}._3Ds._266 #_-1e,._3Ds._266 #cGb{display:block;fill:#ff720f}light[data-highlight]{position:relative;display:inline-block;z-index:1;cursor:pointer;font-size:inherit !important;font-family:inherit !important}light[data-highlight]:after{z-index:-1;display:block;position:absolute;left:0;bottom:0;content:' ';width:100%;height:2px;background-color:var(--color);transition:height 0.5s ease-out;animation:tRz 1.5s linear infinite;animation-direction:alternate}light[data-highlight][data-active='1']:after{animation:none;height:100%}._1Rg._3fJ{color:#000;position:absolute;margin-left:3px;margin-top:10px;width:16px;height:1px;background-color:currentColor}._1Rg._3fJ:before{content:'';position:absolute;left:1px;top:-5px;width:10px;height:10px;border-top:solid 1px currentColor;border-right:solid 1px currentColor;-webkit-transform:rotate(-135deg);transform:rotate(-135deg)}._2BO._3fJ{color:#000;position:absolute;margin-left:2px;margin-top:6px;width:17px;height:5px;border-top:solid 1px currentColor;border-bottom:solid 1px currentColor}._2BO._3fJ:before{content:'';position:absolute;top:2px;left:0;width:11px;height:5px;border-top:solid 1px currentColor;border-bottom:solid 1px currentColor}.EyG._3fJ{color:#000;position:absolute;margin-left:2px;margin-top:6px;width:17px;height:5px;border-top:solid 1px currentColor;border-bottom:solid 1px currentColor}.EyG._3fJ:before{content:'';position:absolute;top:2px;right:0;width:11px;height:5px;border-top:solid 1px currentColor;border-bottom:solid 1px currentColor}._37b._3fJ{color:#000;position:absolute;margin-left:3px;margin-top:3px;width:12px;height:12px;border-radius:70% 15%;border:solid 1px currentColor;-webkit-transform:rotate(45deg);transform:rotate(45deg)}._37b._3fJ:before{content:'';position:absolute;left:2px;top:2px;width:6px;height:6px;border-radius:50%;border:solid 1px currentColor;background-color:currentColor}div[data-tip]:after{display:none;content:attr(data-tip);position:absolute;white-space:nowrap;font-size:12px;top:-20px;left:0;transform-origin:left;border-radius:3px;padding:0 4px;background:#333;color:#fff}div[data-position=top]:after{top:-20px;right:0}div[data-tip]:hover::after{display:block}@keyframes _1HC{0%{opacity:0.3;transform:scale(0.3)}100%{transform:scale(1);opacity:1}}@keyframes tRz{0%{box-shadow:0px 0px 1px 2px #fff}100%{box-shadow:0px 0px 2px 2px rgba(199,198,198,0.52)}}@keyframes _1y5{0%{right:initial}100%{right:-160px}}\\n\", \"\"]), e.locals = {\n      recordContain: \"l5z\",\n      recordButton: \"c3X\",\n      sideBar: \"_1FS\",\n      showBar: \"_1-8\",\n      easy: \"kz8\",\n      icons: \"V5y\",\n      easyButton: \"_1e4\",\n      stepSign: \"_3Nx\",\n      isActive: \"vRo\",\n      toggleButton: \"_1TE\",\n      icon: \"_3fJ\",\n      moreIcons: \"_3PR\",\n      showMore: \"_1Ve\",\n      moveIcon: \"_50P\",\n      signContainer: \"_2Zd\",\n      expand: \"_2ou\",\n      running: \"_3kC\",\n      stepTag: \"_1fF\",\n      LightActive: \"_2N_\",\n      point: \"_1Zj\",\n      points: \"_13E\",\n      menuPoint: \"_2Je\",\n      deleteButton: \"_1gB\",\n      \"light-point\": \"tRz\",\n      box: \"_1z1\",\n      show: \"_1s7\",\n      handlebar: \"eQ7\",\n      editcontent: \"_1zy\",\n      showEdit: \"_16J\",\n      writing: \"_2G5\",\n      pointColor: \"_2bP\",\n      deleteicon: \"_1Qg\",\n      menuContainer: \"_2iJ\",\n      close: \"f4X\",\n      recordBall: \"oLC\",\n      recording: \"_2FU\",\n      arrived: \"uyU\",\n      menuButton: \"OTU\",\n      esLight: \"_3Ds\",\n      light: \"_-1e\",\n      sunshine: \"cGb\",\n      lightAll: \"_266\",\n      arrowLeft: \"_1Rg\",\n      leftAlign: \"_2BO\",\n      rightAlign: \"EyG\",\n      eye: \"_37b\",\n      \"point-notifi\": \"_1HC\",\n      fade_out_none: \"_1y5\"\n    };\n  }, function (t, e) {\n    t.exports = function (t) {\n      var e = [];\n      return e.toString = function () {\n        return this.map(function (e) {\n          var n = function (t, e) {\n            var n = t[1] || \"\",\n                r = t[3];\n            if (!r) return n;\n\n            if (e && \"function\" == typeof btoa) {\n              var o = (a = r, \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(a)))) + \" */\"),\n                  i = r.sources.map(function (t) {\n                return \"/*# sourceURL=\" + r.sourceRoot + t + \" */\";\n              });\n              return [n].concat(i).concat([o]).join(\"\\n\");\n            }\n\n            var a;\n            return [n].join(\"\\n\");\n          }(e, t);\n\n          return e[2] ? \"@media \" + e[2] + \"{\" + n + \"}\" : n;\n        }).join(\"\");\n      }, e.i = function (t, n) {\n        \"string\" == typeof t && (t = [[null, t, \"\"]]);\n\n        for (var r = {}, o = 0; o < this.length; o++) {\n          var i = this[o][0];\n          \"number\" == typeof i && (r[i] = !0);\n        }\n\n        for (o = 0; o < t.length; o++) {\n          var a = t[o];\n          \"number\" == typeof a[0] && r[a[0]] || (n && !a[2] ? a[2] = n : n && (a[2] = \"(\" + a[2] + \") and (\" + n + \")\"), e.push(a));\n        }\n      }, e;\n    };\n  }, function (t, e, n) {\n    var r,\n        o,\n        i = {},\n        a = (r = function r() {\n      return window && document && document.all && !window.atob;\n    }, function () {\n      return void 0 === o && (o = r.apply(this, arguments)), o;\n    }),\n        s = function s(t, e) {\n      return e ? e.querySelector(t) : document.querySelector(t);\n    },\n        l = function (t) {\n      var e = {};\n      return function (t, n) {\n        if (\"function\" == typeof t) return t();\n\n        if (void 0 === e[t]) {\n          var r = s.call(this, t, n);\n          if (window.HTMLIFrameElement && r instanceof window.HTMLIFrameElement) try {\n            r = r.contentDocument.head;\n          } catch (t) {\n            r = null;\n          }\n          e[t] = r;\n        }\n\n        return e[t];\n      };\n    }(),\n        c = null,\n        u = 0,\n        d = [],\n        p = n(20);\n\n    function h(t, e) {\n      for (var n = 0; n < t.length; n++) {\n        var r = t[n],\n            o = i[r.id];\n\n        if (o) {\n          o.refs++;\n\n          for (var a = 0; a < o.parts.length; a++) {\n            o.parts[a](r.parts[a]);\n          }\n\n          for (; a < r.parts.length; a++) {\n            o.parts.push(_(r.parts[a], e));\n          }\n        } else {\n          var s = [];\n\n          for (a = 0; a < r.parts.length; a++) {\n            s.push(_(r.parts[a], e));\n          }\n\n          i[r.id] = {\n            id: r.id,\n            refs: 1,\n            parts: s\n          };\n        }\n      }\n    }\n\n    function f(t, e) {\n      for (var n = [], r = {}, o = 0; o < t.length; o++) {\n        var i = t[o],\n            a = e.base ? i[0] + e.base : i[0],\n            s = {\n          css: i[1],\n          media: i[2],\n          sourceMap: i[3]\n        };\n        r[a] ? r[a].parts.push(s) : n.push(r[a] = {\n          id: a,\n          parts: [s]\n        });\n      }\n\n      return n;\n    }\n\n    function g(t, e) {\n      var n = l(t.insertInto);\n      if (!n) throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n      var r = d[d.length - 1];\n      if (\"top\" === t.insertAt) r ? r.nextSibling ? n.insertBefore(e, r.nextSibling) : n.appendChild(e) : n.insertBefore(e, n.firstChild), d.push(e);else if (\"bottom\" === t.insertAt) n.appendChild(e);else {\n        if (\"object\" != typeof t.insertAt || !t.insertAt.before) throw new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n        var o = l(t.insertAt.before, n);\n        n.insertBefore(e, o);\n      }\n    }\n\n    function v(t) {\n      if (null === t.parentNode) return !1;\n      t.parentNode.removeChild(t);\n      var e = d.indexOf(t);\n      e >= 0 && d.splice(e, 1);\n    }\n\n    function m(t) {\n      var e = document.createElement(\"style\");\n\n      if (void 0 === t.attrs.type && (t.attrs.type = \"text/css\"), void 0 === t.attrs.nonce) {\n        var r = function () {\n          0;\n          return n.nc;\n        }();\n\n        r && (t.attrs.nonce = r);\n      }\n\n      return y(e, t.attrs), g(t, e), e;\n    }\n\n    function y(t, e) {\n      Object.keys(e).forEach(function (n) {\n        t.setAttribute(n, e[n]);\n      });\n    }\n\n    function _(t, e) {\n      var n, r, o, i;\n\n      if (e.transform && t.css) {\n        if (!(i = \"function\" == typeof e.transform ? e.transform(t.css) : e.transform[\"default\"](t.css))) return function () {};\n        t.css = i;\n      }\n\n      if (e.singleton) {\n        var a = u++;\n        n = c || (c = m(e)), r = w.bind(null, n, a, !1), o = w.bind(null, n, a, !0);\n      } else t.sourceMap && \"function\" == typeof URL && \"function\" == typeof URL.createObjectURL && \"function\" == typeof URL.revokeObjectURL && \"function\" == typeof Blob && \"function\" == typeof btoa ? (n = function (t) {\n        var e = document.createElement(\"link\");\n        return void 0 === t.attrs.type && (t.attrs.type = \"text/css\"), t.attrs.rel = \"stylesheet\", y(e, t.attrs), g(t, e), e;\n      }(e), r = k.bind(null, n, e), o = function o() {\n        v(n), n.href && URL.revokeObjectURL(n.href);\n      }) : (n = m(e), r = S.bind(null, n), o = function o() {\n        v(n);\n      });\n\n      return r(t), function (e) {\n        if (e) {\n          if (e.css === t.css && e.media === t.media && e.sourceMap === t.sourceMap) return;\n          r(t = e);\n        } else o();\n      };\n    }\n\n    t.exports = function (t, e) {\n      if (\"undefined\" != typeof DEBUG && DEBUG && \"object\" != typeof document) throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n      (e = e || {}).attrs = \"object\" == typeof e.attrs ? e.attrs : {}, e.singleton || \"boolean\" == typeof e.singleton || (e.singleton = a()), e.insertInto || (e.insertInto = \"head\"), e.insertAt || (e.insertAt = \"bottom\");\n      var n = f(t, e);\n      return h(n, e), function (t) {\n        for (var r = [], o = 0; o < n.length; o++) {\n          var a = n[o];\n          (s = i[a.id]).refs--, r.push(s);\n        }\n\n        t && h(f(t, e), e);\n\n        for (o = 0; o < r.length; o++) {\n          var s;\n\n          if (0 === (s = r[o]).refs) {\n            for (var l = 0; l < s.parts.length; l++) {\n              s.parts[l]();\n            }\n\n            delete i[s.id];\n          }\n        }\n      };\n    };\n\n    var b,\n        x = (b = [], function (t, e) {\n      return b[t] = e, b.filter(Boolean).join(\"\\n\");\n    });\n\n    function w(t, e, n, r) {\n      var o = n ? \"\" : r.css;\n      if (t.styleSheet) t.styleSheet.cssText = x(e, o);else {\n        var i = document.createTextNode(o),\n            a = t.childNodes;\n        a[e] && t.removeChild(a[e]), a.length ? t.insertBefore(i, a[e]) : t.appendChild(i);\n      }\n    }\n\n    function S(t, e) {\n      var n = e.css,\n          r = e.media;\n      if (r && t.setAttribute(\"media\", r), t.styleSheet) t.styleSheet.cssText = n;else {\n        for (; t.firstChild;) {\n          t.removeChild(t.firstChild);\n        }\n\n        t.appendChild(document.createTextNode(n));\n      }\n    }\n\n    function k(t, e, n) {\n      var r = n.css,\n          o = n.sourceMap,\n          i = void 0 === e.convertToAbsoluteUrls && o;\n      (e.convertToAbsoluteUrls || i) && (r = p(r)), o && (r += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(o)))) + \" */\");\n      var a = new Blob([r], {\n        type: \"text/css\"\n      }),\n          s = t.href;\n      t.href = URL.createObjectURL(a), s && URL.revokeObjectURL(s);\n    }\n  }, function (t, e) {\n    t.exports = function (t) {\n      var e =  true && window.location;\n      if (!e) throw new Error(\"fixUrls requires window.location\");\n      if (!t || \"string\" != typeof t) return t;\n      var n = e.protocol + \"//\" + e.host,\n          r = n + e.pathname.replace(/\\/[^\\/]*$/, \"/\");\n      return t.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function (t, e) {\n        var o,\n            i = e.trim().replace(/^\"(.*)\"$/, function (t, e) {\n          return e;\n        }).replace(/^'(.*)'$/, function (t, e) {\n          return e;\n        });\n        return /^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(i) ? t : (o = 0 === i.indexOf(\"//\") ? i : 0 === i.indexOf(\"/\") ? n + i : r + i.replace(/^\\.\\//, \"\"), \"url(\" + JSON.stringify(o) + \")\");\n      });\n    };\n  }, function (t, e, n) {\n    \"use strict\";\n\n    n.r(e);\n    var r = n(11),\n        o = n.n(r),\n        i = n(9),\n        a = n.n(i);\n\n    function s(t) {\n      var e = ((t || window.location.href).match(/\\?(.*)/) || [])[1],\n          n = {},\n          r = [];\n      return e ? (e.split(\"&\").forEach(function (t) {\n        var e = t.split(\"=\");\n        e[0] && (r.push(e[0]), n[e[0]] = e[1]);\n      }), {\n        paramObj: n,\n        paramKeys: r\n      }) : {\n        paramObj: n,\n        paramKeys: r\n      };\n    }\n\n    function l(t) {\n      return btoa(encodeURI(JSON.stringify(t)));\n    }\n\n    function c(t) {\n      var e = {};\n\n      try {\n        e = JSON.parse(decodeURI(atob(t)));\n      } catch (t) {}\n\n      return e;\n    }\n\n    function u(t) {\n      var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 300,\n          n = !0;\n      return function () {\n        var r = arguments,\n            o = this;\n        n && (n = !1, setTimeout(function () {\n          t.apply(o, r), n = !0;\n        }, e));\n      };\n    }\n\n    function d(t) {\n      var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 300,\n          n = null;\n      return function () {\n        var r = arguments,\n            o = this;\n        clearTimeout(n), n = setTimeout(function () {\n          t.apply(o, r);\n        }, e);\n      };\n    }\n\n    window;\n\n    function p(t, e, n, r, o) {\n      var i = t.splitText(e),\n          a = i.splitText(n - e),\n          s = document.createElement(\"light\");\n      return s.dataset.highlight = o, s.style.backgroundColor = r, s.style = \"--color:\".concat(r), s.textContent = i.textContent, i.parentNode.replaceChild(s, i), a;\n    }\n\n    var h = function h(t, e, n) {\n      var r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : \"\",\n          o = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : [],\n          i = arguments.length > 5 ? arguments[5] : void 0;\n      if (t && e) {\n        if (n) {\n          t.dataset.highlightbk = \"y\";\n          var a = 0,\n              s = [e],\n              c = m(t);\n          c.id = l(e), c.color = r;\n\n          var u = 0,\n              d = function t(n) {\n            var r = new RegExp(e.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\").replace(/[\\s]+/gim, \"[\\\\s]+\"), \"gmi\");\n            y(c, r, 0, function (t, e) {\n              var n = o.some(function (t) {\n                return t.contains(e);\n              }),\n                  r = e.parentNode || document.body;\n              return u = r.dataset.highlight ? u + 1 : u, !n && !r.dataset.highlight;\n            }, function (t) {\n              a++;\n            }, function () {\n              s[s.length - 1] === n || t(s[s.indexOf(n) + 1]);\n            });\n          };\n\n          0 === s.length || (d(s[0]), 0 === a && setTimeout(function () {\n            d(s[0]);\n          }, 2e3), \"function\" == typeof i && i({\n            totalMatches: a || u,\n            id: c.id\n          }));\n        } else {\n          for (var p = t.querySelectorAll(\"light[data-highlight='\".concat(l(e), \"']\")), h = 0; h < p.length; h++) {\n            var f = p[h];\n            f.outerHTML = f.innerHTML;\n          }\n\n          var g = t.querySelectorAll(\"light[data-highlight]\");\n          0 === g.length && delete t.dataset.highlightbk;\n        }\n      } else i({\n        totalMatches: 0\n      });\n    },\n        f = function f(t, e, n, r) {\n      if (n > document.documentElement.clientHeight / 2 && t && t.scrollIntoView) return t.scrollIntoView({\n        block: \"center\",\n        behavior: \"smooth\"\n      }), void (\"function\" == typeof r && setTimeout(function () {\n        return r();\n      }, 100));\n      var o = setInterval(function () {\n        var t,\n            i,\n            a = v(),\n            s = a.x,\n            l = a.y;\n        t = s + (e - s) / 6, i = l + (n - l) / 6, g.scrollLeft = t, g.scrollTop = i, window.scrollTo(t, i);\n        var c = v(),\n            u = c.x;\n        l === c.y && s === u && (clearInterval(o), \"function\" == typeof r && r());\n      }, 30);\n      return o;\n    },\n        g = document.documentElement || document.body;\n\n    function v() {\n      return {\n        x: window.pageXOffset || g.scrollLeft || g.scrollLeft,\n        y: window.pageYOffset || g.scrollTop || g.scrollTop\n      };\n    }\n\n    function m(t) {\n      for (var e, n = [], r = {\n        acceptNode: function acceptNode(t) {\n          return 3 === t.nodeType ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_REJECT;\n        }\n      }, o = document.createNodeIterator(t, NodeFilter.SHOW_TEXT, r, !1), i = \"\"; e = o.nextNode();) {\n        n.push({\n          node: e,\n          start: i.length,\n          end: (i += e.textContent).length\n        });\n      }\n\n      return {\n        nodes: n,\n        value: i\n      };\n    }\n\n    function y(t, e, n, r, o, i) {\n      for (var a, s = 0 === n ? 0 : n + 1; null !== (a = e.exec(t.value)) && \"\" !== a[s];) {\n        var l = a.index;\n        if (0 !== s) for (var c = 1; c < s; c++) {\n          l += a[c].length;\n        }\n\n        _(t, l, l + a[s].length, function (t) {\n          return r(a[s], t);\n        }, function (t, n) {\n          e.lastIndex = n, o(t);\n        });\n      }\n\n      i();\n    }\n\n    function _(t, e, n, r, o) {\n      t.nodes.every(function (i, a) {\n        var s = t.nodes[a + 1];\n\n        if (void 0 === s || s.start > e) {\n          if (!r(i.node)) return !1;\n          var l = e - i.start,\n              c = (n > i.end ? i.end : n) - i.start,\n              u = t.value.substr(0, i.start),\n              d = t.value.substr(c + i.start);\n          if (i.node = p(i.node, l, c, t.color, t.id), t.value = u + d, t.nodes.forEach(function (e, n) {\n            n >= a && (t.nodes[n].start > 0 && n !== a && (t.nodes[n].start -= c), t.nodes[n].end -= c);\n          }), n -= c, o(i.node.previousSibling, i.start), !(n > i.end)) return !1;\n          e = i.end;\n        }\n\n        return !0;\n      });\n    }\n\n    function b() {\n      var t = document.querySelector(\"link[rel~=icon]\");\n      return t ? t.href : window.location.origin + \"/favicon.ico\";\n    }\n\n    var x = n(8),\n        w = n.n(x),\n        S = n(4),\n        k = n.n(S),\n        N = n(5),\n        C = n.n(N),\n        A = n(3),\n        E = n.n(A),\n        T = n(6),\n        L = n.n(T),\n        I = n(7),\n        O = n.n(I),\n        M = n(2),\n        P = n.n(M),\n        R =  true && null != window.customElements && void 0 !== window.customElements.polyfillWrapFlushCallback,\n        z = function z(t, e) {\n      for (var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null; e !== n;) {\n        var r = e.nextSibling;\n        t.removeChild(e), e = r;\n      }\n    };\n\n    var D = \"{{lit-\".concat(String(Math.random()).slice(2), \"}}\"),\n        j = \"\\x3c!--\".concat(D, \"--\\x3e\"),\n        U = new RegExp(\"\".concat(D, \"|\").concat(j)),\n        F = function t(e, n) {\n      !function (t, e) {\n        if (!(t instanceof e)) throw new TypeError(\"Cannot call a class as a function\");\n      }(this, t), this.parts = [], this.element = n;\n\n      for (var r = [], o = [], i = document.createTreeWalker(n.content, 133, null, !1), a = 0, s = -1, l = 0, c = e.strings, u = e.values.length; l < u;) {\n        var d = i.nextNode();\n\n        if (null !== d) {\n          if (s++, 1 === d.nodeType) {\n            if (d.hasAttributes()) {\n              for (var p = d.attributes, h = p.length, f = 0, g = 0; g < h; g++) {\n                H(p[g].name, \"$lit$\") && f++;\n              }\n\n              for (; f-- > 0;) {\n                var v = c[l],\n                    m = q.exec(v)[2],\n                    y = m.toLowerCase() + \"$lit$\",\n                    _ = d.getAttribute(y);\n\n                d.removeAttribute(y);\n\n                var b = _.split(U);\n\n                this.parts.push({\n                  type: \"attribute\",\n                  index: s,\n                  name: m,\n                  strings: b\n                }), l += b.length - 1;\n              }\n            }\n\n            \"TEMPLATE\" === d.tagName && (o.push(d), i.currentNode = d.content);\n          } else if (3 === d.nodeType) {\n            var x = d.data;\n\n            if (x.indexOf(D) >= 0) {\n              for (var w = d.parentNode, S = x.split(U), k = S.length - 1, N = 0; N < k; N++) {\n                var C = void 0,\n                    A = S[N];\n                if (\"\" === A) C = V();else {\n                  var E = q.exec(A);\n                  null !== E && H(E[2], \"$lit$\") && (A = A.slice(0, E.index) + E[1] + E[2].slice(0, -\"$lit$\".length) + E[3]), C = document.createTextNode(A);\n                }\n                w.insertBefore(C, d), this.parts.push({\n                  type: \"node\",\n                  index: ++s\n                });\n              }\n\n              \"\" === S[k] ? (w.insertBefore(V(), d), r.push(d)) : d.data = S[k], l += k;\n            }\n          } else if (8 === d.nodeType) if (d.data === D) {\n            var T = d.parentNode;\n            null !== d.previousSibling && s !== a || (s++, T.insertBefore(V(), d)), a = s, this.parts.push({\n              type: \"node\",\n              index: s\n            }), null === d.nextSibling ? d.data = \"\" : (r.push(d), s--), l++;\n          } else for (var L = -1; -1 !== (L = d.data.indexOf(D, L + 1));) {\n            this.parts.push({\n              type: \"node\",\n              index: -1\n            }), l++;\n          }\n        } else i.currentNode = o.pop();\n      }\n\n      for (var I = 0, O = r; I < O.length; I++) {\n        var M = O[I];\n        M.parentNode.removeChild(M);\n      }\n    },\n        H = function H(t, e) {\n      var n = t.length - e.length;\n      return n >= 0 && t.slice(n) === e;\n    },\n        B = function B(t) {\n      return -1 !== t.index;\n    },\n        V = function V() {\n      return document.createComment(\"\");\n    },\n        q = /([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n\n    function W(t, e) {\n      for (var n = t.element.content, r = t.parts, o = document.createTreeWalker(n, 133, null, !1), i = G(r), a = r[i], s = -1, l = 0, c = [], u = null; o.nextNode();) {\n        s++;\n        var d = o.currentNode;\n\n        for (d.previousSibling === u && (u = null), e.has(d) && (c.push(d), null === u && (u = d)), null !== u && l++; void 0 !== a && a.index === s;) {\n          a.index = null !== u ? -1 : a.index - l, a = r[i = G(r, i)];\n        }\n      }\n\n      c.forEach(function (t) {\n        return t.parentNode.removeChild(t);\n      });\n    }\n\n    var J = function J(t) {\n      for (var e = 11 === t.nodeType ? 0 : 1, n = document.createTreeWalker(t, 133, null, !1); n.nextNode();) {\n        e++;\n      }\n\n      return e;\n    },\n        G = function G(t) {\n      for (var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : -1, n = e + 1; n < t.length; n++) {\n        var r = t[n];\n        if (B(r)) return n;\n      }\n\n      return -1;\n    };\n\n    var Y = new WeakMap(),\n        $ = function $(t) {\n      return \"function\" == typeof t && Y.has(t);\n    },\n        X = {},\n        Z = {};\n\n    function Q(t) {\n      return function (t) {\n        if (Array.isArray(t)) return et(t);\n      }(t) || function (t) {\n        if (\"undefined\" != typeof Symbol && Symbol.iterator in Object(t)) return Array.from(t);\n      }(t) || tt(t) || function () {\n        throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n      }();\n    }\n\n    function K(t) {\n      if (\"undefined\" == typeof Symbol || null == t[Symbol.iterator]) {\n        if (Array.isArray(t) || (t = tt(t))) {\n          var e = 0,\n              n = function n() {};\n\n          return {\n            s: n,\n            n: function n() {\n              return e >= t.length ? {\n                done: !0\n              } : {\n                done: !1,\n                value: t[e++]\n              };\n            },\n            e: function e(t) {\n              throw t;\n            },\n            f: n\n          };\n        }\n\n        throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n      }\n\n      var r,\n          o,\n          i = !0,\n          a = !1;\n      return {\n        s: function s() {\n          r = t[Symbol.iterator]();\n        },\n        n: function n() {\n          var t = r.next();\n          return i = t.done, t;\n        },\n        e: function e(t) {\n          a = !0, o = t;\n        },\n        f: function f() {\n          try {\n            i || null == r[\"return\"] || r[\"return\"]();\n          } finally {\n            if (a) throw o;\n          }\n        }\n      };\n    }\n\n    function tt(t, e) {\n      if (t) {\n        if (\"string\" == typeof t) return et(t, e);\n        var n = Object.prototype.toString.call(t).slice(8, -1);\n        return \"Object\" === n && t.constructor && (n = t.constructor.name), \"Map\" === n || \"Set\" === n ? Array.from(t) : \"Arguments\" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? et(t, e) : void 0;\n      }\n    }\n\n    function et(t, e) {\n      (null == e || e > t.length) && (e = t.length);\n\n      for (var n = 0, r = new Array(e); n < e; n++) {\n        r[n] = t[n];\n      }\n\n      return r;\n    }\n\n    function nt(t, e) {\n      for (var n = 0; n < e.length; n++) {\n        var r = e[n];\n        r.enumerable = r.enumerable || !1, r.configurable = !0, \"value\" in r && (r.writable = !0), Object.defineProperty(t, r.key, r);\n      }\n    }\n\n    var rt = function () {\n      function t(e, n, r) {\n        !function (t, e) {\n          if (!(t instanceof e)) throw new TypeError(\"Cannot call a class as a function\");\n        }(this, t), this.__parts = [], this.template = e, this.processor = n, this.options = r;\n      }\n\n      var e, n, r;\n      return e = t, (n = [{\n        key: \"update\",\n        value: function value(t) {\n          var e,\n              n = 0,\n              r = K(this.__parts);\n\n          try {\n            for (r.s(); !(e = r.n()).done;) {\n              var o = e.value;\n              void 0 !== o && o.setValue(t[n]), n++;\n            }\n          } catch (t) {\n            r.e(t);\n          } finally {\n            r.f();\n          }\n\n          var i,\n              a = K(this.__parts);\n\n          try {\n            for (a.s(); !(i = a.n()).done;) {\n              var s = i.value;\n              void 0 !== s && s.commit();\n            }\n          } catch (t) {\n            a.e(t);\n          } finally {\n            a.f();\n          }\n        }\n      }, {\n        key: \"_clone\",\n        value: function value() {\n          for (var t, e = R ? this.template.element.content.cloneNode(!0) : document.importNode(this.template.element.content, !0), n = [], r = this.template.parts, o = document.createTreeWalker(e, 133, null, !1), i = 0, a = 0, s = o.nextNode(); i < r.length;) {\n            if (t = r[i], B(t)) {\n              for (; a < t.index;) {\n                a++, \"TEMPLATE\" === s.nodeName && (n.push(s), o.currentNode = s.content), null === (s = o.nextNode()) && (o.currentNode = n.pop(), s = o.nextNode());\n              }\n\n              if (\"node\" === t.type) {\n                var l = this.processor.handleTextExpression(this.options);\n                l.insertAfterNode(s.previousSibling), this.__parts.push(l);\n              } else {\n                var c;\n\n                (c = this.__parts).push.apply(c, Q(this.processor.handleAttributeExpressions(s, t.name, t.strings, this.options)));\n              }\n\n              i++;\n            } else this.__parts.push(void 0), i++;\n          }\n\n          return R && (document.adoptNode(e), customElements.upgrade(e)), e;\n        }\n      }]) && nt(e.prototype, n), r && nt(e, r), t;\n    }();\n\n    function ot(t, e) {\n      if (!(t instanceof e)) throw new TypeError(\"Cannot call a class as a function\");\n    }\n\n    function it(t, e) {\n      for (var n = 0; n < e.length; n++) {\n        var r = e[n];\n        r.enumerable = r.enumerable || !1, r.configurable = !0, \"value\" in r && (r.writable = !0), Object.defineProperty(t, r.key, r);\n      }\n    }\n\n    function at(t, e, n) {\n      return e && it(t.prototype, e), n && it(t, n), t;\n    }\n\n    var st = \" \".concat(D, \" \"),\n        lt = function () {\n      function t(e, n, r, o) {\n        ot(this, t), this.strings = e, this.values = n, this.type = r, this.processor = o;\n      }\n\n      return at(t, [{\n        key: \"getHTML\",\n        value: function value() {\n          for (var t = this.strings.length - 1, e = \"\", n = !1, r = 0; r < t; r++) {\n            var o = this.strings[r],\n                i = o.lastIndexOf(\"\\x3c!--\");\n            n = (i > -1 || n) && -1 === o.indexOf(\"--\\x3e\", i + 1);\n            var a = q.exec(o);\n            e += null === a ? o + (n ? st : j) : o.substr(0, a.index) + a[1] + a[2] + \"$lit$\" + a[3] + D;\n          }\n\n          return e += this.strings[t];\n        }\n      }, {\n        key: \"getTemplateElement\",\n        value: function value() {\n          var t = document.createElement(\"template\");\n          return t.innerHTML = this.getHTML(), t;\n        }\n      }]), t;\n    }();\n\n    function ct(t, e, n) {\n      return (ct = \"undefined\" != typeof Reflect && Reflect.get ? Reflect.get : function (t, e, n) {\n        var r = function (t, e) {\n          for (; !Object.prototype.hasOwnProperty.call(t, e) && null !== (t = ft(t));) {\n            ;\n          }\n\n          return t;\n        }(t, e);\n\n        if (r) {\n          var o = Object.getOwnPropertyDescriptor(r, e);\n          return o.get ? o.get.call(n) : o.value;\n        }\n      })(t, e, n || t);\n    }\n\n    function ut(t, e) {\n      if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\");\n      t.prototype = Object.create(e && e.prototype, {\n        constructor: {\n          value: t,\n          writable: !0,\n          configurable: !0\n        }\n      }), e && dt(t, e);\n    }\n\n    function dt(t, e) {\n      return (dt = Object.setPrototypeOf || function (t, e) {\n        return t.__proto__ = e, t;\n      })(t, e);\n    }\n\n    function pt(t) {\n      var e = function () {\n        if (\"undefined\" == typeof Reflect || !Reflect.construct) return !1;\n        if (Reflect.construct.sham) return !1;\n        if (\"function\" == typeof Proxy) return !0;\n\n        try {\n          return Date.prototype.toString.call(Reflect.construct(Date, [], function () {})), !0;\n        } catch (t) {\n          return !1;\n        }\n      }();\n\n      return function () {\n        var n,\n            r = ft(t);\n\n        if (e) {\n          var o = ft(this).constructor;\n          n = Reflect.construct(r, arguments, o);\n        } else n = r.apply(this, arguments);\n\n        return ht(this, n);\n      };\n    }\n\n    function ht(t, e) {\n      return !e || \"object\" !== bt(e) && \"function\" != typeof e ? function (t) {\n        if (void 0 === t) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n        return t;\n      }(t) : e;\n    }\n\n    function ft(t) {\n      return (ft = Object.setPrototypeOf ? Object.getPrototypeOf : function (t) {\n        return t.__proto__ || Object.getPrototypeOf(t);\n      })(t);\n    }\n\n    function gt(t) {\n      if (\"undefined\" == typeof Symbol || null == t[Symbol.iterator]) {\n        if (Array.isArray(t) || (t = function (t, e) {\n          if (!t) return;\n          if (\"string\" == typeof t) return vt(t, e);\n          var n = Object.prototype.toString.call(t).slice(8, -1);\n          \"Object\" === n && t.constructor && (n = t.constructor.name);\n          if (\"Map\" === n || \"Set\" === n) return Array.from(t);\n          if (\"Arguments\" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return vt(t, e);\n        }(t))) {\n          var e = 0,\n              n = function n() {};\n\n          return {\n            s: n,\n            n: function n() {\n              return e >= t.length ? {\n                done: !0\n              } : {\n                done: !1,\n                value: t[e++]\n              };\n            },\n            e: function e(t) {\n              throw t;\n            },\n            f: n\n          };\n        }\n\n        throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n      }\n\n      var r,\n          o,\n          i = !0,\n          a = !1;\n      return {\n        s: function s() {\n          r = t[Symbol.iterator]();\n        },\n        n: function n() {\n          var t = r.next();\n          return i = t.done, t;\n        },\n        e: function e(t) {\n          a = !0, o = t;\n        },\n        f: function f() {\n          try {\n            i || null == r[\"return\"] || r[\"return\"]();\n          } finally {\n            if (a) throw o;\n          }\n        }\n      };\n    }\n\n    function vt(t, e) {\n      (null == e || e > t.length) && (e = t.length);\n\n      for (var n = 0, r = new Array(e); n < e; n++) {\n        r[n] = t[n];\n      }\n\n      return r;\n    }\n\n    function mt(t, e) {\n      if (!(t instanceof e)) throw new TypeError(\"Cannot call a class as a function\");\n    }\n\n    function yt(t, e) {\n      for (var n = 0; n < e.length; n++) {\n        var r = e[n];\n        r.enumerable = r.enumerable || !1, r.configurable = !0, \"value\" in r && (r.writable = !0), Object.defineProperty(t, r.key, r);\n      }\n    }\n\n    function _t(t, e, n) {\n      return e && yt(t.prototype, e), n && yt(t, n), t;\n    }\n\n    function bt(t) {\n      return (bt = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (t) {\n        return typeof t;\n      } : function (t) {\n        return t && \"function\" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? \"symbol\" : typeof t;\n      })(t);\n    }\n\n    var xt = function xt(t) {\n      return null === t || !(\"object\" === bt(t) || \"function\" == typeof t);\n    },\n        wt = function wt(t) {\n      return Array.isArray(t) || !(!t || !t[Symbol.iterator]);\n    },\n        St = function () {\n      function t(e, n, r) {\n        mt(this, t), this.dirty = !0, this.element = e, this.name = n, this.strings = r, this.parts = [];\n\n        for (var o = 0; o < r.length - 1; o++) {\n          this.parts[o] = this._createPart();\n        }\n      }\n\n      return _t(t, [{\n        key: \"_createPart\",\n        value: function value() {\n          return new kt(this);\n        }\n      }, {\n        key: \"_getValue\",\n        value: function value() {\n          for (var t = this.strings, e = t.length - 1, n = \"\", r = 0; r < e; r++) {\n            n += t[r];\n            var o = this.parts[r];\n\n            if (void 0 !== o) {\n              var i = o.value;\n              if (xt(i) || !wt(i)) n += \"string\" == typeof i ? i : String(i);else {\n                var a,\n                    s = gt(i);\n\n                try {\n                  for (s.s(); !(a = s.n()).done;) {\n                    var l = a.value;\n                    n += \"string\" == typeof l ? l : String(l);\n                  }\n                } catch (t) {\n                  s.e(t);\n                } finally {\n                  s.f();\n                }\n              }\n            }\n          }\n\n          return n += t[e];\n        }\n      }, {\n        key: \"commit\",\n        value: function value() {\n          this.dirty && (this.dirty = !1, this.element.setAttribute(this.name, this._getValue()));\n        }\n      }]), t;\n    }(),\n        kt = function () {\n      function t(e) {\n        mt(this, t), this.value = void 0, this.committer = e;\n      }\n\n      return _t(t, [{\n        key: \"setValue\",\n        value: function value(t) {\n          t === X || xt(t) && t === this.value || (this.value = t, $(t) || (this.committer.dirty = !0));\n        }\n      }, {\n        key: \"commit\",\n        value: function value() {\n          for (; $(this.value);) {\n            var t = this.value;\n            this.value = X, t(this);\n          }\n\n          this.value !== X && this.committer.commit();\n        }\n      }]), t;\n    }(),\n        Nt = function () {\n      function t(e) {\n        mt(this, t), this.value = void 0, this.__pendingValue = void 0, this.options = e;\n      }\n\n      return _t(t, [{\n        key: \"appendInto\",\n        value: function value(t) {\n          this.startNode = t.appendChild(V()), this.endNode = t.appendChild(V());\n        }\n      }, {\n        key: \"insertAfterNode\",\n        value: function value(t) {\n          this.startNode = t, this.endNode = t.nextSibling;\n        }\n      }, {\n        key: \"appendIntoPart\",\n        value: function value(t) {\n          t.__insert(this.startNode = V()), t.__insert(this.endNode = V());\n        }\n      }, {\n        key: \"insertAfterPart\",\n        value: function value(t) {\n          t.__insert(this.startNode = V()), this.endNode = t.endNode, t.endNode = this.startNode;\n        }\n      }, {\n        key: \"setValue\",\n        value: function value(t) {\n          this.__pendingValue = t;\n        }\n      }, {\n        key: \"commit\",\n        value: function value() {\n          if (null !== this.startNode.parentNode) {\n            for (; $(this.__pendingValue);) {\n              var t = this.__pendingValue;\n              this.__pendingValue = X, t(this);\n            }\n\n            var e = this.__pendingValue;\n            e !== X && (xt(e) ? e !== this.value && this.__commitText(e) : e instanceof lt ? this.__commitTemplateResult(e) : e instanceof Node ? this.__commitNode(e) : wt(e) ? this.__commitIterable(e) : e === Z ? (this.value = Z, this.clear()) : this.__commitText(e));\n          }\n        }\n      }, {\n        key: \"__insert\",\n        value: function value(t) {\n          this.endNode.parentNode.insertBefore(t, this.endNode);\n        }\n      }, {\n        key: \"__commitNode\",\n        value: function value(t) {\n          this.value !== t && (this.clear(), this.__insert(t), this.value = t);\n        }\n      }, {\n        key: \"__commitText\",\n        value: function value(t) {\n          var e = this.startNode.nextSibling,\n              n = \"string\" == typeof (t = null == t ? \"\" : t) ? t : String(t);\n          e === this.endNode.previousSibling && 3 === e.nodeType ? e.data = n : this.__commitNode(document.createTextNode(n)), this.value = t;\n        }\n      }, {\n        key: \"__commitTemplateResult\",\n        value: function value(t) {\n          var e = this.options.templateFactory(t);\n          if (this.value instanceof rt && this.value.template === e) this.value.update(t.values);else {\n            var n = new rt(e, t.processor, this.options),\n                r = n._clone();\n\n            n.update(t.values), this.__commitNode(r), this.value = n;\n          }\n        }\n      }, {\n        key: \"__commitIterable\",\n        value: function value(e) {\n          Array.isArray(this.value) || (this.value = [], this.clear());\n          var n,\n              r,\n              o = this.value,\n              i = 0,\n              a = gt(e);\n\n          try {\n            for (a.s(); !(r = a.n()).done;) {\n              var s = r.value;\n              void 0 === (n = o[i]) && (n = new t(this.options), o.push(n), 0 === i ? n.appendIntoPart(this) : n.insertAfterPart(o[i - 1])), n.setValue(s), n.commit(), i++;\n            }\n          } catch (t) {\n            a.e(t);\n          } finally {\n            a.f();\n          }\n\n          i < o.length && (o.length = i, this.clear(n && n.endNode));\n        }\n      }, {\n        key: \"clear\",\n        value: function value() {\n          var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.startNode;\n          z(this.startNode.parentNode, t.nextSibling, this.endNode);\n        }\n      }]), t;\n    }(),\n        Ct = function () {\n      function t(e, n, r) {\n        if (mt(this, t), this.value = void 0, this.__pendingValue = void 0, 2 !== r.length || \"\" !== r[0] || \"\" !== r[1]) throw new Error(\"Boolean attributes can only contain a single expression\");\n        this.element = e, this.name = n, this.strings = r;\n      }\n\n      return _t(t, [{\n        key: \"setValue\",\n        value: function value(t) {\n          this.__pendingValue = t;\n        }\n      }, {\n        key: \"commit\",\n        value: function value() {\n          for (; $(this.__pendingValue);) {\n            var t = this.__pendingValue;\n            this.__pendingValue = X, t(this);\n          }\n\n          if (this.__pendingValue !== X) {\n            var e = !!this.__pendingValue;\n            this.value !== e && (e ? this.element.setAttribute(this.name, \"\") : this.element.removeAttribute(this.name), this.value = e), this.__pendingValue = X;\n          }\n        }\n      }]), t;\n    }(),\n        At = function (t) {\n      ut(n, t);\n      var e = pt(n);\n\n      function n(t, r, o) {\n        var i;\n        return mt(this, n), (i = e.call(this, t, r, o)).single = 2 === o.length && \"\" === o[0] && \"\" === o[1], i;\n      }\n\n      return _t(n, [{\n        key: \"_createPart\",\n        value: function value() {\n          return new Et(this);\n        }\n      }, {\n        key: \"_getValue\",\n        value: function value() {\n          return this.single ? this.parts[0].value : ct(ft(n.prototype), \"_getValue\", this).call(this);\n        }\n      }, {\n        key: \"commit\",\n        value: function value() {\n          this.dirty && (this.dirty = !1, this.element[this.name] = this._getValue());\n        }\n      }]), n;\n    }(St),\n        Et = function (t) {\n      ut(n, t);\n      var e = pt(n);\n\n      function n() {\n        return mt(this, n), e.apply(this, arguments);\n      }\n\n      return n;\n    }(kt),\n        Tt = !1;\n\n    !function () {\n      try {\n        var t = {\n          get capture() {\n            return Tt = !0, !1;\n          }\n\n        };\n        window.addEventListener(\"test\", t, t), window.removeEventListener(\"test\", t, t);\n      } catch (t) {}\n    }();\n\n    var Lt = function () {\n      function t(e, n, r) {\n        var o = this;\n        mt(this, t), this.value = void 0, this.__pendingValue = void 0, this.element = e, this.eventName = n, this.eventContext = r, this.__boundHandleEvent = function (t) {\n          return o.handleEvent(t);\n        };\n      }\n\n      return _t(t, [{\n        key: \"setValue\",\n        value: function value(t) {\n          this.__pendingValue = t;\n        }\n      }, {\n        key: \"commit\",\n        value: function value() {\n          for (; $(this.__pendingValue);) {\n            var t = this.__pendingValue;\n            this.__pendingValue = X, t(this);\n          }\n\n          if (this.__pendingValue !== X) {\n            var e = this.__pendingValue,\n                n = this.value,\n                r = null == e || null != n && (e.capture !== n.capture || e.once !== n.once || e.passive !== n.passive),\n                o = null != e && (null == n || r);\n            r && this.element.removeEventListener(this.eventName, this.__boundHandleEvent, this.__options), o && (this.__options = It(e), this.element.addEventListener(this.eventName, this.__boundHandleEvent, this.__options)), this.value = e, this.__pendingValue = X;\n          }\n        }\n      }, {\n        key: \"handleEvent\",\n        value: function value(t) {\n          \"function\" == typeof this.value ? this.value.call(this.eventContext || this.element, t) : this.value.handleEvent(t);\n        }\n      }]), t;\n    }(),\n        It = function It(t) {\n      return t && (Tt ? {\n        capture: t.capture,\n        passive: t.passive,\n        once: t.once\n      } : t.capture);\n    };\n\n    function Ot(t) {\n      var e = Mt.get(t.type);\n      void 0 === e && (e = {\n        stringsArray: new WeakMap(),\n        keyString: new Map()\n      }, Mt.set(t.type, e));\n      var n = e.stringsArray.get(t.strings);\n      if (void 0 !== n) return n;\n      var r = t.strings.join(D);\n      return void 0 === (n = e.keyString.get(r)) && (n = new F(t, t.getTemplateElement()), e.keyString.set(r, n)), e.stringsArray.set(t.strings, n), n;\n    }\n\n    var Mt = new Map(),\n        Pt = new WeakMap();\n\n    function Rt(t, e) {\n      for (var n = 0; n < e.length; n++) {\n        var r = e[n];\n        r.enumerable = r.enumerable || !1, r.configurable = !0, \"value\" in r && (r.writable = !0), Object.defineProperty(t, r.key, r);\n      }\n    }\n\n    var zt = new (function () {\n      function t() {\n        !function (t, e) {\n          if (!(t instanceof e)) throw new TypeError(\"Cannot call a class as a function\");\n        }(this, t);\n      }\n\n      var e, n, r;\n      return e = t, (n = [{\n        key: \"handleAttributeExpressions\",\n        value: function value(t, e, n, r) {\n          var o = e[0];\n          return \".\" === o ? new At(t, e.slice(1), n).parts : \"@\" === o ? [new Lt(t, e.slice(1), r.eventContext)] : \"?\" === o ? [new Ct(t, e.slice(1), n)] : new St(t, e, n).parts;\n        }\n      }, {\n        key: \"handleTextExpression\",\n        value: function value(t) {\n          return new Nt(t);\n        }\n      }]) && Rt(e.prototype, n), r && Rt(e, r), t;\n    }())();\n     true && (window.litHtmlVersions || (window.litHtmlVersions = [])).push(\"1.2.1\");\n\n    var Dt = function Dt(t) {\n      for (var e = arguments.length, n = new Array(e > 1 ? e - 1 : 0), r = 1; r < e; r++) {\n        n[r - 1] = arguments[r];\n      }\n\n      return new lt(t, n, \"html\", zt);\n    };\n\n    function jt(t) {\n      return (jt = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (t) {\n        return typeof t;\n      } : function (t) {\n        return t && \"function\" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? \"symbol\" : typeof t;\n      })(t);\n    }\n\n    var Ut = function Ut(t, e) {\n      return \"\".concat(t, \"--\").concat(e);\n    },\n        Ft = !0;\n\n    void 0 === window.ShadyCSS ? Ft = !1 : void 0 === window.ShadyCSS.prepareTemplateDom && (console.warn(\"Incompatible ShadyCSS version detected. Please update to at least @webcomponents/webcomponentsjs@2.0.2 and @webcomponents/shadycss@1.3.1.\"), Ft = !1);\n\n    var Ht = function Ht(t) {\n      return function (e) {\n        var n = Ut(e.type, t),\n            r = Mt.get(n);\n        void 0 === r && (r = {\n          stringsArray: new WeakMap(),\n          keyString: new Map()\n        }, Mt.set(n, r));\n        var o = r.stringsArray.get(e.strings);\n        if (void 0 !== o) return o;\n        var i = e.strings.join(D);\n\n        if (void 0 === (o = r.keyString.get(i))) {\n          var a = e.getTemplateElement();\n          Ft && window.ShadyCSS.prepareTemplateDom(a, t), o = new F(e, a), r.keyString.set(i, o);\n        }\n\n        return r.stringsArray.set(e.strings, o), o;\n      };\n    },\n        Bt = [\"html\", \"svg\"],\n        Vt = new Set(),\n        qt = function qt(t, e, n) {\n      Vt.add(t);\n      var r = n ? n.element : document.createElement(\"template\"),\n          o = e.querySelectorAll(\"style\"),\n          i = o.length;\n\n      if (0 !== i) {\n        for (var a = document.createElement(\"style\"), s = 0; s < i; s++) {\n          var l = o[s];\n          l.parentNode.removeChild(l), a.textContent += l.textContent;\n        }\n\n        !function (t) {\n          Bt.forEach(function (e) {\n            var n = Mt.get(Ut(e, t));\n            void 0 !== n && n.keyString.forEach(function (t) {\n              var e = t.element.content,\n                  n = new Set();\n              Array.from(e.querySelectorAll(\"style\")).forEach(function (t) {\n                n.add(t);\n              }), W(t, n);\n            });\n          });\n        }(t);\n        var c = r.content;\n        n ? function (t, e) {\n          var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null,\n              r = t.element.content,\n              o = t.parts;\n          if (null != n) for (var i = document.createTreeWalker(r, 133, null, !1), a = G(o), s = 0, l = -1; i.nextNode();) {\n            l++;\n            var c = i.currentNode;\n\n            for (c === n && (s = J(e), n.parentNode.insertBefore(e, n)); -1 !== a && o[a].index === l;) {\n              if (s > 0) {\n                for (; -1 !== a;) {\n                  o[a].index += s, a = G(o, a);\n                }\n\n                return;\n              }\n\n              a = G(o, a);\n            }\n          } else r.appendChild(e);\n        }(n, a, c.firstChild) : c.insertBefore(a, c.firstChild), window.ShadyCSS.prepareTemplateStyles(r, t);\n        var u = c.querySelector(\"style\");\n        if (window.ShadyCSS.nativeShadow && null !== u) e.insertBefore(u.cloneNode(!0), e.firstChild);else if (n) {\n          c.insertBefore(a, c.firstChild);\n          var d = new Set();\n          d.add(a), W(n, d);\n        }\n      } else window.ShadyCSS.prepareTemplateStyles(r, t);\n    };\n\n    window.JSCompiler_renameProperty = function (t, e) {\n      return t;\n    };\n\n    var Wt = {\n      toAttribute: function toAttribute(t, e) {\n        switch (e) {\n          case Boolean:\n            return t ? \"\" : null;\n\n          case Object:\n          case Array:\n            return null == t ? t : JSON.stringify(t);\n        }\n\n        return t;\n      },\n      fromAttribute: function fromAttribute(t, e) {\n        switch (e) {\n          case Boolean:\n            return null !== t;\n\n          case Number:\n            return null === t ? null : Number(t);\n\n          case Object:\n          case Array:\n            return JSON.parse(t);\n        }\n\n        return t;\n      }\n    },\n        Jt = function Jt(t, e) {\n      return e !== t && (e == e || t == t);\n    },\n        Gt = {\n      attribute: !0,\n      type: String,\n      converter: Wt,\n      reflect: !1,\n      hasChanged: Jt\n    };\n\n    var Yt = /*#__PURE__*/function (_HTMLElement) {\n      _inherits(Yt, _HTMLElement);\n\n      var _super = _createSuper(Yt);\n\n      function Yt() {\n        var _this;\n\n        _classCallCheck(this, Yt);\n\n        _this = _super.call(this), _this._updateState = 0, _this._instanceProperties = void 0, _this._updatePromise = new Promise(function (t) {\n          return _this._enableUpdatingResolver = t;\n        }), _this._changedProperties = new Map(), _this._reflectingProperties = void 0, _this.initialize();\n        return _this;\n      }\n\n      _createClass(Yt, [{\n        key: \"initialize\",\n        value: function initialize() {\n          this._saveInstanceProperties(), this._requestUpdate();\n        }\n      }, {\n        key: \"_saveInstanceProperties\",\n        value: function _saveInstanceProperties() {\n          var _this2 = this;\n\n          this.constructor._classProperties.forEach(function (t, e) {\n            if (_this2.hasOwnProperty(e)) {\n              var _t2 = _this2[e];\n              delete _this2[e], _this2._instanceProperties || (_this2._instanceProperties = new Map()), _this2._instanceProperties.set(e, _t2);\n            }\n          });\n        }\n      }, {\n        key: \"_applyInstanceProperties\",\n        value: function _applyInstanceProperties() {\n          var _this3 = this;\n\n          this._instanceProperties.forEach(function (t, e) {\n            return _this3[e] = t;\n          }), this._instanceProperties = void 0;\n        }\n      }, {\n        key: \"connectedCallback\",\n        value: function connectedCallback() {\n          this.enableUpdating();\n        }\n      }, {\n        key: \"enableUpdating\",\n        value: function enableUpdating() {\n          void 0 !== this._enableUpdatingResolver && (this._enableUpdatingResolver(), this._enableUpdatingResolver = void 0);\n        }\n      }, {\n        key: \"disconnectedCallback\",\n        value: function disconnectedCallback() {}\n      }, {\n        key: \"attributeChangedCallback\",\n        value: function attributeChangedCallback(t, e, n) {\n          e !== n && this._attributeToProperty(t, n);\n        }\n      }, {\n        key: \"_propertyToAttribute\",\n        value: function _propertyToAttribute(t, e) {\n          var n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : Gt;\n\n          var r = this.constructor,\n              o = r._attributeNameForProperty(t, n);\n\n          if (void 0 !== o) {\n            var _t3 = r._propertyValueToAttribute(e, n);\n\n            if (void 0 === _t3) return;\n            this._updateState = 8 | this._updateState, null == _t3 ? this.removeAttribute(o) : this.setAttribute(o, _t3), this._updateState = -9 & this._updateState;\n          }\n        }\n      }, {\n        key: \"_attributeToProperty\",\n        value: function _attributeToProperty(t, e) {\n          if (8 & this._updateState) return;\n\n          var n = this.constructor,\n              r = n._attributeToPropertyMap.get(t);\n\n          if (void 0 !== r) {\n            var _t4 = n.getPropertyOptions(r);\n\n            this._updateState = 16 | this._updateState, this[r] = n._propertyValueFromAttribute(e, _t4), this._updateState = -17 & this._updateState;\n          }\n        }\n      }, {\n        key: \"_requestUpdate\",\n        value: function _requestUpdate(t, e) {\n          var n = !0;\n\n          if (void 0 !== t) {\n            var _r = this.constructor,\n                _o = _r.getPropertyOptions(t);\n\n            _r._valueHasChanged(this[t], e, _o.hasChanged) ? (this._changedProperties.has(t) || this._changedProperties.set(t, e), !0 !== _o.reflect || 16 & this._updateState || (void 0 === this._reflectingProperties && (this._reflectingProperties = new Map()), this._reflectingProperties.set(t, _o))) : n = !1;\n          }\n\n          !this._hasRequestedUpdate && n && (this._updatePromise = this._enqueueUpdate());\n        }\n      }, {\n        key: \"requestUpdate\",\n        value: function requestUpdate(t, e) {\n          return this._requestUpdate(t, e), this.updateComplete;\n        }\n      }, {\n        key: \"_enqueueUpdate\",\n        value: function () {\n          var _enqueueUpdate2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n            var t;\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    this._updateState = 4 | this._updateState;\n                    _context.prev = 1;\n                    _context.next = 4;\n                    return this._updatePromise;\n\n                  case 4:\n                    _context.next = 8;\n                    break;\n\n                  case 6:\n                    _context.prev = 6;\n                    _context.t0 = _context[\"catch\"](1);\n\n                  case 8:\n                    t = this.performUpdate();\n                    _context.t1 = null != t;\n\n                    if (!_context.t1) {\n                      _context.next = 13;\n                      break;\n                    }\n\n                    _context.next = 13;\n                    return t;\n\n                  case 13:\n                    return _context.abrupt(\"return\", !this._hasRequestedUpdate);\n\n                  case 14:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee, this, [[1, 6]]);\n          }));\n\n          function _enqueueUpdate() {\n            return _enqueueUpdate2.apply(this, arguments);\n          }\n\n          return _enqueueUpdate;\n        }()\n      }, {\n        key: \"performUpdate\",\n        value: function performUpdate() {\n          this._instanceProperties && this._applyInstanceProperties();\n          var t = !1;\n          var e = this._changedProperties;\n\n          try {\n            t = this.shouldUpdate(e), t ? this.update(e) : this._markUpdated();\n          } catch (e) {\n            throw t = !1, this._markUpdated(), e;\n          }\n\n          t && (1 & this._updateState || (this._updateState = 1 | this._updateState, this.firstUpdated(e)), this.updated(e));\n        }\n      }, {\n        key: \"_markUpdated\",\n        value: function _markUpdated() {\n          this._changedProperties = new Map(), this._updateState = -5 & this._updateState;\n        }\n      }, {\n        key: \"_getUpdateComplete\",\n        value: function _getUpdateComplete() {\n          return this._updatePromise;\n        }\n      }, {\n        key: \"shouldUpdate\",\n        value: function shouldUpdate(t) {\n          return !0;\n        }\n      }, {\n        key: \"update\",\n        value: function update(t) {\n          var _this4 = this;\n\n          void 0 !== this._reflectingProperties && this._reflectingProperties.size > 0 && (this._reflectingProperties.forEach(function (t, e) {\n            return _this4._propertyToAttribute(e, _this4[e], t);\n          }), this._reflectingProperties = void 0), this._markUpdated();\n        }\n      }, {\n        key: \"updated\",\n        value: function updated(t) {}\n      }, {\n        key: \"firstUpdated\",\n        value: function firstUpdated(t) {}\n      }, {\n        key: \"_hasRequestedUpdate\",\n        get: function get() {\n          return 4 & this._updateState;\n        }\n      }, {\n        key: \"hasUpdated\",\n        get: function get() {\n          return 1 & this._updateState;\n        }\n      }, {\n        key: \"updateComplete\",\n        get: function get() {\n          return this._getUpdateComplete();\n        }\n      }], [{\n        key: \"_ensureClassProperties\",\n        value: function _ensureClassProperties() {\n          var _this5 = this;\n\n          if (!this.hasOwnProperty(JSCompiler_renameProperty(\"_classProperties\", this))) {\n            this._classProperties = new Map();\n\n            var _t5 = Object.getPrototypeOf(this)._classProperties;\n\n            void 0 !== _t5 && _t5.forEach(function (t, e) {\n              return _this5._classProperties.set(e, t);\n            });\n          }\n        }\n      }, {\n        key: \"createProperty\",\n        value: function createProperty(t) {\n          var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Gt;\n          if (this._ensureClassProperties(), this._classProperties.set(t, e), e.noAccessor || this.prototype.hasOwnProperty(t)) return;\n          var n = \"symbol\" == typeof t ? Symbol() : \"__\" + t,\n              r = this.getPropertyDescriptor(t, n, e);\n          void 0 !== r && Object.defineProperty(this.prototype, t, r);\n        }\n      }, {\n        key: \"getPropertyDescriptor\",\n        value: function getPropertyDescriptor(t, e, n) {\n          return {\n            get: function get() {\n              return this[e];\n            },\n            set: function set(n) {\n              var r = this[t];\n              this[e] = n, this._requestUpdate(t, r);\n            },\n            configurable: !0,\n            enumerable: !0\n          };\n        }\n      }, {\n        key: \"getPropertyOptions\",\n        value: function getPropertyOptions(t) {\n          return this._classProperties && this._classProperties.get(t) || Gt;\n        }\n      }, {\n        key: \"finalize\",\n        value: function finalize() {\n          var t = Object.getPrototypeOf(this);\n\n          if (t.hasOwnProperty(\"finalized\") || t.finalize(), this.finalized = !0, this._ensureClassProperties(), this._attributeToPropertyMap = new Map(), this.hasOwnProperty(JSCompiler_renameProperty(\"properties\", this))) {\n            var _t6 = this.properties,\n                _e2 = [].concat(_toConsumableArray(Object.getOwnPropertyNames(_t6)), _toConsumableArray(\"function\" == typeof Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols(_t6) : []));\n\n            var _iterator = _createForOfIteratorHelper(_e2),\n                _step;\n\n            try {\n              for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                var _n = _step.value;\n                this.createProperty(_n, _t6[_n]);\n              }\n            } catch (err) {\n              _iterator.e(err);\n            } finally {\n              _iterator.f();\n            }\n          }\n        }\n      }, {\n        key: \"_attributeNameForProperty\",\n        value: function _attributeNameForProperty(t, e) {\n          var n = e.attribute;\n          return !1 === n ? void 0 : \"string\" == typeof n ? n : \"string\" == typeof t ? t.toLowerCase() : void 0;\n        }\n      }, {\n        key: \"_valueHasChanged\",\n        value: function _valueHasChanged(t, e) {\n          var n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : Jt;\n          return n(t, e);\n        }\n      }, {\n        key: \"_propertyValueFromAttribute\",\n        value: function _propertyValueFromAttribute(t, e) {\n          var n = e.type,\n              r = e.converter || Wt,\n              o = \"function\" == typeof r ? r : r.fromAttribute;\n          return o ? o(t, n) : t;\n        }\n      }, {\n        key: \"_propertyValueToAttribute\",\n        value: function _propertyValueToAttribute(t, e) {\n          if (void 0 === e.reflect) return;\n          var n = e.type,\n              r = e.converter;\n          return (r && r.toAttribute || Wt.toAttribute)(t, n);\n        }\n      }, {\n        key: \"observedAttributes\",\n        get: function get() {\n          var _this6 = this;\n\n          this.finalize();\n          var t = [];\n          return this._classProperties.forEach(function (e, n) {\n            var r = _this6._attributeNameForProperty(n, e);\n\n            void 0 !== r && (_this6._attributeToPropertyMap.set(r, n), t.push(r));\n          }), t;\n        }\n      }]);\n\n      return Yt;\n    }( /*#__PURE__*/_wrapNativeSuper(HTMLElement));\n\n    Yt.finalized = !0;\n    var $t = \"adoptedStyleSheets\" in Document.prototype && \"replace\" in CSSStyleSheet.prototype,\n        Xt = Symbol();\n\n    var Zt = /*#__PURE__*/function () {\n      function Zt(t, e) {\n        _classCallCheck(this, Zt);\n\n        if (e !== Xt) throw new Error(\"CSSResult is not constructable. Use `unsafeCSS` or `css` instead.\");\n        this.cssText = t;\n      }\n\n      _createClass(Zt, [{\n        key: \"toString\",\n        value: function toString() {\n          return this.cssText;\n        }\n      }, {\n        key: \"styleSheet\",\n        get: function get() {\n          return void 0 === this._styleSheet && ($t ? (this._styleSheet = new CSSStyleSheet(), this._styleSheet.replaceSync(this.cssText)) : this._styleSheet = null), this._styleSheet;\n        }\n      }]);\n\n      return Zt;\n    }();\n\n    var Qt = function Qt(t) {\n      for (var _len = arguments.length, e = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        e[_key - 1] = arguments[_key];\n      }\n\n      var n = e.reduce(function (e, n, r) {\n        return e + function (t) {\n          if (t instanceof Zt) return t.cssText;\n          if (\"number\" == typeof t) return t;\n          throw new Error(\"Value passed to 'css' function must be a 'css' function result: \".concat(t, \". Use 'unsafeCSS' to pass non-literal values, but\\n            take care to ensure page security.\"));\n        }(n) + t[r + 1];\n      }, t[0]);\n      return new Zt(n, Xt);\n    };\n\n    (window.litElementVersions || (window.litElementVersions = [])).push(\"2.3.1\");\n    var Kt = {};\n\n    var te = /*#__PURE__*/function (_Yt) {\n      _inherits(te, _Yt);\n\n      var _super2 = _createSuper(te);\n\n      function te() {\n        _classCallCheck(this, te);\n\n        return _super2.apply(this, arguments);\n      }\n\n      _createClass(te, [{\n        key: \"initialize\",\n        value: function initialize() {\n          _get(_getPrototypeOf(te.prototype), \"initialize\", this).call(this), this.constructor._getUniqueStyles(), this.renderRoot = this.createRenderRoot(), window.ShadowRoot && this.renderRoot instanceof window.ShadowRoot && this.adoptStyles();\n        }\n      }, {\n        key: \"createRenderRoot\",\n        value: function createRenderRoot() {\n          return this.attachShadow({\n            mode: \"open\"\n          });\n        }\n      }, {\n        key: \"adoptStyles\",\n        value: function adoptStyles() {\n          var t = this.constructor._styles;\n          0 !== t.length && (void 0 === window.ShadyCSS || window.ShadyCSS.nativeShadow ? $t ? this.renderRoot.adoptedStyleSheets = t.map(function (t) {\n            return t.styleSheet;\n          }) : this._needsShimAdoptedStyleSheets = !0 : window.ShadyCSS.ScopingShim.prepareAdoptedCssText(t.map(function (t) {\n            return t.cssText;\n          }), this.localName));\n        }\n      }, {\n        key: \"connectedCallback\",\n        value: function connectedCallback() {\n          _get(_getPrototypeOf(te.prototype), \"connectedCallback\", this).call(this), this.hasUpdated && void 0 !== window.ShadyCSS && window.ShadyCSS.styleElement(this);\n        }\n      }, {\n        key: \"update\",\n        value: function update(t) {\n          var _this7 = this;\n\n          var e = this.render();\n          _get(_getPrototypeOf(te.prototype), \"update\", this).call(this, t), e !== Kt && this.constructor.render(e, this.renderRoot, {\n            scopeName: this.localName,\n            eventContext: this\n          }), this._needsShimAdoptedStyleSheets && (this._needsShimAdoptedStyleSheets = !1, this.constructor._styles.forEach(function (t) {\n            var e = document.createElement(\"style\");\n            e.textContent = t.cssText, _this7.renderRoot.appendChild(e);\n          }));\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          return Kt;\n        }\n      }], [{\n        key: \"getStyles\",\n        value: function getStyles() {\n          return this.styles;\n        }\n      }, {\n        key: \"_getUniqueStyles\",\n        value: function _getUniqueStyles() {\n          if (this.hasOwnProperty(JSCompiler_renameProperty(\"_styles\", this))) return;\n          var t = this.getStyles();\n          if (void 0 === t) this._styles = [];else if (Array.isArray(t)) {\n            var _e3 = function _e3(t, n) {\n              return t.reduceRight(function (t, n) {\n                return Array.isArray(n) ? _e3(n, t) : (t.add(n), t);\n              }, n);\n            },\n                _n2 = _e3(t, new Set()),\n                _r2 = [];\n\n            _n2.forEach(function (t) {\n              return _r2.unshift(t);\n            }), this._styles = _r2;\n          } else this._styles = [t];\n        }\n      }]);\n\n      return te;\n    }(Yt);\n\n    function ee() {\n      var t = k()(['\\n         <div class=\"loading\" style=\\'top:', \"px'>\\n            <span></span>\\n            <span></span>\\n            <span></span>\\n            <span></span>\\n            <span></span>\\n        </div>\\n        \"]);\n      return ee = function ee() {\n        return t;\n      }, t;\n    }\n\n    function ne() {\n      var t = k()([\"\\n            @keyframes load{\\n              0%,100%{\\n                height: 40px;\\n                background: lightgreen;\\n              }\\n              50%{\\n                height: 70px;\\n                margin: -15px 0;\\n                background: lightblue;\\n              }\\n            }\\n            .loading{\\n              position: relative;\\n              /*top: 200px;*/\\n              width: 80px;\\n              height: 40px;\\n              margin: 0 auto;\\n            }\\n            .loading span{\\n              display: inline-block;\\n              width: 8px;\\n              height: 100%;\\n              border-radius: 4px;\\n              background: lightgreen;\\n              animation: load 1s ease infinite;\\n            }\\n            \\n            .loading span:nth-child(2){\\n              animation-delay:0.2s;\\n            }\\n            .loading span:nth-child(3){\\n              animation-delay:0.4s;\\n            }\\n            .loading span:nth-child(4){\\n              animation-delay:0.6s;\\n            }\\n            .loading span:nth-child(5){\\n              animation-delay:0.8s;\\n            }\\n        \"]);\n      return ne = function ne() {\n        return t;\n      }, t;\n    }\n\n    function re() {\n      var t = k()([\"<div>\", '<a target=\"_blank\" href=\"https://pagenote.logike.cn/why#create-error\">为什么会失败？</a></div>']);\n      return re = function re() {\n        return t;\n      }, t;\n    }\n\n    function oe() {\n      var t = k()(['<a target=\"_blank\" href=\"', '\">', \"</a>\"]);\n      return oe = function oe() {\n        return t;\n      }, t;\n    }\n\n    function ie() {\n      var t = k()(['<pagenote-loading top=\"25\" />']);\n      return ie = function ie() {\n        return t;\n      }, t;\n    }\n\n    function ae() {\n      var t = k()(['<a @click=\"', '\">请登录</a>后分享。']);\n      return ae = function ae() {\n        return t;\n      }, t;\n    }\n\n    function se() {\n      var t = k()([\"hi,<b>\", \"</b>\"]);\n      return se = function se() {\n        return t;\n      }, t;\n    }\n\n    function le() {\n      var t = k()(['<span @click=\"', '\" class=\"tab ', '\">分享&导出</span>']);\n      return le = function le() {\n        return t;\n      }, t;\n    }\n\n    function ce() {\n      var t = k()(['\\n        <div class=\"container\">\\n            <a class=\"close\" @click=\"', '\">关闭</a>\\n            <div class=\"tabs\">\\n                ', '\\n                <span @click=\"', '\" class=\"tab ', '\">pagenote 广场</span>\\n                <div class=\"tab-border\"></div>\\n            </div>\\n            <div class=\"contents\">\\n                  <section class=\"tab-content ', '\">\\n                    <p>\\n                        <span>\\n                            ', '\\n                        </span>分享内容将<strong>公开，所有人可见</strong>。\\n                    </p>\\n                    <div>\\n                        <label><input @change=\"', '\" name=\"share-type\" checked=\"', '\" type=\"radio\">分享标记&网页</label>\\n                        <label><input @change=\"', '\" name=\"share-type\" checked=\"', '\" type=\"radio\">仅分享标记</label>\\n                    </div>\\n                    \\n                    <div class=\"', '\">\\n                        <textarea readonly style=\"width: 100%;height: 150px;box-sizing: border-box;\">', '</textarea>\\n                        <button class=\"copy-button\" @click=\"', '\">', '</button>\\n                    </div>\\n                    <div class=\"', '\">\\n                        <input id=\"share-title\" style=\"box-sizing: border-box;width: 100%;margin: 8px 0;\" type=\"text\" value=\"', '\" placeholder=\"分享标题，一句话总结吧，让你的分享更有吸引力\" />\\n                        <img style=\"max-height: 400px;max-width: 100%;\" src=\"', '\" alt=\"\" />\\n                        <div style=\"font-size: 12px;color: red;\" class=\"tip\">标记、以及网页内容被分享后可见。<br>当前页有敏感信息，如账户信息时，请注意保密。谨慎分享。</div>\\n                    </div>\\n                    \\n                    ', \"\\n                    \", \"\\n                    \", '\\n                    <div class=\"', '\" id=\"buttons\" style=\"text-align: right;\">\\n                      <button style=\"background-color: red;color: #fff;\" @click=\"', '\">生成分享链接</button>\\n                      <button @click=\"', '\">取消</button>\\n                    </div>\\n                </section>\\n                \\n                <section class=\"tab-content ', '\">\\n                    更多内容请访问 <a href=\"https://pagenote.logike.cn\">pagenote主页</a>\\n                </section>\\n            </div>\\n          </div>\\n    ']);\n      return ce = function ce() {\n        return t;\n      }, t;\n    }\n\n    function ue() {\n      var t = k()([\"\\n            a{\\n                cursor: pointer;\\n                color: #6CB0E4;\\n            }\\n            .hide{\\n              display:none;\\n            }\\n            .container{\\n                font-size:14px;\\n                color:#333;\\n                text-align:left;\\n                width: 400px;\\n                box-sizing: border-box;\\n                background: #fff;\\n                border: 1px solid #333;\\n                padding: 12px;\\n                position: fixed;\\n                top: 70px;\\n                left: calc(50% - 200px);\\n                z-index: 9999999;\\n                box-shadow: 3px 2px 0px #111;\\n            }\\n            .close{\\n                position: absolute;\\n                right: 10px;\\n                top: 0px;\\n                color: red;\\n            }\\n            .tabs{\\n                text-align: left;overflow: hidden;position: relative;\\n            }\\n            .tab-border{\\n                width: 100%;height: 1px;position: absolute;bottom: 0;background: #000;z-index: -1;\\n            }\\n            .tab{\\n                position:relative;\\n                padding: 2px;\\n                margin-right: 12px;\\n                display: inline-block;\\n                relative;\\n                background: #fff;\\n                cursor: pointer;\\n            }\\n            .tab.active{\\n                top: 1px;\\n                border: 1px solid;\\n            }\\n            .tab-content{\\n                display:none;\\n                margin: 12px 0;\\n                min-height:50px;\\n            }\\n            .tab-content.active{\\n                display:block;\\n            }\\n            .copy-button{\\n                background: red;\\n                color: #fff;\\n                border: none;\\n            }\\n    \"]);\n      return ue = function ue() {\n        return t;\n      }, t;\n    }\n\n    function de(t) {\n      var e = function () {\n        if (\"undefined\" == typeof Reflect || !Reflect.construct) return !1;\n        if (Reflect.construct.sham) return !1;\n        if (\"function\" == typeof Proxy) return !0;\n\n        try {\n          return Date.prototype.toString.call(Reflect.construct(Date, [], function () {})), !0;\n        } catch (t) {\n          return !1;\n        }\n      }();\n\n      return function () {\n        var n,\n            r = P()(t);\n\n        if (e) {\n          var o = P()(this).constructor;\n          n = Reflect.construct(r, arguments, o);\n        } else n = r.apply(this, arguments);\n\n        return O()(this, n);\n      };\n    }\n\n    te.finalized = !0, te.render = function (t, e, n) {\n      if (!n || \"object\" !== jt(n) || !n.scopeName) throw new Error(\"The `scopeName` option is required.\");\n      var r = n.scopeName,\n          o = Pt.has(e),\n          i = Ft && 11 === e.nodeType && !!e.host,\n          a = i && !Vt.has(r),\n          s = a ? document.createDocumentFragment() : e;\n\n      if (function (t, e, n) {\n        var r = Pt.get(e);\n        void 0 === r && (z(e, e.firstChild), Pt.set(e, r = new Nt(Object.assign({\n          templateFactory: Ot\n        }, n))), r.appendInto(e)), r.setValue(t), r.commit();\n      }(t, s, Object.assign({\n        templateFactory: Ht(r)\n      }, n)), a) {\n        var l = Pt.get(s);\n        Pt[\"delete\"](s);\n        var c = l.value instanceof rt ? l.value.template : void 0;\n        qt(r, s, c), z(e, e.firstChild), e.appendChild(s), Pt.set(e, l);\n      }\n\n      !o && i && window.ShadyCSS.styleElement(e.host);\n    };\n\n    var pe = function (t) {\n      L()(n, t);\n      var e = de(n);\n\n      function n() {\n        var t;\n        return C()(this, n), (t = e.call(this)).initData(), t;\n      }\n\n      return E()(n, null, [{\n        key: \"properties\",\n        get: function get() {\n          return {\n            copied: {\n              type: Boolean\n            },\n            show: {\n              type: Boolean\n            },\n            activeTab: {\n              type: String\n            },\n            markdown: {\n              type: String\n            },\n            showShare: {\n              type: Boolean\n            },\n            user: {\n              type: Object\n            },\n            creating: {\n              type: Boolean\n            },\n            shareData: {\n              type: Object\n            },\n            shareType: {\n              type: String\n            },\n            errorMsg: {\n              type: String\n            }\n          };\n        }\n      }, {\n        key: \"styles\",\n        get: function get() {\n          return Qt(ue());\n        }\n      }]), E()(n, [{\n        key: \"render\",\n        value: function value() {\n          var t = this;\n          return this.show ? Dt(ce(), this.closeModal, this.showShare ? Dt(le(), function () {\n            return t.changeTab(\"share\");\n          }, \"share\" === this.activeTab ? \"active\" : \"\") : \"\", function () {\n            return t.changeTab(\"me\");\n          }, \"me\" === this.activeTab ? \"active\" : \"\", \"share\" === this.activeTab ? \"active\" : \"\", this.user ? Dt(se(), this.user.name) : Dt(ae(), this.doLogin), function () {\n            return t.changeShareType(\"all\");\n          }, \"all\" === this.shareType ? \"checked\" : \"\", function () {\n            return t.changeShareType(\"only-light\");\n          }, \"only-light\" === this.shareType ? \"checked\" : \"\", \"only-light\" === this.shareType ? \"show\" : \"hide\", this.markdown, this.copyMd, this.copied ? \"已复制\" : \"一键复制MD\", \"all\" === this.shareType ? \"show\" : \"hide\", this.shareData.title, this.shareData.snapshot, this.creating ? Dt(ie()) : \"\", this.shareLink ? Dt(oe(), this.shareLink, this.shareLink) : \"\", this.errorMsg ? Dt(re(), this.errorMsg) : \"\", this.shareLink ? \"hide\" : \"\", this.createShare, this.closeModal, \"me\" === this.activeTab ? \"active\" : \"\") : \"\";\n        }\n      }, {\n        key: \"initData\",\n        value: function value() {\n          var t = this;\n          this.activeTab = this.activeTab || \"share\", this.markdown = window.pagenote.generateMD(), this.showShare = !!window.pagenote.options.onShare, this.user = window.pagenote._user, this.creating = !1, this.shareData = {}, this.shareLink = \"\", this.shareType = \"only-light\", this.errorMsg = \"\", window.pagenote.makelink(function (e) {\n            t.shareData = e, console.log(t.shareData, \"shareData\");\n          });\n        }\n      }, {\n        key: \"changeTab\",\n        value: function value(t) {\n          this.activeTab = t;\n        }\n      }, {\n        key: \"closeModal\",\n        value: function value() {\n          this.show = !1, this.parentNode.removeChild(this);\n        }\n      }, {\n        key: \"copyMd\",\n        value: function value() {\n          var t = this.markdown + \"\\n\\n[使用pagenote生成](https://pagenote.logike.cn)\";\n\n          try {\n            return this.copied = !0, navigator.clipboard.writeText(t);\n          } catch (n) {\n            var e = document.createElement(\"textarea\");\n            e.textContent = t, document.body.appendChild(e), e.select(), document.execCommand(\"Copy\", !1, null), document.body.removeChild(e), this.copied = !0;\n          }\n        }\n      }, {\n        key: \"doLogin\",\n        value: function value() {\n          document.documentElement.innerWidth;\n          window.open(\"https://github.com/login/oauth/authorize?scope=user%20public_repo&client_id=c4aae381097464aa1024&redirect_uri=\".concat(\"https://pagenote.logike.cn\"), \"_blank\", \"width=666,height=666,top=0,left=200,status=no,location=no\").focus();\n        }\n      }, {\n        key: \"createShare\",\n        value: function value() {\n          var t = this;\n          this.creating = !0, this.errorMsg = \"\", window.pagenote.makelink(function (e) {\n            t.shareData = e;\n            var n = JSON.parse(JSON.stringify(e));\n\n            if (delete n.snapshot, delete n.images, \"all\" === t.shareType) {\n              var r = document.documentElement.cloneNode(!0);\n              [].forEach.call(r.querySelectorAll(\"script\"), function (t) {\n                t.parentNode.removeChild(t);\n              }), [].forEach.call(r.querySelectorAll(\"*[data-pagenote]\"), function (t) {\n                t.parentNode.removeChild(t);\n              }), [].forEach.call(r.querySelectorAll(\"pagenote-modal\"), function (t) {\n                t.parentNode.removeChild(t);\n              }), [].forEach.call(r.querySelectorAll(\"style[pagenote]\"), function (t) {\n                t.parentNode.removeChild(t);\n              }), [].forEach.call(r.querySelectorAll(\"iframe\"), function (t) {\n                t.parentNode.removeChild(t);\n              }), n.html = r.outerHTML.replace(/\\s+|\\n/g, function (t) {\n                return \" \";\n              }), console.log(n.html.length, n.html);\n              var o = t.renderRoot.querySelector(\"#share-title\");\n              n.title = o.value || e.title;\n            }\n\n            window.pagenote.options.onShare(n, function (e) {\n              t.creating = !1, t.shareLink = e.shareLink, t.errorMsg = e.errorMsg;\n            });\n          });\n        }\n      }, {\n        key: \"changeShareType\",\n        value: function value(t) {\n          this.shareType = t;\n        }\n      }]), n;\n    }(te);\n\n    customElements.define(\"pagenote-modal\", pe);\n\n    var he = function (t) {\n      L()(n, t);\n      var e = de(n);\n\n      function n() {\n        var t;\n        return C()(this, n), (t = e.call(this)).top = 0, t;\n      }\n\n      return E()(n, null, [{\n        key: \"properties\",\n        get: function get() {\n          return {\n            top: {\n              type: Number\n            }\n          };\n        }\n      }, {\n        key: \"styles\",\n        get: function get() {\n          return Qt(ne());\n        }\n      }]), E()(n, [{\n        key: \"render\",\n        value: function value() {\n          return Dt(ee(), this.top);\n        }\n      }]), n;\n    }(te);\n\n    function fe(t) {\n      if (\"undefined\" == typeof Symbol || null == t[Symbol.iterator]) {\n        if (Array.isArray(t) || (t = function (t, e) {\n          if (!t) return;\n          if (\"string\" == typeof t) return ge(t, e);\n          var n = Object.prototype.toString.call(t).slice(8, -1);\n          \"Object\" === n && t.constructor && (n = t.constructor.name);\n          if (\"Map\" === n || \"Set\" === n) return Array.from(t);\n          if (\"Arguments\" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return ge(t, e);\n        }(t))) {\n          var e = 0,\n              n = function n() {};\n\n          return {\n            s: n,\n            n: function n() {\n              return e >= t.length ? {\n                done: !0\n              } : {\n                done: !1,\n                value: t[e++]\n              };\n            },\n            e: function e(t) {\n              throw t;\n            },\n            f: n\n          };\n        }\n\n        throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n      }\n\n      var r,\n          o,\n          i = !0,\n          a = !1;\n      return {\n        s: function s() {\n          r = t[Symbol.iterator]();\n        },\n        n: function n() {\n          var t = r.next();\n          return i = t.done, t;\n        },\n        e: function e(t) {\n          a = !0, o = t;\n        },\n        f: function f() {\n          try {\n            i || null == r[\"return\"] || r[\"return\"]();\n          } finally {\n            if (a) throw o;\n          }\n        }\n      };\n    }\n\n    function ge(t, e) {\n      (null == e || e > t.length) && (e = t.length);\n\n      for (var n = 0, r = new Array(e); n < e; n++) {\n        r[n] = t[n];\n      }\n\n      return r;\n    }\n\n    customElements.define(\"pagenote-loading\", he);\n    var ve = new w.a();\n\n    function me(t) {\n      var e = this,\n          n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};\n      this.id = t || \"pagenote-container\", this.options = Object.assign({\n        initType: \"default\",\n        dura: 100,\n        saveInURL: !1,\n        saveInLocal: !0,\n        maxMarkNumber: 50,\n        blacklist: [],\n        autoLight: !1,\n        colors: [\"rgba(114,208,255,0.88)\", \"#ffbea9\", \"#c8a6ff\", \"#6fe2d5\", \"rgba(255,222,93,0.84)\", \"rgba(251, 181, 214, 0.84)\", \"rgba(0,0,0,0.5)\"],\n        barInfo: {\n          right: 4,\n          top: 200,\n          status: \"hide\"\n        },\n        shortCut: {\n          createLight: \"m\",\n          createLightAndEdit: \"e\"\n        },\n        onShare: null\n      }, n), this.status = this.CONSTANT.UN_INIT, this.recordedSteps = [], this.snapshot = \"\", this.runindex = null;\n      var r = JSON.parse(JSON.stringify(this.options.barInfo));\n      r.status = r.status || \"fold\", this.runningSetting = Object.assign({}, {\n        initType: this.options.initType,\n        dura: this.options.dura,\n        autoLight: this.options.autoLight,\n        barInfo: r\n      }), this.target = {}, this.url = window.location.href, this.data = \"\", this.blackNodes = [], this.lastaction = this.CONSTANT.DIS_LIGHT;\n      var i,\n          u,\n          p,\n          g = this.target,\n          v = null,\n          m = [],\n          y = null,\n          _ = this.CONSTANT,\n          x = this.options,\n          w = window.location,\n          S = \"\",\n          k = (\"ontouchstart\" in window),\n          N = this.blackNodes,\n          C = [\"x\", \"y\", \"id\", \"text\", \"tip\", \"bg\", \"time\", \"isActive\", \"offsetX\", \"offsetY\", \"parentW\"];\n\n      function A() {\n        var t = document.getSelection(),\n            e = t.anchorNode ? t.getRangeAt(0).commonAncestorContainer.parentNode : null;\n\n        if (e) {\n          var n,\n              r = fe(N);\n\n          try {\n            for (r.s(); !(n = r.n()).done;) {\n              if (n.value.contains(e)) return;\n            }\n          } catch (t) {\n            r.e(t);\n          } finally {\n            r.f();\n          }\n\n          var o = t.toString().trim();\n          if (this.status !== _.WAITING || o !== g.text) if (o) {\n            var i = t.getRangeAt(0).getClientRects(),\n                a = i[i.length - 1];\n            if (!a) return;\n            var s = k ? a.x + a.width / 2 : Math.min(a.x + a.width + 12, window.innerWidth - 150),\n                l = window.scrollY + a.y + (k ? a.height : a.height / 2),\n                c = ve.getUniqueId(e),\n                u = parseInt(s),\n                d = parseInt(l);\n            this.target = g = {\n              x: u,\n              y: d,\n              text: o,\n              tip: \"\",\n              time: new Date().getTime(),\n              id: c.wid,\n              isActive: !1,\n              bg: this.options.colors[0],\n              offsetX: u - c.left,\n              offsetY: d - c.top,\n              parentW: parseInt(e.clientWidth)\n            }, this.status = this.status === _.REPLAYING || this.status === _.PLAYANDWAIT ? _.PLAYANDWAIT : _.WAITING;\n          } else this.target = g = {}, this.status = _.PAUSE;\n        }\n      }\n\n      var E = !1;\n      this.init = function (t) {\n        var e = this,\n            n = arguments,\n            r = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];\n        !(t = t || s().paramObj[_.ID]) && this.options.saveInLocal && (t = localStorage.getItem(this.id));\n        var i = [],\n            l = {};\n        if (t) try {\n          if (\"object\" === a()(t) && t.steps) i = t.steps || [], l = t.setting || {};else if (\"string\" == typeof t) {\n            var u = c(t);\n            i = u.steps || [], l = u.setting || {};\n          }\n        } catch (e) {\n          console.error(\"解析step异常\", e, t);\n        }\n\n        switch (this.recordedSteps.splice(0, this.recordedSteps.length), i.forEach(function (t) {\n          var n = {};\n          C.forEach(function (e, r) {\n            n[e] = t[r];\n          }), e.recordedSteps.push(n);\n        }), this.runningSetting = Object.assign(this.runningSetting, l), setTimeout(function () {\n          var t = document.querySelector(\"*[data-pagenote]\");\n          t && N.push(t), [].concat(o()(x.blacklist), [\".no-pagenote\"]).forEach(function (t) {\n            [].forEach.call(document.querySelectorAll(t), function (t) {\n              N.push(t);\n            });\n          });\n        }, 0), [].forEach.call(document.querySelectorAll(\"light[data-highlight]\"), function (t) {\n          t.outerHTML = t.innerHTML;\n        }), this.runningSetting.initType) {\n          case \"light\":\n            this.replay(0, !1, !0, !0, !0);\n            break;\n\n          case \"default\":\n            this.replay(0, !1, !0, !0, function (t) {\n              return t.isActive;\n            });\n        }\n\n        if (!E) {\n          var d = function d() {\n            var t = this,\n                e = null;\n            k ? (document.addEventListener(\"touchstart\", function (t) {\n              e = t;\n            }), document.onselectionchange = function (n) {\n              e.target && \"record\" !== e.target.id && A.call(t);\n            }) : document.addEventListener(\"mouseup\", function (e) {\n              A.call(t);\n            });\n          };\n\n          d.call(this), E = !0, document.addEventListener(\"keyup\", function (t) {\n            t.key === e.options.shortCut.createLight ? e.record() : t.key === e.options.shortCut.createLightAndEdit && (e.target.tip = e.target.text, e.record());\n          }), window.addEventListener(\"hashchange\", function () {\n            e.status = _.HASHCHANGED;\n          }), window.addEventListener(\"popstate\", function () {\n            e.status = _.URLCHANGED;\n          });\n          var p = window.history.pushState;\n\n          window.history.pushState = function () {\n            p.apply(e, n), e.status = _.URLCHANGED;\n          };\n\n          var h = window.history.replaceState;\n\n          window.history.replaceState = function () {\n            h.apply(e, n), e.status = _.URLCHANGED;\n          };\n        }\n\n        this.status = _.READY, r && this.makelink();\n      }, this.addListener = function (t) {\n        \"function\" == typeof t && m.push(t);\n      }, this.record = function () {\n        var t = this,\n            e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},\n            n = arguments.length > 1 ? arguments[1] : void 0;\n        e = Object.assign(g, e);\n        var r = x.maxMarkNumber;\n        return this.recordedSteps.length >= r ? (alert(\"标记失败！最大标记数量为 \" + r), !1) : !(!n && this.status !== _.WAITING) && (this.status = _.RECORDING, this.recordedSteps.push(e), this.recordedSteps = this.recordedSteps.sort(function (t, e) {\n          return t.y - e.y;\n        }), window.getSelection().removeAllRanges(), h(ve.getTarget(e.id), e.text, !0, e.bg, this.blackNodes, function (t) {\n          e.lightId = t.id;\n          var n = document.querySelectorAll(\"light[data-highlight='\".concat(t.id, \"']\")) || [];\n          [].forEach.call(n, function (t) {\n            setTimeout(function () {\n              e.isActive = !0, t.dataset.active = e.isActive ? \"1\" : \"0\";\n            }, 100);\n          });\n        }), this.makelink(function (e) {\n          if (!e) return alert(\"保存失败\"), t.recordedSteps.splice(-1, 1), console.error(\"记录失败\"), t.status = _.RECORDFAIL, !1;\n          t.status = _.RECORDED;\n        }), !0);\n      }, this.remove = function () {\n        var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : -1;\n\n        if (t < 0) {\n          for (; this.recordedSteps.length > 0;) {\n            this.replay(0, !1, !1), this.recordedSteps.splice(0, 1);\n          }\n\n          this.status = _.PAUSE, this.status = _.REMOVEDALL;\n        } else this.replay(t, !1, !1), this.recordedSteps.splice(t, 1), this.status = _.REMOVED;\n\n        this.makelink();\n      }, this.replay = function () {\n        var t = this,\n            e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0,\n            n = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1],\n            r = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2],\n            o = arguments.length > 3 && void 0 !== arguments[3] && arguments[3],\n            i = !(arguments.length > 4 && void 0 !== arguments[4]) || arguments[4],\n            a = this.runningSetting.dura,\n            s = this.recordedSteps[e];\n        if (!s) return this.runindex = y, void (this.status = _.DONE);\n        var l = \"function\" == typeof r ? r(s) : r,\n            c = \"function\" == typeof i ? i(s) : i,\n            d = s.x,\n            g = s.y,\n            v = s.id,\n            m = s.text;\n        clearInterval(p), clearTimeout(u), p = u = y, this.runindex = e, this.status = _.REPLAYING, this.lastaction = c ? _.LIGHT : _.DIS_LIGHT, s.isActive = c;\n        var b = v ? ve.getTarget(v) : y,\n            x = this;\n        !function t(e) {\n          !(b = v ? ve.getTarget(v) : y) && e > 0 ? setTimeout(function () {\n            t(e - 1);\n          }, 1e3) : h(b, m, l, s.bg, x.blackNodes, function (t) {\n            if (s.lightId = t.id, t.id) {\n              var e = b.querySelectorAll(\"light[data-highlight='\".concat(t.id, \"']\"));\n              [].forEach.call(e, function (t) {\n                t.dataset.active = c ? \"1\" : \"0\";\n              });\n            }\n\n            s.warn = t.totalMatches ? \"\" : \"未找到匹配内容\";\n          });\n        }(3), n ? p = f(b, d - window.innerWidth / 2, g - window.innerHeight / 3, function () {\n          t.runindex = y, o ? u = setTimeout(function () {\n            return t.replay(e + 1, n, r, o, i);\n          }, a) : (t.status = _.DONE, clearTimeout(u));\n        }) : o ? u = setTimeout(function () {\n          return t.replay(e + 1, n, r, o, i);\n        }, a) : (this.runindex = y, this.status = _.DONE), this.makelink();\n      }, this.makelink = function (t) {\n        e.status = _.START_SYNC, T(\"function\" == typeof t ? t : function () {});\n      }, this.openModal = function () {\n        var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : \"md\";\n        v && v.show ? (v.changeTab(t), v.initData()) : ((v = document.createElement(\"pagenote-modal\")).setAttribute(\"show\", !0), v.setAttribute(\"activeTab\", t), document.body.appendChild(v));\n      }, this._syncModal = function () {\n        v && v.initData();\n      }, this.generateMD = function () {\n        var t = \"\",\n            n = e.recordedSteps,\n            r = window.location.href,\n            o = document.querySelector(\"title\").innerText.trim() || \"\";\n        return t += \"## [\".concat(o, \"](\").concat(r, \")\\n\\n\"), n.forEach(function (e) {\n          var n = e.text,\n              r = e.tip;\n          r !== n && r && (t += \"\".concat(r, \"\\n\")), t += \"> \".concat(n, \"\\n\\n\");\n        }), t = (t += \"\\n\").trim();\n      };\n      var T = d(function (t) {\n        try {\n          var n = [];\n          e.recordedSteps.forEach(function (t) {\n            var r = Object.assign({}, t);\n            r.isActive = \"off\" === e.runningSetting.initType ? void 0 : r.isActive;\n            var o = [];\n            C.forEach(function (t) {\n              o.push(r[t]);\n            }), n.push(o);\n          });\n          var r = s(),\n              o = r.paramObj,\n              i = r.paramKeys;\n          i.includes(_.ID) || i.push(_.ID);\n          var a = {},\n              c = 0;\n          Object.keys(e.runningSetting).forEach(function (t) {\n            e.runningSetting[t] !== x[t] && (a[t] = e.runningSetting[t], c++);\n          });\n\n          for (var u = document.querySelector(\"title\"), d = document.getElementsByTagName(\"img\"), p = [], h = 0; h < d.length; h++) {\n            var f = d[h],\n                g = f.width,\n                v = f.height,\n                m = f.src;\n            m && g > 100 && v > 100 && g / v < 2 && v / g < 2 && p.push(m);\n          }\n\n          var y = {\n            steps: n,\n            setting: {},\n            url: window.location.href,\n            lastModified: new Date().getTime(),\n            icon: b(),\n            title: u ? u.innerText.trim() : \"\",\n            images: p,\n            snapshot: e.snapshot,\n            version: 1\n          };\n          c ? y.setting = a : delete y.setting, o[_.ID] = n.length ? l(y) : \"\", e.data = o[_.ID];\n          var k = n.length ? JSON.parse(JSON.stringify(y)) : {};\n          e.options.saveInLocal && localStorage.setItem(e.id, e.data);\n          var N = \"\";\n          i.forEach(function (t, e) {\n            if (!(t === _.ID && 0 === n.length)) {\n              var r = void 0 === o[t] ? \"\" : \"=\" + (o[t] || \"\");\n              N = N + t + r + \"&\";\n            }\n          }), N = N ? \"?\" + N : \"\", e.url = w.protocol + \"//\" + w.host + w.pathname + N + w.hash, e.options.saveInURL && history.pushState(S, _.ID, e.url), e.status = _.SYNCED, t(k, e.url);\n        } catch (n) {\n          e.status = _.SYNCED_ERROR, console.error(n), t();\n        }\n      }, 500);\n      Object.defineProperty(this, \"status\", {\n        get: function get() {\n          return i;\n        },\n        set: function set(t) {\n          var e = i;\n          (i = t) === e && i !== _.WAITING || m.forEach(function (e) {\n            e(t);\n          });\n        }\n      });\n    }\n\n    me.prototype.decodeData = function (t) {\n      return c(t);\n    }, me.prototype.encryptData = function (t) {\n      return l(t);\n    }, me.prototype.CONSTANT = {\n      ID: \"pagenote\",\n      UN_INIT: -1,\n      WAITING: 0,\n      READY: 1,\n      RECORDING: 2,\n      PAUSE: 3,\n      RECORDED: 4,\n      REMOVED: -4,\n      REMOVEDALL: -5,\n      RECORDFAIL: 5,\n      FINNISHED: 6,\n      REPLAYING: 7,\n      PLAYANDWAIT: 8,\n      DONE: 9,\n      START_SYNC: 100,\n      SYNCED: 10,\n      SYNCED_ERROR: -10,\n      URLCHANGED: 11,\n      HASHCHANGED: 12,\n      LIGHT: 100,\n      DIS_LIGHT: -100,\n      SHARE_CONFIRM: \"c\",\n      SHARE_ING: \"i\",\n      SHARE_ERROR: \"e\",\n      SHARE_SUCCESS: \"s\"\n    }, me.prototype.version = \"0.4.1\";\n\n    var ye,\n        _e,\n        be,\n        xe,\n        we,\n        Se,\n        ke = {},\n        Ne = [],\n        Ce = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord/i;\n\n    function Ae(t, e) {\n      for (var n in e) {\n        t[n] = e[n];\n      }\n\n      return t;\n    }\n\n    function Ee(t) {\n      var e = t.parentNode;\n      e && e.removeChild(t);\n    }\n\n    function Te(t, e, n) {\n      var r,\n          o = arguments,\n          i = {};\n\n      for (r in e) {\n        \"key\" !== r && \"ref\" !== r && (i[r] = e[r]);\n      }\n\n      if (arguments.length > 3) for (n = [n], r = 3; r < arguments.length; r++) {\n        n.push(o[r]);\n      }\n      if (null != n && (i.children = n), \"function\" == typeof t && null != t.defaultProps) for (r in t.defaultProps) {\n        void 0 === i[r] && (i[r] = t.defaultProps[r]);\n      }\n      return Le(t, i, e && e.key, e && e.ref, null);\n    }\n\n    function Le(t, e, n, r, o) {\n      var i = {\n        type: t,\n        props: e,\n        key: n,\n        ref: r,\n        __k: null,\n        __: null,\n        __b: 0,\n        __e: null,\n        __d: void 0,\n        __c: null,\n        constructor: void 0,\n        __v: o\n      };\n      return null == o && (i.__v = i), ye.vnode && ye.vnode(i), i;\n    }\n\n    function Ie(t) {\n      return t.children;\n    }\n\n    function Oe(t, e) {\n      this.props = t, this.context = e;\n    }\n\n    function Me(t, e) {\n      if (null == e) return t.__ ? Me(t.__, t.__.__k.indexOf(t) + 1) : null;\n\n      for (var n; e < t.__k.length; e++) {\n        if (null != (n = t.__k[e]) && null != n.__e) return n.__e;\n      }\n\n      return \"function\" == typeof t.type ? Me(t) : null;\n    }\n\n    function Pe(t) {\n      var e, n;\n\n      if (null != (t = t.__) && null != t.__c) {\n        for (t.__e = t.__c.base = null, e = 0; e < t.__k.length; e++) {\n          if (null != (n = t.__k[e]) && null != n.__e) {\n            t.__e = t.__c.base = n.__e;\n            break;\n          }\n        }\n\n        return Pe(t);\n      }\n    }\n\n    function Re(t) {\n      (!t.__d && (t.__d = !0) && _e.push(t) && !be++ || we !== ye.debounceRendering) && ((we = ye.debounceRendering) || xe)(ze);\n    }\n\n    function ze() {\n      for (var t; be = _e.length;) {\n        t = _e.sort(function (t, e) {\n          return t.__v.__b - e.__v.__b;\n        }), _e = [], t.some(function (t) {\n          var e, n, r, o, i, a, s;\n          t.__d && (a = (i = (e = t).__v).__e, (s = e.__P) && (n = [], (r = Ae({}, i)).__v = r, o = He(s, i, r, e.__n, void 0 !== s.ownerSVGElement, null, n, null == a ? Me(i) : a), Be(n, i), o != a && Pe(i)));\n        });\n      }\n    }\n\n    function De(t, e, n, r, o, i, a, s, l) {\n      var c,\n          u,\n          d,\n          p,\n          h,\n          f,\n          g,\n          v = n && n.__k || Ne,\n          m = v.length;\n      if (s == ke && (s = null != i ? i[0] : m ? Me(n, 0) : null), c = 0, e.__k = function t(e, n, r) {\n        if (null == r && (r = []), null == e || \"boolean\" == typeof e) n && r.push(n(null));else if (Array.isArray(e)) for (var o = 0; o < e.length; o++) {\n          t(e[o], n, r);\n        } else r.push(n ? n(\"string\" == typeof e || \"number\" == typeof e ? Le(null, e, null, null, e) : null != e.__e || null != e.__c ? Le(e.type, e.props, e.key, null, e.__v) : e) : e);\n        return r;\n      }(e.__k, function (n) {\n        if (null != n) {\n          if (n.__ = e, n.__b = e.__b + 1, null === (d = v[c]) || d && n.key == d.key && n.type === d.type) v[c] = void 0;else for (u = 0; u < m; u++) {\n            if ((d = v[u]) && n.key == d.key && n.type === d.type) {\n              v[u] = void 0;\n              break;\n            }\n\n            d = null;\n          }\n\n          if (p = He(t, n, d = d || ke, r, o, i, a, s, l), (u = n.ref) && d.ref != u && (g || (g = []), d.ref && g.push(d.ref, null, n), g.push(u, n.__c || p, n)), null != p) {\n            var y;\n            if (null == f && (f = p), void 0 !== n.__d) y = n.__d, n.__d = void 0;else if (i == d || p != s || null == p.parentNode) {\n              t: if (null == s || s.parentNode !== t) t.appendChild(p), y = null;else {\n                for (h = s, u = 0; (h = h.nextSibling) && u < m; u += 2) {\n                  if (h == p) break t;\n                }\n\n                t.insertBefore(p, s), y = s;\n              }\n\n              \"option\" == e.type && (t.value = \"\");\n            }\n            s = void 0 !== y ? y : p.nextSibling, \"function\" == typeof e.type && (e.__d = s);\n          } else s && d.__e == s && s.parentNode != t && (s = Me(d));\n        }\n\n        return c++, n;\n      }), e.__e = f, null != i && \"function\" != typeof e.type) for (c = i.length; c--;) {\n        null != i[c] && Ee(i[c]);\n      }\n\n      for (c = m; c--;) {\n        null != v[c] && We(v[c], v[c]);\n      }\n\n      if (g) for (c = 0; c < g.length; c++) {\n        qe(g[c], g[++c], g[++c]);\n      }\n    }\n\n    function je(t, e, n) {\n      \"-\" === e[0] ? t.setProperty(e, n) : t[e] = \"number\" == typeof n && !1 === Ce.test(e) ? n + \"px\" : null == n ? \"\" : n;\n    }\n\n    function Ue(t, e, n, r, o) {\n      var i, a, s, l, c;\n      if (o ? \"className\" === e && (e = \"class\") : \"class\" === e && (e = \"className\"), \"style\" === e) {\n        if (i = t.style, \"string\" == typeof n) i.cssText = n;else {\n          if (\"string\" == typeof r && (i.cssText = \"\", r = null), r) for (l in r) {\n            n && l in n || je(i, l, \"\");\n          }\n          if (n) for (c in n) {\n            r && n[c] === r[c] || je(i, c, n[c]);\n          }\n        }\n      } else \"o\" === e[0] && \"n\" === e[1] ? (a = e !== (e = e.replace(/Capture$/, \"\")), s = e.toLowerCase(), e = (s in t ? s : e).slice(2), n ? (r || t.addEventListener(e, Fe, a), (t.l || (t.l = {}))[e] = n) : t.removeEventListener(e, Fe, a)) : \"list\" !== e && \"tagName\" !== e && \"form\" !== e && \"type\" !== e && \"size\" !== e && !o && e in t ? t[e] = null == n ? \"\" : n : \"function\" != typeof n && \"dangerouslySetInnerHTML\" !== e && (e !== (e = e.replace(/^xlink:?/, \"\")) ? null == n || !1 === n ? t.removeAttributeNS(\"http://www.w3.org/1999/xlink\", e.toLowerCase()) : t.setAttributeNS(\"http://www.w3.org/1999/xlink\", e.toLowerCase(), n) : null == n || !1 === n && !/^ar/.test(e) ? t.removeAttribute(e) : t.setAttribute(e, n));\n    }\n\n    function Fe(t) {\n      this.l[t.type](ye.event ? ye.event(t) : t);\n    }\n\n    function He(t, e, n, r, o, i, a, s, l) {\n      var c,\n          u,\n          d,\n          p,\n          h,\n          f,\n          g,\n          v,\n          m,\n          y,\n          _ = e.type;\n      if (void 0 !== e.constructor) return null;\n      (c = ye.__b) && c(e);\n\n      try {\n        t: if (\"function\" == typeof _) {\n          if (v = e.props, m = (c = _.contextType) && r[c.__c], y = c ? m ? m.props.value : c.__ : r, n.__c ? g = (u = e.__c = n.__c).__ = u.__E : (\"prototype\" in _ && _.prototype.render ? e.__c = u = new _(v, y) : (e.__c = u = new Oe(v, y), u.constructor = _, u.render = Je), m && m.sub(u), u.props = v, u.state || (u.state = {}), u.context = y, u.__n = r, d = u.__d = !0, u.__h = []), null == u.__s && (u.__s = u.state), null != _.getDerivedStateFromProps && (u.__s == u.state && (u.__s = Ae({}, u.__s)), Ae(u.__s, _.getDerivedStateFromProps(v, u.__s))), p = u.props, h = u.state, d) null == _.getDerivedStateFromProps && null != u.componentWillMount && u.componentWillMount(), null != u.componentDidMount && u.__h.push(u.componentDidMount);else {\n            if (null == _.getDerivedStateFromProps && v !== p && null != u.componentWillReceiveProps && u.componentWillReceiveProps(v, y), !u.__e && null != u.shouldComponentUpdate && !1 === u.shouldComponentUpdate(v, u.__s, y) || e.__v === n.__v && !u.__) {\n              for (u.props = v, u.state = u.__s, e.__v !== n.__v && (u.__d = !1), u.__v = e, e.__e = n.__e, e.__k = n.__k, u.__h.length && a.push(u), c = 0; c < e.__k.length; c++) {\n                e.__k[c] && (e.__k[c].__ = e);\n              }\n\n              break t;\n            }\n\n            null != u.componentWillUpdate && u.componentWillUpdate(v, u.__s, y), null != u.componentDidUpdate && u.__h.push(function () {\n              u.componentDidUpdate(p, h, f);\n            });\n          }\n          u.context = y, u.props = v, u.state = u.__s, (c = ye.__r) && c(e), u.__d = !1, u.__v = e, u.__P = t, c = u.render(u.props, u.state, u.context), e.__k = null != c && c.type == Ie && null == c.key ? c.props.children : Array.isArray(c) ? c : [c], null != u.getChildContext && (r = Ae(Ae({}, r), u.getChildContext())), d || null == u.getSnapshotBeforeUpdate || (f = u.getSnapshotBeforeUpdate(p, h)), De(t, e, n, r, o, i, a, s, l), u.base = e.__e, u.__h.length && a.push(u), g && (u.__E = u.__ = null), u.__e = !1;\n        } else null == i && e.__v === n.__v ? (e.__k = n.__k, e.__e = n.__e) : e.__e = Ve(n.__e, e, n, r, o, i, a, l);\n\n        (c = ye.diffed) && c(e);\n      } catch (t) {\n        e.__v = null, ye.__e(t, e, n);\n      }\n\n      return e.__e;\n    }\n\n    function Be(t, e) {\n      ye.__c && ye.__c(e, t), t.some(function (e) {\n        try {\n          t = e.__h, e.__h = [], t.some(function (t) {\n            t.call(e);\n          });\n        } catch (t) {\n          ye.__e(t, e.__v);\n        }\n      });\n    }\n\n    function Ve(t, e, n, r, o, i, a, s) {\n      var l,\n          c,\n          u,\n          d,\n          p,\n          h = n.props,\n          f = e.props;\n      if (o = \"svg\" === e.type || o, null != i) for (l = 0; l < i.length; l++) {\n        if (null != (c = i[l]) && ((null === e.type ? 3 === c.nodeType : c.localName === e.type) || t == c)) {\n          t = c, i[l] = null;\n          break;\n        }\n      }\n\n      if (null == t) {\n        if (null === e.type) return document.createTextNode(f);\n        t = o ? document.createElementNS(\"http://www.w3.org/2000/svg\", e.type) : document.createElement(e.type, f.is && {\n          is: f.is\n        }), i = null, s = !1;\n      }\n\n      if (null === e.type) h !== f && t.data != f && (t.data = f);else {\n        if (null != i && (i = Ne.slice.call(t.childNodes)), u = (h = n.props || ke).dangerouslySetInnerHTML, d = f.dangerouslySetInnerHTML, !s) {\n          if (h === ke) for (h = {}, p = 0; p < t.attributes.length; p++) {\n            h[t.attributes[p].name] = t.attributes[p].value;\n          }\n          (d || u) && (d && u && d.__html == u.__html || (t.innerHTML = d && d.__html || \"\"));\n        }\n\n        (function (t, e, n, r, o) {\n          var i;\n\n          for (i in n) {\n            \"children\" === i || \"key\" === i || i in e || Ue(t, i, null, n[i], r);\n          }\n\n          for (i in e) {\n            o && \"function\" != typeof e[i] || \"children\" === i || \"key\" === i || \"value\" === i || \"checked\" === i || n[i] === e[i] || Ue(t, i, e[i], n[i], r);\n          }\n        })(t, f, h, o, s), d ? e.__k = [] : (e.__k = e.props.children, De(t, e, n, r, \"foreignObject\" !== e.type && o, i, a, ke, s)), s || (\"value\" in f && void 0 !== (l = f.value) && l !== t.value && Ue(t, \"value\", l, h.value, !1), \"checked\" in f && void 0 !== (l = f.checked) && l !== t.checked && Ue(t, \"checked\", l, h.checked, !1));\n      }\n      return t;\n    }\n\n    function qe(t, e, n) {\n      try {\n        \"function\" == typeof t ? t(e) : t.current = e;\n      } catch (t) {\n        ye.__e(t, n);\n      }\n    }\n\n    function We(t, e, n) {\n      var r, o, i;\n\n      if (ye.unmount && ye.unmount(t), (r = t.ref) && (r.current && r.current !== t.__e || qe(r, null, e)), n || \"function\" == typeof t.type || (n = null != (o = t.__e)), t.__e = t.__d = void 0, null != (r = t.__c)) {\n        if (r.componentWillUnmount) try {\n          r.componentWillUnmount();\n        } catch (t) {\n          ye.__e(t, e);\n        }\n        r.base = r.__P = null;\n      }\n\n      if (r = t.__k) for (i = 0; i < r.length; i++) {\n        r[i] && We(r[i], e, n);\n      }\n      null != o && Ee(o);\n    }\n\n    function Je(t, e, n) {\n      return this.constructor(t, n);\n    }\n\n    function Ge(t, e, n) {\n      var r, o, i;\n      ye.__ && ye.__(t, e), o = (r = n === Se) ? null : n && n.__k || e.__k, t = Te(Ie, null, [t]), i = [], He(e, (r ? e : n || e).__k = t, o || ke, ke, void 0 !== e.ownerSVGElement, n && !r ? [n] : o ? null : Ne.slice.call(e.childNodes), i, n || ke, r), Be(i, t);\n    }\n\n    ye = {\n      __e: function __e(t, e) {\n        for (var n, r; e = e.__;) {\n          if ((n = e.__c) && !n.__) try {\n            if (n.constructor && null != n.constructor.getDerivedStateFromError && (r = !0, n.setState(n.constructor.getDerivedStateFromError(t))), null != n.componentDidCatch && (r = !0, n.componentDidCatch(t)), r) return Re(n.__E = n);\n          } catch (e) {\n            t = e;\n          }\n        }\n\n        throw t;\n      }\n    }, Oe.prototype.setState = function (t, e) {\n      var n;\n      n = this.__s !== this.state ? this.__s : this.__s = Ae({}, this.state), \"function\" == typeof t && (t = t(n, this.props)), t && Ae(n, t), null != t && this.__v && (e && this.__h.push(e), Re(this));\n    }, Oe.prototype.forceUpdate = function (t) {\n      this.__v && (this.__e = !0, t && this.__h.push(t), Re(this));\n    }, Oe.prototype.render = Ie, _e = [], be = 0, xe = \"function\" == typeof Promise ? Promise.prototype.then.bind(Promise.resolve()) : setTimeout, Se = ke;\n    var Ye = n(1),\n        $e = n.n(Ye),\n        Xe = n(0),\n        Ze = n.n(Xe);\n\n    function Qe(t, e) {\n      var n,\n          r,\n          o,\n          i = t.clipboardData,\n          a = 0;\n\n      if (i) {\n        if (!(n = i.items)) return;\n\n        for (r = n[0], o = i.types || []; a < o.length; a++) {\n          if (\"Files\" === o[a]) {\n            r = n[a];\n            break;\n          }\n        }\n\n        r && \"file\" === r.kind && r.type.match(/^image\\//i) && function (t, e) {\n          var n = t.getAsFile(),\n              r = new FileReader();\n          r.onload = function (t) {\n            e(t.target.result);\n          }, r.readAsDataURL(n);\n        }(r, function (t) {\n          e(t);\n        });\n      }\n    }\n\n    function Ke(t) {\n      var e = function () {\n        if (\"undefined\" == typeof Reflect || !Reflect.construct) return !1;\n        if (Reflect.construct.sham) return !1;\n        if (\"function\" == typeof Proxy) return !0;\n\n        try {\n          return Date.prototype.toString.call(Reflect.construct(Date, [], function () {})), !0;\n        } catch (t) {\n          return !1;\n        }\n      }();\n\n      return function () {\n        var n,\n            r = P()(t);\n\n        if (e) {\n          var o = P()(this).constructor;\n          n = Reflect.construct(r, arguments, o);\n        } else n = r.apply(this, arguments);\n\n        return O()(this, n);\n      };\n    }\n\n    var tn = new w.a(),\n        en = function (t) {\n      L()(n, t);\n      var e = Ke(n);\n\n      function n() {\n        var t;\n        return C()(this, n), (t = e.call(this)).editStep = t.editStep.bind($e()(t)), t.pasteImage = t.pasteImage.bind($e()(t)), t.state = {}, t;\n      }\n\n      return E()(n, [{\n        key: \"editStep\",\n        value: function value(t) {\n          setTimeout(function () {\n            t.target.focus();\n          }, 100);\n        }\n      }, {\n        key: \"pasteImage\",\n        value: function value(t) {\n          var e = this.props,\n              n = e.step,\n              r = e.syncInfo;\n          Qe(t, function (e) {\n            t.target.blur();\n            var o = document.createElement(\"img\");\n            o.src = e, n.tip = n.tip + o.outerHTML, n.modify = void 0, r(), t.target.focus();\n          });\n        }\n      }, {\n        key: \"render\",\n        value: function value() {\n          var t = this,\n              e = this.props,\n              n = e.step,\n              r = e.index,\n              o = e.replay,\n              i = e.remove,\n              a = n.bg,\n              s = {\n            x: n.x,\n            y: n.y\n          },\n              l = tn.getTarget(n.id),\n              c = l ? tn.getUniqueId(l) : null;\n          l && c && n.offsetX && n.offsetY && n.parentW && (s.x = c.left + n.offsetX * l.clientWidth / n.parentW, s.y = c.top + n.offsetY), s.x = Math.min(document.documentElement.scrollWidth - 200, s.x);\n          var u = n.textColor;\n          return u || (n.textColor = u = function (t) {\n            var e = [];\n            return e = t.indexOf(\"rgb\") > -1 ? t.match(/\\((.*)\\)/)[1].split(\",\") : [(t = t.replace(\"#\", \"\")).substr(0, 2), t.substr(2, 4), t.substr(4, 6), 1], .2126 * parseInt(e[0], 16) + .7152 * parseInt(e[1], 16) + .0722 * parseInt(e[1], 16) < 128 ? \"#fff\" : \"#000\";\n          }(a)), Te(\"div\", {\n            className: \"\".concat(Ze.a.stepTag, \" \").concat(n.isActive ? Ze.a.LightActive : \"\"),\n            \"data-pagenotei\": r,\n            \"data-pagenotes\": n.isActive ? \"active\" : \"\",\n            style: {\n              position: \"absolute\",\n              top: s.y + \"px\",\n              left: s.x + \"px\",\n              textAlign: \"left\",\n              color: u,\n              \"--bg-color\": a\n            }\n          }, Te(\"div\", {\n            className: Ze.a.points\n          }, Te(\"div\", {\n            title: \"点击激活/长按拖拽移动\",\n            className: \"\".concat(Ze.a.point, \"  draggable\"),\n            \"data-index\": r,\n            \"data-active\": n.isActive ? 1 : 0,\n            \"data-moving\": \"0\",\n            onClick: function onClick(t) {\n              \"1\" !== t.target.dataset.moving && o(r, !n.isActive, !0, !1, !n.isActive);\n            }\n          }, n.warn && Te(\"b\", {\n            style: \"position:absolute;top:-2px;left:5px;font-size:12px;font-weight:bold;color: #de1c1c;\"\n          }, \"!\")), !n.tip && Te(\"div\", {\n            className: \"\".concat(Ze.a.menuPoint),\n            onClick: function onClick() {\n              n.tip = \"\".concat(n.text, \"📒\"), o(r, !n.isActive, !0, !1, !0);\n            }\n          }, Te(\"svg\", {\n            t: \"1590664246839\",\n            className: \"icon\",\n            viewBox: \"0 0 1024 1024\",\n            version: \"1.1\",\n            xmlns: \"http://www.w3.org/2000/svg\",\n            \"p-id\": \"3118\",\n            width: \"13\",\n            height: \"13\"\n          }, Te(\"path\", {\n            d: \"M1017.258891 619.396953l-102.396586-102.396586a17.066098 17.066098 0 0 0-24.131463 0l-90.313789 90.313789 126.528049 126.528049 90.313789-90.313789a17.066098 17.066098 0 0 0 0-24.131463z m-560.621312 234.11273l-218.377788 31.640545-7.679744-56.181594c0.034132-0.511983 0.30719-0.955701 0.30719-1.501816a16.48585 16.48585 0 0 0-1.433552-6.724043L140.334522 167.486684 858.441785 36.931036l78.742976 426.993767a17.066098 17.066098 0 1 0 33.58608-6.21206l-81.814873-443.718543a17.066098 17.066098 0 0 0-19.864938-13.68701l-283.911603 51.607879c-0.546115-0.102397-0.955701-0.580247-1.535948-0.614379l-529.049032-51.198293a17.202627 17.202627 0 0 0-18.704443 16.246925l-34.132196 785.040498a17.066098 17.066098 0 0 0 14.881637 17.646345l181.344356 23.653612 8.737842 64.134396a17.10023 17.10023 0 0 0 19.318822 14.608579l235.409753-34.132195a17.10023 17.10023 0 0 0-4.812639-33.790874z m58.60498 38.944835a17.066098 17.066098 0 0 0-4.983301 12.082797v102.396587a17.066098 17.066098 0 0 0 17.066098 17.066098h102.396587c4.539582 0 8.874371-1.809006 12.082797-4.983301l260.974767-260.974767-126.528049-126.528049-261.008899 260.940635z\",\n            \"p-id\": \"3119\",\n            fill: a\n          }))), Te(\"div\", {\n            className: Ze.a.deleteButton,\n            onClick: function onClick() {\n              i(r);\n            }\n          }, Te(\"svg\", {\n            t: \"1590668094079\",\n            className: \"icon\",\n            viewBox: \"0 0 1024 1024\",\n            version: \"1.1\",\n            xmlns: \"http://www.w3.org/2000/svg\",\n            \"p-id\": \"6266\",\n            width: \"13\",\n            height: \"13\"\n          }, Te(\"path\", {\n            d: \"M860.29743713 91.73649423L679.0620783 91.73649423 627.28054825 39.95496296 368.37289311 39.95496296 316.59136307 91.73649423 135.35600423 91.73649423 135.35600423 195.29955555 860.29743713 195.29955555M187.13753549 868.45945719C187.13753549 925.41914074 233.74091326 972.02251853 290.70059682 972.02251853L704.95284454 972.02251853C761.91252809 972.02251853 808.51590587 925.41914074 808.51590587 868.45945719L808.51590587 247.08108682 187.13753549 247.08108682 187.13753549 868.45945719Z\",\n            \"p-id\": \"6267\",\n            fill: a || \"#515151\"\n          })))), Te(\"div\", {\n            className: \"\".concat(Ze.a.box, \" \").concat(n.isActive && n.tip ? Ze.a.show : \"\")\n          }, Te(\"div\", {\n            className: \"\".concat(Ze.a.handlebar)\n          }, n.warn || \"点击下方可修改\", Te(\"span\", {\n            className: Ze.a.deleteicon,\n            onClick: function onClick() {\n              i(r);\n            },\n            title: \"删除\"\n          }, Te(\"svg\", {\n            viewBox: \"0 0 1024 1024\",\n            width: \"20\",\n            height: \"20\"\n          }, Te(\"path\", {\n            d: \"M223.595 318.284l24.023 480.742c0 54.377 44.99 98.457 100.485 98.457h331.964c55.495 0 100.49-44.08 100.49-98.457l23.109-480.742h-580.07zm608.154-34.103c.1-20.274.159-21.623.159-22.981 0-52.871-31.299-81.888-73.295-81.888l-116.893.123c0-27.751-27.105-50.246-54.855-50.246H441.35c-27.745 0-55.727 22.495-55.727 50.246l-117.013-.123c-46.388 0-73.296 35.36-73.296 81.888 0 1.363.055 2.707.159 22.981h636.282-.006zM614.17 444.615c0-15.327 12.422-27.75 27.745-27.75 15.327 0 27.75 12.423 27.75 27.75v317.883c0 15.328-12.423 27.751-27.75 27.751-15.323 0-27.745-12.423-27.745-27.75V444.614zm-128.31 0c0-15.327 12.427-27.75 27.75-27.75 15.328 0 27.75 12.423 27.75 27.75v317.883c0 15.328-12.422 27.751-27.75 27.751-15.322 0-27.75-12.423-27.75-27.75V444.614zm-128.222 0c0-15.327 12.423-27.75 27.751-27.75 15.322 0 27.75 12.423 27.75 27.75v317.883c0 15.328-12.427 27.751-27.75 27.751-15.328 0-27.75-12.423-27.75-27.75V444.614zm0 0\",\n            fill: \"#fff\"\n          })))), Te(\"div\", {\n            className: \"\".concat(Ze.a.editcontent, \" \").concat(n.tip ? Ze.a.showEdit : \"\"),\n            onFocus: this.editStep,\n            contentEditable: \"true\",\n            innerHTML: n.tip,\n            onInput: function onInput(t) {\n              var e = t.target.innerHTML;\n              n.modify = e;\n            },\n            onBlur: function onBlur() {\n              var e = void 0 !== n.modify ? n.modify : n.tip;\n              n.tip = e, t.props.syncInfo();\n            }\n          })));\n        }\n      }]), n;\n    }(Oe);\n\n    function nn(t) {\n      var e = function () {\n        if (\"undefined\" == typeof Reflect || !Reflect.construct) return !1;\n        if (Reflect.construct.sham) return !1;\n        if (\"function\" == typeof Proxy) return !0;\n\n        try {\n          return Date.prototype.toString.call(Reflect.construct(Date, [], function () {})), !0;\n        } catch (t) {\n          return !1;\n        }\n      }();\n\n      return function () {\n        var n,\n            r = P()(t);\n\n        if (e) {\n          var o = P()(this).constructor;\n          n = Reflect.construct(r, arguments, o);\n        } else n = r.apply(this, arguments);\n\n        return O()(this, n);\n      };\n    }\n\n    var rn = new w.a(),\n        on = 0,\n        an = 0;\n\n    function sn(t) {\n      var e = t.showBall,\n          n = t.ballPos,\n          r = t.text,\n          o = void 0 === r ? \"recording\" : r;\n      return Te(\"div\", {\n        className: \"\".concat(Ze.a.recordBall, \" \").concat(e ? Ze.a.recording : \"\", \" \").concat(n.arrived ? Ze.a.arrived : \"\"),\n        style: {\n          top: n.top + \"px\",\n          left: n.left + \"px\",\n          background: n.color,\n          textAlign: n.isLeft ? \"right\" : \"left\"\n        }\n      }, o);\n    }\n\n    var ln = function (t) {\n      L()(n, t);\n      var e = nn(n);\n\n      function n(t) {\n        var r;\n        C()(this, n);\n        var o = (r = e.call(this)).pagenote = t.pagenote;\n        return r.state = {\n          status: o.status,\n          steps: o.recordedSteps,\n          activeSteps: o.recordedSteps.filter(function (t) {\n            return t.isActive;\n          }),\n          targetInfo: o.target,\n          runindex: o.runindex,\n          url: o.url,\n          barInfo: o.runningSetting.barInfo,\n          autoLight: o.runningSetting.autoLight,\n          colors: o.options.colors,\n          ballPos: {},\n          showBall: !1\n        }, r.checkActive = u(r.checkActive.bind($e()(r)), 400), o.addListener(r.refreshStatus.bind($e()(r))), r;\n      }\n\n      return E()(n, [{\n        key: \"refreshStatus\",\n        value: function value() {\n          var t = this.pagenote;\n          this.setState({\n            status: t.status,\n            steps: t.recordedSteps,\n            activeSteps: t.recordedSteps.filter(function (t) {\n              return t.isActive;\n            }),\n            targetInfo: t.target,\n            runindex: t.runindex,\n            url: t.url,\n            barInfo: t.runningSetting.barInfo,\n            autoLight: t.runningSetting.autoLight,\n            colors: t.options.colors\n          });\n        }\n      }, {\n        key: \"replay\",\n        value: function value() {\n          var t;\n          (t = this.pagenote).replay.apply(t, arguments), this.refreshStatus();\n        }\n      }, {\n        key: \"remove\",\n        value: function value(t) {\n          this.pagenote.remove(t), this.refreshStatus();\n        }\n      }, {\n        key: \"syncInfo\",\n        value: function value() {\n          this.pagenote.makelink(), this.refreshStatus();\n        }\n      }, {\n        key: \"addDragListener\",\n        value: function value() {\n          var t,\n              e,\n              n,\n              r = this,\n              o = this.pagenote;\n          document.addEventListener(\"mousedown\", function (e) {\n            var r = e.target;\n            setTimeout(function () {\n              r.classList.contains(\"draggable\") && 1 == r.dataset.active && (t = r.dataset.index, n = r);\n            }, 200);\n          }), document.addEventListener(\"mouseup\", function (e) {\n            setTimeout(function () {\n              document.body.style.userSelect = \"auto\", t = -1;\n            }, 200);\n          }), document.addEventListener(\"mousemove\", u(function (i) {\n            if (t >= 0) {\n              if (i.pageY < 10 || i.pageX < 0) return;\n              document.body.style.userSelect = \"none\";\n              var a = o.recordedSteps[t];\n              a.x = i.pageX, a.y = i.pageY;\n              var s = rn.getTarget(a.id);\n\n              if (s) {\n                var l = rn.getUniqueId(s);\n                a.offsetX = a.x - l.left, a.offsetY = a.y - l.top, a.parentW = s.clientWidth;\n              }\n\n              r.syncInfo(), n.dataset.moving = \"1\", clearTimeout(e), window.getSelection().removeAllRanges(), e = setTimeout(function () {\n                n.dataset.moving = \"0\";\n              }, 500);\n            }\n          }, 16));\n        }\n      }, {\n        key: \"checkActive\",\n        value: function value() {\n          var t = this.pagenote;\n\n          if (t.runningSetting.autoLight) {\n            var e = document.documentElement.clientHeight;\n            t.recordedSteps.forEach(function (n, r) {\n              var o = rn.getTarget(n.id),\n                  i = {},\n                  a = (i = o ? rn.getUniqueId(o) : {\n                viewTop: n.y,\n                viewLeft: n.x\n              }).viewTop > 0 && i.viewTop < e && i.viewLeft >= 0;\n              t.replay(r, !1, !0, !1, a);\n            }), this.refreshStatus();\n          }\n        }\n      }, {\n        key: \"componentDidMount\",\n        value: function value() {\n          this.addDragListener(), this.checkActive(), this.addLightClickListen(), window.addEventListener(\"scroll\", this.checkActive), document.addEventListener(\"wheel\", this.checkActive);\n        }\n      }, {\n        key: \"addLightClickListen\",\n        value: function value() {\n          var t = this.pagenote;\n          document.addEventListener(\"click\", function (e) {\n            var n = e.target,\n                r = n && \"light\" === n.tagName.toLowerCase() ? n.dataset.highlight : \"\";\n            r && t.recordedSteps.forEach(function (e, n) {\n              e.lightId === r && t.replay(n, !1, !0, !1, !e.isActive);\n            });\n          });\n        }\n      }, {\n        key: \"componentWillUnmount\",\n        value: function value() {}\n      }, {\n        key: \"recordNew\",\n        value: function value(t) {\n          var e,\n              n,\n              r,\n              o,\n              i,\n              a,\n              s = this,\n              l = this.state,\n              c = this.pagenote,\n              u = t.currentTarget.dataset.color || l.colors[0],\n              d = l.barInfo,\n              p = d.status,\n              h = void 0 === p ? \"\" : p,\n              f = (e = t.currentTarget, {\n            top: (n = e.getBoundingClientRect()).top,\n            left: n.left\n          }),\n              g = f.top,\n              m = f.left,\n              y = d.top + 30,\n              _ = document.documentElement.clientWidth - d.right - 160 - 8,\n              b = \"expand\" === h;\n\n          b && (r = g + v().y, i = document.documentElement.clientHeight - 40 - 16, a = r / document.documentElement.scrollHeight * i + 40 + 16, o - an == 1 && on && Math.abs(a - on) < 24 && (a = on + 8), a = Math.min(r, a, i), on = a, an = o, y = a + 20), this.setState({\n            showBall: !this.state.showBall\n          });\n          var x = Math.abs((y - g) / (_ - m)),\n              w = m - _ > 0 ? -1 : 1,\n              S = g - y > 0 ? -1 : 1,\n              k = m - _ > 0;\n          window.requestAnimationFrame(function t() {\n            if (k ? _ - m <= 1 : m - _ <= 1) {\n              var e = Math.abs(_ - m) <= 10 ? 1 * w : 30 * w;\n              m += e, g += S * Math.abs(e) * x;\n              var n = {\n                left: m,\n                top: g,\n                color: u,\n                isLeft: k,\n                arrived: !!b && Math.abs(m - _) < 15\n              };\n              s.setState({\n                ballPos: n\n              }), window.requestAnimationFrame(t);\n            } else setTimeout(function () {\n              c.record({\n                bg: u\n              }) && s.setState({\n                showBall: !1,\n                ballPos: {\n                  arrived: !1\n                }\n              });\n            }, b ? 500 : 0);\n          });\n        }\n      }, {\n        key: \"render\",\n        value: function value() {\n          var t = this,\n              e = this.state,\n              n = this.pagenote.CONSTANT,\n              r = this.pagenote.target,\n              o = this.pagenote.options.colors;\n          return Te(\"div\", {\n            id: \"pagenote\"\n          }, Te(\"div\", {\n            style: {\n              position: \"absolute\",\n              zIndex: 999999,\n              left: e.targetInfo.x + \"px\",\n              top: e.targetInfo.y + \"px\",\n              transition: \".5s\",\n              userSelect: \"none\",\n              textAlign: \"left\"\n            }\n          }, (e.status === n.WAITING || e.status === n.PLAYANDWAIT) && Te(\"div\", {\n            className: Ze.a.recordContain\n          }, o.map(function (e, n) {\n            var r = 2 * Math.PI / 360 * 38 * (n - o.length + 1),\n                i = 0 === n ? 0 : Number.parseFloat(20 * Math.sin(r)).toFixed(3),\n                a = 0 === n ? 0 : Number.parseFloat(20 * Math.cos(r)).toFixed(3),\n                s = \"translate(\".concat(i, \"px,\").concat(a, \"px)\");\n            return Te(\"div\", {\n              className: Ze.a.recordButton,\n              \"data-color\": e,\n              style: {\n                \"--color\": e,\n                transform: s,\n                top: a / -1 + \"px\",\n                left: i / -1 + \"px\"\n              },\n              onClick: function onClick(e) {\n                t.recordNew(e);\n              }\n            }, 0 === n && Te(\"svg\", {\n              t: \"1584087258159\",\n              viewBox: \"0 0 1024 1024\",\n              version: \"1.1\",\n              xmlns: \"http://www.w3.org/2000/svg\",\n              \"p-id\": \"15434\",\n              width: \"26\",\n              height: \"26\"\n            }, Te(\"path\", {\n              d: \"M768 128h-32V96c0-19.2-12.8-32-32-32s-32 12.8-32 32v32H544V96c0-19.2-12.8-32-32-32s-32 12.8-32 32v32H352V96c0-19.2-12.8-32-32-32s-32 12.8-32 32v32h-32c-35.2 0-64 32-64 70.4v694.4c0 35.2 28.8 67.2 64 67.2h512c35.2 0 64-32 64-70.4V198.4c0-38.4-28.8-70.4-64-70.4z m-96 640H352c-19.2 0-32-12.8-32-32s12.8-32 32-32h320c19.2 0 32 12.8 32 32s-12.8 32-32 32z m0-192H352c-19.2 0-32-12.8-32-32s12.8-32 32-32h320c19.2 0 32 12.8 32 32s-12.8 32-32 32z m0-192H352c-19.2 0-32-12.8-32-32s12.8-32 32-32h320c19.2 0 32 12.8 32 32s-12.8 32-32 32z\",\n              \"p-id\": \"15435\",\n              fill: \"#ffffff\"\n            })));\n          }))), Te(sn, {\n            showBall: e.showBall,\n            ballPos: e.ballPos,\n            text: r.text\n          }), e.steps.map(function (e, n) {\n            return Te(en, {\n              key: n + e.id,\n              step: e,\n              index: n,\n              syncInfo: t.syncInfo.bind(t),\n              replay: t.replay.bind(t),\n              remove: t.remove.bind(t)\n            });\n          }));\n        }\n      }]), n;\n    }(Oe);\n\n    function cn(t) {\n      var e = function () {\n        if (\"undefined\" == typeof Reflect || !Reflect.construct) return !1;\n        if (Reflect.construct.sham) return !1;\n        if (\"function\" == typeof Proxy) return !0;\n\n        try {\n          return Date.prototype.toString.call(Reflect.construct(Date, [], function () {})), !0;\n        } catch (t) {\n          return !1;\n        }\n      }();\n\n      return function () {\n        var n,\n            r = P()(t);\n\n        if (e) {\n          var o = P()(this).constructor;\n          n = Reflect.construct(r, arguments, o);\n        } else n = r.apply(this, arguments);\n\n        return O()(this, n);\n      };\n    }\n\n    var un = 0,\n        dn = 0,\n        pn = null;\n\n    function hn(t, e) {\n      var n = document.documentElement.clientHeight - 40 - 16,\n          r = t / document.documentElement.scrollHeight * n + 40 + 16;\n      return e - dn == 1 && un && Math.abs(r - un) < 24 && (r = un + 8), r = Math.min(t, r, n), un = r, dn = e, r;\n    }\n\n    function fn(t) {\n      var e = t.step,\n          n = t.running,\n          r = void 0 !== n && n,\n          o = t.index,\n          i = t.onclick,\n          a = t.barStatus;\n      return Te(\"div\", {\n        title: \"点击定位到此处\",\n        className: \"\".concat(Ze.a.stepSign, \" \").concat(r ? Ze.a.running : \"\", \" \").concat(e.isActive ? Ze.a.isActive : \"\"),\n        style: {\n          top: hn(e.y, o) + \"px\",\n          \"--color\": e.bg,\n          position: \"expand\" === a ? \"absolute\" : \"\"\n        },\n        onClick: function onClick(t) {\n          i(o, !0, !0, !1, !e.isActive);\n        }\n      }, e.text || e.tip);\n    }\n\n    var gn = function (t) {\n      L()(n, t);\n      var e = cn(n);\n\n      function n(t) {\n        var r;\n        return C()(this, n), r = e.call(this), pn = r.pagenote = t.pagenote, r.toggleAllLight = r.toggleAllLight.bind($e()(r)), r.toggleAutoLight = r.toggleAutoLight.bind($e()(r)), r.replay = r.replay.bind($e()(r)), r.toggleSideBar = r.toggleSideBar.bind($e()(r)), r.state = {\n          barInfo: pn.runningSetting.barInfo,\n          activeSteps: pn.recordedSteps.filter(function (t) {\n            return t.isActive;\n          }),\n          steps: pn.recordedSteps,\n          autoLight: pn.runningSetting.autoLight,\n          highlightAll: pn.highlightAll,\n          runindex: pn.runindex\n        }, pn.addListener(r.refreshStatus.bind($e()(r))), r;\n      }\n\n      return E()(n, [{\n        key: \"componentDidMount\",\n        value: function value() {}\n      }, {\n        key: \"refreshStatus\",\n        value: function value() {\n          this.setState({\n            barInfo: pn.runningSetting.barInfo,\n            activeSteps: pn.recordedSteps.filter(function (t) {\n              return t.isActive;\n            }),\n            steps: pn.recordedSteps,\n            autoLight: pn.runningSetting.autoLight,\n            highlightAll: pn.highlightAll,\n            runindex: pn.runindex\n          });\n        }\n      }, {\n        key: \"toggleAllLight\",\n        value: function value() {\n          var t = this.pagenote,\n              e = t.lastaction === t.CONSTANT.DIS_LIGHT;\n          t.replay(0, !1, !0, !0, e), !1 === e && (t.runningSetting.autoLight = !1), t.makelink();\n        }\n      }, {\n        key: \"toggleAutoLight\",\n        value: function value() {\n          var t = this.pagenote;\n          t.runningSetting.autoLight = !t.runningSetting.autoLight, t.makelink();\n        }\n      }, {\n        key: \"replay\",\n        value: function value() {\n          var t;\n          (t = this.pagenote).replay.apply(t, arguments), this.refreshStatus();\n        }\n      }, {\n        key: \"toggleSideBar\",\n        value: function value() {\n          var t = this.state.barInfo.status || \"\";\n          t = \"expand\" === t ? \"fold\" : \"expand\", this.pagenote.runningSetting.barInfo.status = t, this.pagenote.makelink();\n        }\n      }, {\n        key: \"setRef\",\n        value: function value(t) {\n          var e = this,\n              n = this.pagenote;\n\n          if (!this.sideEl) {\n            this.sideEl = t;\n            var r = null;\n            !function (t, e) {\n              if (t) {\n                t.style.cursor = \"move\";\n                var n = !1;\n                t.addEventListener(\"mousedown\", function () {\n                  setTimeout(function () {\n                    n = !0;\n                  }, 300);\n                }), document.addEventListener(\"mouseup\", function () {\n                  n = !1, setTimeout(function () {\n                    document.body.style.userSelect = \"auto\";\n                  }, 300);\n                }), document.addEventListener(\"mousemove\", u(function (t) {\n                  n && (document.body.style.userSelect = \"none\", e(t));\n                }, 1e3 / 60));\n              }\n            }(t, function (t) {\n              var o = t.clientX,\n                  i = t.clientY - 10,\n                  a = n.runningSetting.barInfo;\n              a.right = Math.max(2, document.documentElement.clientWidth - o - 10), a.right = Math.min(a.right, document.documentElement.clientWidth - 20), a.top = Math.max(Math.min(document.documentElement.clientHeight - 200, i), 0), clearTimeout(r), r = setTimeout(function () {\n                n.makelink();\n              }, 600), e.setState({\n                barInfo: n.runningSetting.barInfo\n              });\n            });\n          }\n        }\n      }, {\n        key: \"confirmShare\",\n        value: function value() {\n          this.pagenote.openModal(\"share\");\n        }\n      }, {\n        key: \"toggleHideSideBar\",\n        value: function value() {\n          var t = this.state.barInfo.status || \"\";\n          t = t.indexOf(\"hide\") > -1 ? \"fold\" : \"hide\", this.pagenote.runningSetting.barInfo.status = t, this.pagenote.makelink();\n        }\n      }, {\n        key: \"render\",\n        value: function value() {\n          var t = this,\n              e = this.state,\n              n = e.barInfo,\n              r = e.activeSteps,\n              o = e.steps,\n              i = e.autoLight,\n              a = e.highlightAll,\n              s = e.runindex,\n              l = n.status || \"\",\n              c = \"hide\" === l,\n              u = 0 !== o.length,\n              d = \"expand\" === l ? 30 : n.top;\n          n.right = Math.max(0, Math.min(document.documentElement.clientWidth - 170, n.right));\n          var p = !!this.pagenote.options.onShare,\n              h = n.right;\n          return document.documentElement.clientWidth < 450 && (h = 0), Te(\"aside\", {\n            className: \"\".concat(Ze.a.sideBar, \" \").concat(u ? Ze.a.showBar : \"\", \" \").concat(c ? Ze.a.easy : \"\"),\n            \"data-status\": n.status,\n            style: {\n              right: h + \"px\",\n              top: d + \"px\",\n              position: \"fixed\"\n            }\n          }, Te(\"div\", {\n            className: Ze.a.icons\n          }, Te(\"div\", {\n            className: \"\".concat(Ze.a.icon, \" \").concat(Ze.a.easyButton),\n            onClick: this.toggleHideSideBar.bind(this)\n          }, Te(\"svg\", {\n            t: \"1590675065467\",\n            className: \"icon\",\n            viewBox: \"0 0 1024 1024\",\n            version: \"1.1\",\n            xmlns: \"http://www.w3.org/2000/svg\",\n            \"p-id\": \"3351\",\n            width: \"20\",\n            height: \"20\"\n          }, Te(\"path\", {\n            d: \"M512 0C347.395821 0 213.970149 133.425672 213.970149 298.029851v427.940298C213.970149 890.574328 347.395821 1024 512 1024S810.029851 890.574328 810.029851 725.970149v-427.940298C810.029851 133.425672 676.604179 0 512 0zM397.373134 340.319522L446.509851 290.38806 657.19403 504.358209 446.509851 718.328358 397.373134 668.396896 558.874746 504.358209 397.373134 340.319522z\",\n            \"p-id\": \"3352\"\n          }))), Te(\"div\", {\n            className: Ze.a.icon\n          }, Te(\"a\", {\n            className: \"\".concat(Ze.a.esLight, \" \").concat(a ? \"\" : Ze.a.lightAll),\n            onClick: this.toggleAllLight\n          }, Te(\"svg\", {\n            viewBox: \"0 0 1000 1000\",\n            version: \"1.1\",\n            width: \"20\",\n            height: \"20\"\n          }, Te(\"path\", {\n            d: \"M634.9 770.3l-4.4 28H393.6l-4.4-28h245.7zM512 931c-30.4 0-55.9-21.6-62-50.2h124c-6.1 28.6-31.6 50.2-62 50.2z m103.5-79.3h-207c-3.4 0-6.4-2.2-7.4-5.5l-2.9-18.9H626l-3 18.9c-1 3.3-4 5.5-7.5 5.5zM384.7 741.3l-8.1-51.9-0.1-0.6c-7.4-30.4-22.6-58.6-43.8-81.7-42.5-46.2-65.9-106.1-65.9-168.7 0-135.1 109.9-245.1 245-245.3h0.3c134 0 244 108.9 245.3 242.9 0.6 62.7-22.5 122.6-65 168.6-21.5 23.2-36.8 51.7-44.3 82.4l-0.1 0.6-8.4 53.6H384.7z\",\n            fill: \"#FFFFFF\",\n            \"p-id\": \"10480\"\n          }), Te(\"g\", {\n            id: Ze.a.light,\n            style: {\n              opacity: r.length / o.length\n            }\n          }, Te(\"path\", {\n            d: \"M357 741.1l-8-51.9-0.1-0.6c-7.4-30.4-22.4-58.6-43.5-81.7-42.2-46.2-65.4-106.1-65.4-168.7 0-135.1 109-245.1 243.1-245.3h0.3c133 0 242.1 108.9 243.3 242.9 0.6 62.7-22.3 122.6-64.5 168.6-21.3 23.2-36.5 51.7-43.9 82.4l-0.1 0.6-8.3 53.6H357z\",\n            \"p-id\": \"10481\"\n          })), Te(\"path\", {\n            d: \"M605.8 770.8l-4.3 28H370.4l-4.3-28h239.7zM587 852.2H384.9c-3.3 0-6.3-2.2-7.2-5.5l-2.9-18.9h222.3l-2.9 18.9c-1 3.3-3.9 5.5-7.2 5.5z\",\n            fill: \"#E87A66\",\n            \"p-id\": \"10482\"\n          }), Te(\"path\", {\n            d: \"M484.9 931c-29 0-53.4-21.6-59.2-50.2H544c-5.8 28.6-30.1 50.2-59.1 50.2z\",\n            fill: \"#65D5EF\",\n            \"p-id\": \"10483\"\n          }), Te(\"path\", {\n            d: \"M512 164.1h-0.3c-73.2 0.1-142 28.6-193.7 80.4-51.7 51.8-80.2 120.6-80.2 193.9 0 35.2 6.6 69.7 19.7 102.6 12.7 31.8 30.8 60.7 53.8 85.7 17.8 19.3 30.5 42.9 36.8 68.4l24.5 157 0.1 0.6c4 16.5 18.7 28 35.7 28h12c6.4 44.7 45 79.2 91.5 79.2s85.1-34.5 91.5-79.2h12c17 0 31.7-11.5 35.7-28l0.1-0.6 5.6-35.7c0.2-0.9 0.4-1.8 0.4-2.7l18.9-120.4c6.4-25.7 19.3-49.6 37.3-69.1 47.5-51.5 73.3-118.5 72.7-188.6-0.7-72.6-29.6-140.9-81.5-192.2-51.6-51.1-120.1-79.3-192.6-79.3z m122.9 606.2l-4.4 28H393.6l-4.4-28h245.7zM512 931c-30.4 0-55.9-21.6-62-50.2h124c-6.1 28.6-31.6 50.2-62 50.2z m103.5-79.3h-207c-3.4 0-6.4-2.2-7.4-5.5l-2.9-18.9H626l-3 18.9c-1 3.3-4 5.5-7.5 5.5z m76.8-247c-21.5 23.2-36.8 51.7-44.3 82.4l-0.1 0.6-8.4 53.6h-113V570.8c0-8-6.5-14.5-14.5-14.5s-14.5 6.5-14.5 14.5v170.5H384.7l-8.1-51.9-0.1-0.6c-7.4-30.4-22.6-58.6-43.8-81.7-42.5-46.2-65.9-106.1-65.9-168.7 0-135.1 109.9-245.1 245-245.3h0.3c134 0 244 108.9 245.3 242.9 0.4 62.8-22.6 122.6-65.1 168.7z\",\n            fill: \"#274359\",\n            \"p-id\": \"10484\"\n          }), Te(\"g\", {\n            id: Ze.a.sunshine\n          }, Te(\"path\", {\n            d: \"M512 467c-8 0-14.5 6.5-14.5 14.5v29.7c0 8 6.5 14.5 14.5 14.5s14.5-6.5 14.5-14.5v-29.7c0-8-6.5-14.5-14.5-14.5zM511.4 146.9c8 0 14.5-6.5 14.5-14.5V78.5c0-8-6.5-14.5-14.5-14.5s-14.5 6.5-14.5 14.5v53.8c0 8.1 6.5 14.6 14.5 14.6zM281.4 234.1c2.8 2.8 6.5 4.3 10.3 4.3 3.7 0 7.4-1.4 10.3-4.3 5.7-5.7 5.7-14.9 0-20.5l-38.1-38.1c-5.7-5.7-14.9-5.7-20.5 0-5.7 5.7-5.7 14.9 0 20.5l38 38.1zM201 429.4h-53.8c-8 0-14.5 6.5-14.5 14.5s6.5 14.5 14.5 14.5H201c8 0 14.5-6.5 14.5-14.5 0.1-8-6.4-14.5-14.5-14.5zM282.3 653.4l-38.1 38.1c-5.7 5.7-5.7 14.9 0 20.5 2.8 2.8 6.5 4.3 10.3 4.3 3.7 0 7.4-1.4 10.3-4.3l38.1-38.1c5.7-5.7 5.7-14.9 0-20.5-5.8-5.7-14.9-5.7-20.6 0zM742.6 652.5c-5.7-5.7-14.9-5.7-20.5 0-5.7 5.7-5.7 14.9 0 20.5l38.1 38.1c2.8 2.8 6.5 4.3 10.3 4.3s7.4-1.4 10.3-4.3c5.7-5.7 5.7-14.9 0-20.5l-38.2-38.1zM876.8 428.2H823c-8 0-14.5 6.5-14.5 14.5s6.5 14.5 14.5 14.5h53.8c8 0 14.5-6.5 14.5-14.5s-6.5-14.5-14.5-14.5zM731.4 237.5c3.7 0 7.4-1.4 10.3-4.3l38.1-38.1c5.7-5.7 5.7-14.9 0-20.5-5.7-5.7-14.9-5.7-20.5 0l-38.1 38.1c-5.7 5.7-5.7 14.9 0 20.5 2.8 2.9 6.5 4.3 10.2 4.3z\",\n            fill: \"#274359\",\n            \"p-id\": \"10485\"\n          }))))), Te(\"div\", {\n            className: Ze.a.icon,\n            onClick: this.toggleAutoLight,\n            \"data-tip\": \"开启/关闭「自动点亮模式」\"\n          }, Te(\"svg\", {\n            t: \"1588601864954\",\n            className: \"icon\",\n            viewBox: \"0 0 1024 1024\",\n            version: \"1.1\",\n            xmlns: \"http://www.w3.org/2000/svg\",\n            \"p-id\": \"25957\",\n            width: \"20\",\n            height: \"20\"\n          }, Te(\"path\", {\n            d: \"M510.677 83.529c60.891 0 119.75 13.191 174.046 38.055l-40.087 70.028 202.97-1.016-101.99-175.063-35.52 61.909c-61.908-29.433-129.903-44.657-199.419-44.657-257.266 0-466.833 209.566-466.833 466.833 0 93.368 27.4 183.69 79.668 261.326l42.116-28.415c-46.684-69.012-71.039-149.183-71.039-232.91 0-229.355 186.729-416.09 416.088-416.09z m425.225 223.774l-46.175 20.802c24.356 53.788 37.039 111.637 37.039 171.512 0 229.358-186.73 416.089-416.089 416.089-46.684 0-92.351-7.608-135.99-22.832l34-65.968-202.468 10.148 110.116 170.5 35.52-69.012c50.738 18.777 104.526 27.908 159.33 27.908 257.265 0 466.832-209.567 466.832-466.833-0.507-66.98-14.715-131.93-42.115-192.314z m0 0\",\n            \"p-id\": \"25958\",\n            fill: i ? \"#03a9f4\" : \"#515151\"\n          }), Te(\"path\", {\n            d: \"M317.096 1023.06L192.387 829.965 421.78 818.47l-36.039 69.924c40.06 12.971 82.045 19.543 124.936 19.543 225.147 0 408.317-183.17 408.317-408.317 0-58.417-12.23-115.043-36.348-168.305l-3.212-7.094 60.343-27.186 3.203 7.059c27.889 61.462 42.292 127.226 42.81 195.467 0 261.757-212.908 474.664-474.606 474.664-54.211 0-106.5-8.76-155.546-26.05l-38.54 74.885zM220.05 844.143l95.524 147.906 32.521-63.187 6.458 2.39c49.176 18.198 101.874 27.425 156.632 27.425 253.126 0 459.06-205.933 459.06-459.06-0.48-63.377-13.353-124.59-38.275-182.018l-32.013 14.422c22.95 53.205 34.582 109.55 34.582 167.595 0 233.719-190.143 423.862-423.862 423.862-47.682 0-94.297-7.828-138.55-23.266l-8.448-2.948 31.914-61.92-175.543 8.8z m-98.64-72.405l-4.345-6.455C64.08 686.583 36.071 594.717 36.071 499.617c0-261.698 212.907-474.605 474.605-474.605 68.724 0 134.705 14.25 196.232 42.368L745.564 0.005 861.09 198.301l-229.898 1.151 42.514-74.27c-51.835-22.486-106.64-33.88-163.03-33.88-225.147 0-408.317 183.17-408.317 408.316 0 82.11 24.104 161.145 69.705 228.556l4.36 6.445-55.014 37.12zM510.677 40.557c-253.126 0-459.06 205.934-459.06 459.06 0 89.396 25.578 175.828 74.053 250.495l29.221-19.715c-44.563-68.554-68.074-148.169-68.074-230.78 0-233.717 190.143-423.861 423.861-423.861 61.471 0 121.117 13.04 177.283 38.76l7.738 3.543-37.618 65.714 176.044-0.882-88.458-151.83-32.41 56.489-6.498-3.09C645.482 55.329 579.51 40.558 510.677 40.558z\",\n            \"p-id\": \"25959\",\n            fill: i ? \"#03a9f4\" : \"#515151\"\n          }), Te(\"path\", {\n            d: \"M320.113 320.409h383.973v63.55H320.113z m0.184 127.952H704.27v63.55H320.297z m-0.184 127.803h383.973v63.55H320.113z\",\n            \"p-id\": \"25960\",\n            fill: i ? \"#03a9f4\" : \"#515151\"\n          }))), Te(\"div\", {\n            className: Ze.a.icon,\n            onClick: this.toggleSideBar\n          }, Te(\"svg\", {\n            t: \"1588559997149\",\n            className: \"icon\",\n            viewBox: \"0 0 1024 1024\",\n            version: \"1.1\",\n            xmlns: \"http://www.w3.org/2000/svg\",\n            \"p-id\": \"24444\",\n            width: \"20\",\n            height: \"20\"\n          }, Te(\"path\", {\n            d: \"M152.3 467.8v88.3h90.5v-88.3h-90.5zM64 602.5v-181h896v180.9H64z m178.8-315.6v-88.3h-90.5v88.3h90.5zM64 152.3h896v180.9H64V152.3z m88.3 584.8v88.3h90.5v-88.3h-90.5zM64 871.7V690.8h896v180.9H64z\",\n            \"p-id\": \"24445\",\n            fill: l.indexOf(\"expand\") > -1 ? \"#03a9f4\" : \"#515151\"\n          }))), p && Te(\"div\", {\n            className: Ze.a.icon,\n            onClick: this.confirmShare.bind(this)\n          }, Te(\"svg\", {\n            t: \"1588566551449\",\n            className: \"icon\",\n            viewBox: \"0 0 1024 1024\",\n            version: \"1.1\",\n            xmlns: \"http://www.w3.org/2000/svg\",\n            \"p-id\": \"18007\",\n            width: \"20\",\n            height: \"20\"\n          }, Te(\"path\", {\n            d: \"M838.284171 330.523147 837.725258 287.969701 714.845258 419.334273C703.255161 431.724638 703.903906 451.164645 716.294273 462.754742 728.684638 474.344839 748.124645 473.696094 759.714742 461.305727L882.594742 329.941156C893.854693 317.903731 893.608051 299.125248 882.035829 287.38771L759.155829 162.752281C747.244306 150.670594 727.793967 150.532649 715.712281 162.444171 703.630594 174.355693 703.492649 193.806032 715.404171 205.887719L838.284171 330.523147Z\",\n            \"p-id\": \"18008\",\n            fill: \"#515151\"\n          }), Te(\"path\", {\n            d: \"M204.933213 153.6C142.666561 153.6 92.16 204.043003 92.16 266.254734L92.16 798.793535C92.16 861.000106 142.464635 911.448269 204.598858 911.448269L778.441148 911.448269C840.512004 911.448269 890.880006 860.966865 890.880006 798.91141L890.880006 563.023553C890.880006 546.057366 877.126193 532.303553 860.160006 532.303553 843.193819 532.303553 829.440006 546.057366 829.440006 563.023553L829.440006 798.91141C829.440006 827.065383 806.548658 850.008269 778.441148 850.008269L204.598858 850.008269C176.436258 850.008269 153.6 827.106855 153.6 798.793535L153.6 266.254734C153.6 237.992709 176.581629 215.04 204.933213 215.04L389.12 215.04C406.086187 215.04 419.84 201.286187 419.84 184.32 419.84 167.353813 406.086187 153.6 389.12 153.6L204.933213 153.6Z\",\n            \"p-id\": \"18009\",\n            fill: \"#515151\"\n          }), Te(\"path\", {\n            d: \"M460.8 471.04C460.8 397.496685 520.297624 337.92 593.730632 337.92L839.68 337.92C856.646187 337.92 870.4 324.166187 870.4 307.2 870.4 290.233813 856.646187 276.48 839.68 276.48L593.730632 276.48C486.346971 276.48 399.36 363.58256 399.36 471.04L399.36 634.88C399.36 651.846187 413.113813 665.6 430.08 665.6 447.046187 665.6 460.8 651.846187 460.8 634.88L460.8 471.04Z\",\n            \"p-id\": \"18010\",\n            fill: \"#515151\"\n          }))), Te(\"div\", {\n            className: Ze.a.icon\n          }, Te(\"a\", {\n            target: \"_blank\",\n            href: \"https://addons.mozilla.org/zh-CN/firefox/addon/page-note/\"\n          }, Te(\"svg\", {\n            t: \"1589809778730\",\n            className: \"icon\",\n            viewBox: \"0 0 1024 1024\",\n            version: \"1.1\",\n            xmlns: \"http://www.w3.org/2000/svg\",\n            \"p-id\": \"3021\",\n            width: \"20\",\n            height: \"20\"\n          }, Te(\"path\", {\n            d: \"M864 83.2H371.2c-44.8 0-83.2 38.4-83.2 83.2v390.4c0 44.8 38.4 83.2 83.2 83.2h224l166.4 166.4L832 640h25.6c44.8 0 83.2-38.4 83.2-83.2V166.4c6.4-44.8-32-83.2-76.8-83.2zM230.4 556.8V307.2H134.4c-44.8 0-83.2 38.4-83.2 83.2v332.8c0 44.8 38.4 83.2 83.2 83.2V960l179.2-153.6h153.6c44.8 0 83.2-38.4 83.2-83.2v-25.6H371.2c-76.8 0-140.8-64-140.8-140.8z m0 0\",\n            \"p-id\": \"3022\",\n            fill: \"#515151\"\n          })))), Te(\"div\", {\n            id: \"drag-bar\",\n            ref: this.setRef.bind(this),\n            className: \"\".concat(Ze.a.icon, \" \").concat(Ze.a.moveIcon)\n          }, Te(\"svg\", {\n            t: \"1588585290337\",\n            className: \"icon\",\n            viewBox: \"0 0 1024 1024\",\n            version: \"1.1\",\n            xmlns: \"http://www.w3.org/2000/svg\",\n            \"p-id\": \"18962\",\n            width: \"20\",\n            height: \"20\"\n          }, Te(\"path\", {\n            d: \"M951.990857 512a30.317714 30.317714 0 0 1-9.691428 22.016l-124.964572 125.842286c-6.473143 6.473143-14.08 9.691429-22.893714 9.691428s-16.128-3.218286-22.016-9.691428-8.813714-13.787429-8.813714-22.016v-63.378286h-189.184v189.184h63.378285c8.228571 0 15.542857 2.925714 22.016 8.813714s9.691429 13.202286 9.691429 22.016-3.218286 16.128-9.691429 22.016l-125.842285 125.842286c-5.851429 6.473143-13.202286 9.691429-22.016 9.691429s-16.128-3.218286-22.016-9.691429l-125.842286-125.842286c-6.473143-5.851429-9.691429-13.202286-9.691429-22.016s3.218286-16.128 9.691429-22.016 13.787429-8.813714 22.016-8.813714h63.341714v-189.184H260.278857v63.378286c0 8.228571-2.925714 15.542857-8.813714 22.016s-13.202286 9.691429-22.016 9.691428-16.128-3.218286-22.016-9.691428l-125.842286-125.842286c-6.473143-6.473143-9.691429-13.787429-9.691428-22.016s3.218286-15.542857 9.691428-22.016l125.842286-125.842286c5.851429-6.473143 13.202286-9.691429 22.016-9.691428s16.128 3.218286 22.016 9.691428 8.813714 13.787429 8.813714 22.016v63.341715h189.184V260.315429h-63.341714c-8.228571 0-15.542857-2.925714-22.016-8.813715s-9.691429-13.202286-9.691429-22.016 3.218286-16.420571 9.691429-22.893714l125.842286-124.964571c6.473143-6.473143 13.787429-9.691429 22.016-9.691429s15.542857 3.218286 22.016 9.691429l125.842285 124.964571c6.473143 6.473143 9.691429 14.08 9.691429 22.893714s-3.218286 16.128-9.691429 22.016-13.787429 8.813714-22.016 8.813715h-63.341714v189.184h189.184v-63.341715c0-8.228571 2.925714-15.542857 8.813714-22.016s13.202286-9.691429 22.016-9.691428 16.420571 3.218286 22.893715 9.691428l124.964571 125.842286c6.473143 5.851429 9.691429 13.202286 9.691429 22.016z\",\n            \"p-id\": \"18963\",\n            fill: \"#707070\"\n          })))), Te(\"div\", {\n            className: \"\".concat(Ze.a.signContainer, \"  \").concat(\"expand\" === l ? Ze.a.expand : \"\")\n          }, o.map(function (e, n) {\n            return Te(fn, {\n              barStatus: l,\n              key: n + \"-\" + e.y,\n              step: e,\n              running: n === s,\n              index: n,\n              onclick: t.replay\n            });\n          })));\n        }\n      }]), n;\n    }(Oe);\n\n    function vn(t) {\n      var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},\n          n = new me(t, e),\n          r = document.createElement(\"aside\");\n      r.dataset.pagenote = \"lights\", document.body.appendChild(r), Ge(Te(ln, {\n        pagenote: n\n      }), r);\n      var o = document.createElement(\"aside\");\n      return o.dataset.pagenote = \"sidebar\", document.body.appendChild(o), Ge(Te(gn, {\n        pagenote: n\n      }), o), n;\n    }\n\n    e[\"default\"] = vn;\n    window.PageNote = vn;\n  }, function (t, e, n) {\n    \"use strict\";\n\n    function r(t) {\n      var e = t.getBoundingClientRect(),\n          n = document.body,\n          r = document.documentElement,\n          o = window.pageYOffset || r.scrollTop || n.scrollTop,\n          i = window.pageXOffset || r.scrollLeft || n.scrollLeft,\n          a = r.clientTop || n.clientTop || 0,\n          s = r.clientLeft || n.clientLeft || 0,\n          l = e.top + o - a,\n          c = e.left + i - s;\n      return {\n        top: Math.round(l),\n        left: Math.round(c)\n      };\n    }\n\n    n.r(e);\n\n    var _o2,\n        i = window.document,\n        a = function a() {},\n        s = _o2 = function o(t) {\n      this.options = Object.assign({}, {\n        draw: !0,\n        simpleId: !0\n      }, t), this.lastClick = document.body;\n      var e = this;\n      document.addEventListener(\"mousedown\", function (t) {\n        e.lastClick = t.target, e.focusedElement !== e.lastClick && _o2.prototype.clean();\n      });\n    },\n        l = s.prototype;\n\n    l.getUniqueId = function (t, e) {\n      if (!((t = t || this.lastClick) instanceof HTMLElement)) return console.error(\"input is not a HTML element\"), {};\n      var n = {\n        wid: \"\",\n        type: \"\",\n        top: r(t).top,\n        left: r(t).left,\n        viewLeft: t.getBoundingClientRect().left,\n        viewTop: t.getBoundingClientRect().top,\n        text: t.innerText\n      },\n          o = t.id,\n          a = t.name,\n          c = t.tagName.toLowerCase(),\n          u = t.type ? t.type.toLowerCase() : \"\",\n          d = \"\",\n          p = t.classList || [];\n\n      if (p.forEach(function (t) {\n        d += \".\" + t;\n      }), \"body\" !== c && \"html\" !== c || (n.wid = c, n.type = c), o && i.getElementById(o) === t) {\n        var h = new RegExp(\"^[a-zA-Z]+\");\n        !e && this.options.simpleId ? n.wid = o : h.test(o) && (n.wid = c + \"#\" + o), n.type = \"document.getElementById()\";\n      }\n\n      if (!n.wid && a && i.getElementsByName(a)[0] === t && (n.wid = a, n.type = \"document.getElementsByName()\"), !n.wid && d && i.querySelector(c + d) === t) {\n        n.wid = c + d, n.type = \"document.querySelector()\";\n        var f = p.length;\n\n        if (f > 2) {\n          for (var g = 1, v = []; Math.pow(2, g) < f;) {\n            v.push(Math.pow(2, g)), g++;\n          }\n\n          v.push(f);\n\n          for (var m = 0; m < v.length; m++) {\n            v[m];\n          }\n        }\n      }\n\n      if (\"radio\" === u) {\n        var y = c + \"[value='\" + t.value + \"']\";\n        a && (y += \"[name='\" + a + \"']\"), i.querySelector(y) === t && (n.wid = y, n.type = \"document.querySelector()\");\n      }\n\n      if (n.wid || (y = c, y = d ? y + d : y, y = a ? y + \"[name='\" + a + \"']\" : y, l.getTarget(y) === t && (n.wid = y, n.type = \"document.querySelector()\")), !n.wid) {\n        y = c, y = d ? y + d : y;\n\n        var _ = i.querySelectorAll(y);\n\n        if (_ && _.length > 0) {\n          for (var b = null, x = 0; x < _.length; x++) {\n            if (t === _[x]) {\n              b = x + 1;\n              break;\n            }\n          }\n\n          b && (y = y + \":nth-child(\" + b + \")\", i.querySelector(y) === t && (n.wid = y, n.type = \"document.querySelector()\"));\n        }\n      }\n\n      if (!n.wid) {\n        if (!t.parentNode) return;\n        var w = s.prototype.getUniqueId(t.parentNode, !0),\n            S = w ? w.wid : \"\";\n        if (!S) return {\n          wid: \"\",\n          type: \"NO_LOCATION\"\n        };\n        var k = c;\n\n        if (d && (k += d), y = S + \">\" + k, i.querySelectorAll(y).length > 1) {\n          y = null;\n          b = null;\n\n          for (var N = 0; N < t.parentNode.children.length; N++) {\n            if (t.parentNode.children[N] === t) {\n              b = N + 1;\n              break;\n            }\n          }\n\n          if (b >= 1) y = S + \">\" + k + \":nth-child(\" + b + \")\", i.querySelector(y) != t && (y = null);\n        }\n\n        n.wid = y, n.type = \"document.querySelector()\";\n      }\n\n      return this.focusedElement = l.getTarget(n.wid), !e && this.options.draw && this.__proto__.draw(n), n;\n    }, l.getTarget = function (t) {\n      return i.getElementById(t) || i.getElementsByName(t)[0] || i.querySelector(t);\n    }, l.clean = a, l.draw = a, window.whatsElement = s;\n    e[\"default\"] = s;\n  }]);\n});\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports_1 = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports_1, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports_1)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports_1;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports_1)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/module.js */ \"./node_modules/webpack/buildin/module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./public/pagenote.js\n");

/***/ })

})