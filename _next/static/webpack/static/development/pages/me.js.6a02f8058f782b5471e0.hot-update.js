webpackHotUpdate("static/development/pages/me.js",{

/***/ "./utils/index.js":
/*!************************!*\
  !*** ./utils/index.js ***!
  \************************/
/*! exports provided: connectServer, groupPages, savePage */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"connectServer\", function() { return connectServer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"groupPages\", function() { return groupPages; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"savePage\", function() { return savePage; });\n/* harmony import */ var _babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/toConsumableArray */ \"./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\");\n\nvar connectServer = function connectServer(callback) {\n  var bridge = document.getElementById('bridge');\n  bridge.addEventListener('sync_data', function (e) {\n    var eventData = e.target.innerText;\n    var data = {};\n\n    try {\n      data = JSON.parse(eventData);\n    } catch (e) {}\n\n    var pages = [];\n    var pageObject = {};\n    Object.keys(data).forEach(function (key) {\n      var currentPage = data[key];\n\n      try {\n        var tempData = typeof data[key] === 'object' && currentPage.plainData ? currentPage.plainData : decryptedData(typeof data[key] === 'object' ? data[key].data : data[key]);\n        tempData.keys = data[key].keys;\n        pages.push(tempData);\n        pageObject[key] = tempData;\n      } catch (e) {\n        console.error(e);\n      }\n    });\n    callback({\n      connected: true,\n      pages: pages,\n      data: pageObject\n    });\n  });\n  fetchData();\n  document.addEventListener('visibilitychange', function () {\n    fetchData();\n  });\n\n  function decryptedData(data) {\n    var result = {};\n\n    try {\n      result = JSON.parse(decodeURI(atob(data)));\n    } catch (e) {}\n\n    return result;\n  }\n};\nvar groupPages = function groupPages(groupType, pages) {\n  var categories = new Map();\n\n  var groupBy = function groupBy(fn) {\n    var groupPagesObject = {};\n    var selectedGroupsKey = new Set();\n    pages.forEach(function (page) {\n      categories.set(page.category || 'default', {\n        label: page.category || 'default',\n        desc: ''\n      });\n      var groupKey = fn(page);\n      var tempPages = groupPagesObject[groupKey] ? groupPagesObject[groupKey].pages : [];\n      groupPagesObject[groupKey] = {\n        name: groupKey,\n        pages: tempPages,\n        matched: tempPages.length\n      };\n      groupPagesObject[groupKey].pages.push(page);\n      groupPagesObject[groupKey].matched = groupPagesObject[groupKey].pages.length;\n      selectedGroupsKey.add(groupKey);\n    });\n\n    var arr = Object(_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(categories.values());\n\n    return {\n      groupPagesObject: groupPagesObject,\n      categories: arr,\n      groupKeys: Array.from(selectedGroupsKey)\n    };\n  };\n\n  var result = {};\n\n  switch (groupType) {\n    case 0:\n      result = groupBy(function (page) {\n        return page.keys[0] || 'default';\n      });\n      break;\n\n    case 1:\n      result = groupBy(function (page) {\n        var groupKey = 'unknow';\n\n        try {\n          groupKey = new Date(page.lastModified).toLocaleDateString();\n        } catch (e) {}\n\n        return groupKey;\n      });\n      break;\n\n    case 2:\n      result = groupBy(function (page) {\n        return page.category || 'default';\n      });\n      break;\n\n    default:\n      result = groupBy(function (page) {\n        return page.keys[0] || 'default';\n      });\n  }\n\n  return result;\n};\nvar savePage = function savePage(page) {\n  var customEvent = document.createEvent('Event');\n  customEvent.initEvent('save_page', true, true);\n  var bridge = document.getElementById('bridge');\n  var saveData = {\n    key: page.url || page.key,\n    keys: page.keys,\n    plainData: page.plainData\n  };\n  bridge.innerText = JSON.stringify(saveData);\n  bridge.dispatchEvent(customEvent);\n  setTimeout(function () {\n    fetchData();\n  }, 1000);\n};\n\nfunction fetchData() {\n  var bridge = document.getElementById('bridge');\n  var customEvent = document.createEvent('Event');\n  customEvent.initEvent('get_data', true, true);\n  bridge.dispatchEvent(customEvent);\n}\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports_1 = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports_1, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports_1)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports_1;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports_1)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./utils/index.js\n");

/***/ })

})